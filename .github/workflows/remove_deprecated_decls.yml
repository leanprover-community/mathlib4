name: Remove outdated deprecated declarations

on:
  schedule:
    - cron: "5 4 * * 1" # At 04:05, on Monday
  workflow_dispatch:
    inputs:
      cutoff_date:
        description: 'cutoff date (YYYY-MM-DD): remove deprecated declarations older than this (6 months ago by default)'
        required: false
        default: ''
        type: string
      dry_run:
        description: 'if true, only log the outdated declarations, do not remove them and open a PR'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Remove outdated deprecated declarations
    runs-on: ubuntu-latest
    if: github.repository == 'leanprover-community/mathlib4'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ## fetch the whole repository, as we want to push to it later
          fetch-depth: 0

      - name: remove outdated deprecated declarations
        id: remove
        shell: bash
        run: |
          # requirements:
          # - must leave the mathlib4 repo in a state that is ready to commit and push
          # - must assign a step output named `deprecation_date` containing the cutoff date for removed deprecations

          if [ "${{ inputs.cutoff_date }}" =~ "[0-9]{4}-[0-9]{2}-[0-9]{2}" ]; then
            echo "Using date from workflow_dispatch input"
            CUTOFF_DATE="${{ inputs.cutoff_date }}"
          else
            echo "Using default date (6 months ago)"
            CUTOFF_DATE=$(date -d '6 months ago' +%Y-%m-%d)
          fi
          echo "Removing deprecated declarations older than ${CUTOFF_DATE}..."
          echo "deprecation_date=${CUTOFF_DATE}" >> $GITHUB_OUTPUT

          dry_run_arg=""
          if [ "${{ toJson(inputs.dry_run) }}" = "true" ]; then
            dry_run_arg="--dry-run"
          fi
          # use parameter expansion to avoid giving the script an empty argument
          python scripts/remove_deprecated_decls.py ${dry_run_arg:+"$dry_run_arg"} "${CUTOFF_DATE}"

      - name: configure git setup
        run: |
          git remote add origin-bot "https://leanprover-community-bot:${{ secrets.UPDATE_NOLINTS_TOKEN }}@github.com/leanprover-community/mathlib4.git"
          git config user.email "leanprover.community@gmail.com"
          git config user.name "leanprover-community-bot"

          # By default, github actions overrides the credentials used to access any
          # github url so that it uses the github-actions[bot] user.  We want to access
          # github using a different username.
          git config --unset http.https://github.com/.extraheader

      - name: file a new PR to remove outdated deprecated declarations
        id: pr
        run: ./scripts/remove_deprecated_decls_CI.sh
        env:
          DEPLOY_GITHUB_TOKEN: ${{ secrets.UPDATE_NOLINTS_TOKEN }}
          DEPRECATION_DATE: ${{ steps.remove.outputs.deprecation_date }}

      - name: Send Zulip message
        uses: zulip/github-actions-zulip/send-message@e4c8f27c732ba9bd98ac6be0583096dea82feea5 # v1.0.2
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          email: 'github-mathlib4-bot@leanprover.zulipchat.com'
          organization-url: 'https://leanprover.zulipchat.com'
          to: 'nightly-testing'
          type: 'stream'
          topic: 'Mathlib `remove outdated deprecated declarations`'
          content: |
            ${{ steps.pr.outputs.message }}

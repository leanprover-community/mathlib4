[["checkType", "CPolynomialOn_congr"],
 ["checkType", "L_apply"],
 ["checkType", "ODE_solution_unique"],
 ["checkType", "ODE_solution_unique_of_mem_set"],
 ["checkType", "R_apply"],
 ["checkType", "Tilt"],
 ["checkType", "abs_circleMap_zero"],
 ["checkType", "abs_coe_circle"],
 ["checkType", "addRothNumber_Ico"],
 ["checkType", "addRothNumber_empty"],
 ["checkType", "addRothNumber_le"],
 ["checkType", "addRothNumber_lt_of_forall_not_addSalemSpencer"],
 ["checkType", "addRothNumber_map_add_left"],
 ["checkType", "addRothNumber_map_add_right"],
 ["checkType", "addRothNumber_singleton"],
 ["checkType", "addRothNumber_spec"],
 ["checkType", "addRothNumber_union_le"],
 ["checkType", "aemeasurable_map_equiv_iff"],
 ["checkType", "aemeasurable_of_re_im"],
 ["checkType", "affineHomeomorph_image_I"],
 ["checkType", "affineSpan_eq_top_of_nonempty_interior"],
 ["checkType", "algebraMap_isometry"],
 ["checkType", "algebraMap_memℓp_infty"],
 ["checkType", "analyticOn_congr"],
 ["checkType", "antilipschitzWith_lineMap"],
 ["checkType", "apply_fdifferential"],
 ["checkType", "apply_hfdifferential"],
 ["checkType", "arg_expMapCircle"],
 ["checkType", "balanced_convexHull_of_balanced"],
 ["checkType", "ball_prod_same"],
 ["checkType", "banach_steinhaus"],
 ["checkType", "banach_steinhaus_iSup_nnnorm"],
 ["checkType", "bernstein_apply"],
 ["checkType", "bernstein_nonneg"],
 ["checkType", "cauchyPowerSeries"],
 ["checkType", "cauchyPowerSeries_apply"],
 ["checkType", "centralBinom_factorization_small"],
 ["checkType", "circleIntegrable_iff"],
 ["checkType", "circleIntegral_def_Icc"],
 ["checkType", "circle_def"],
 ["checkType", "closedBall_prod_same"],
 ["checkType", "closure_convexHull_extremePoints"],
 ["checkType", "coeFn_fourierLp"],
 ["checkType", "coe_addEquiv_lpBcf"],
 ["checkType", "coe_addEquiv_lpBcf_symm"],
 ["checkType", "coe_addEquiv_lpPiLp"],
 ["checkType", "coe_addEquiv_lpPiLp_symm"],
 ["checkType", "coe_algEquiv_lpBcf"],
 ["checkType", "coe_algEquiv_lpBcf_symm"],
 ["checkType", "coe_basisOfOrthonormalOfCardEqFinrank"],
 ["checkType", "coe_equiv_lpPiLp"],
 ["checkType", "coe_equiv_lpPiLp_symm"],
 ["checkType", "coe_fourierBasis"],
 ["checkType", "coe_gramSchmidtBasis"],
 ["checkType", "coe_inv_circle_eq_conj"],
 ["checkType", "coe_lpBcfₗᵢ"],
 ["checkType", "coe_lpBcfₗᵢ_symm"],
 ["checkType", "coe_lpPiLpₗᵢ"],
 ["checkType", "coe_lpPiLpₗᵢ_symm"],
 ["checkType", "coe_normAddGroupSeminorm"],
 ["checkType", "coe_normGroupNorm"],
 ["checkType", "coe_normGroupSeminorm"],
 ["checkType", "coe_normSeminorm"],
 ["checkType", "coe_ringEquiv_lpBcf"],
 ["checkType", "coe_ringEquiv_lpBcf_symm"],
 ["checkType", "coe_starₗᵢ"],
 ["checkType", "completed_zeta_eq_mellin_of_one_lt_re"],
 ["checkType", "completelyRegularSpace_iff"],
 ["checkType", "conformalAt_iff"],
 ["checkType", "conformalAt_iff'"],
 ["checkType",
  "conformalAt_iff_differentiableAt_or_differentiableAt_comp_conj"],
 ["checkType", "conformalFactorAt_inner_eq_mul_inner"],
 ["checkType", "conformalFactorAt_inner_eq_mul_inner'"],
 ["checkType", "contDiffOn_clm_apply"],
 ["checkType", "contDiffOn_convolution_left_with_param"],
 ["checkType", "contDiffOn_convolution_left_with_param_comp"],
 ["checkType", "contDiffOn_convolution_right_with_param"],
 ["checkType", "contDiffOn_convolution_right_with_param_comp"],
 ["checkType", "contDiffOn_fderivWithin_apply"],
 ["checkType", "contDiffOn_stereoToFun"],
 ["checkType", "contDiffOn_succ_iff_fderiv_apply"],
 ["checkType", "contDiffOn_succ_of_fderiv_apply"],
 ["checkType", "contDiff_clm_apply_iff"],
 ["checkType", "contDiff_prodAssoc"],
 ["checkType", "contDiff_prodAssoc_symm"],
 ["checkType", "contDiff_succ_iff_fderiv_apply"],
 ["checkType", "contMDiffOn_iff_of_mem_maximalAtlas"],
 ["checkType", "contMDiffOn_iff_of_mem_maximalAtlas'"],
 ["checkType", "contMDiffOn_iff_of_subset_source"],
 ["checkType", "contMDiffOn_iff_of_subset_source'"],
 ["checkType", "contMDiff_expMapCircle"],
 ["checkType", "continuousAt_gaussian_integral"],
 ["checkType", "continuousFunctionalCalculus_map_id"],
 ["checkType", "continuousLinearMapOfTendsto"],
 ["checkType", "continuousMultilinearCurryFin0_apply"],
 ["checkType", "continuousMultilinearCurryFin0_symm_apply"],
 ["checkType", "continuousMultilinearCurryFin1_apply"],
 ["checkType", "continuousMultilinearCurryFin1_symm_apply"],
 ["checkType", "continuousMultilinearCurryLeftEquiv_apply"],
 ["checkType", "continuousMultilinearCurryLeftEquiv_symm_apply"],
 ["checkType", "continuousMultilinearCurryRightEquiv_apply"],
 ["checkType", "continuousMultilinearCurryRightEquiv_apply'"],
 ["checkType", "continuousMultilinearCurryRightEquiv_symm_apply"],
 ["checkType", "continuousMultilinearCurryRightEquiv_symm_apply'"],
 ["checkType", "continuousOn_clm_apply"],
 ["checkType", "continuousOn_convolution_right_with_param"],
 ["checkType", "continuousOn_convolution_right_with_param_comp"],
 ["checkType",
  "continuousOn_integral_bilinear_of_locally_integrable_of_compact_support"],
 ["checkType", "continuousOn_integral_of_compact_support"],
 ["checkType", "continuousOn_stereoToFun"],
 ["checkType", "continuous_barycentric_coord"],
 ["checkType", "continuous_clm_apply"],
 ["checkType", "continuous_equivFun_basis"],
 ["checkType", "continuous_of_linear_of_boundₛₗ"],
 ["checkType", "controlled_closure_range_of_complete"],
 ["checkType", "controlled_prod_of_mem_closure_range"],
 ["checkType", "controlled_sum_of_mem_closure_range"],
 ["checkType", "convexHull_diam"],
 ["checkType", "convexHull_ediam"],
 ["checkType", "convexHull_exists_dist_ge"],
 ["checkType", "convexHull_exists_dist_ge2"],
 ["checkType", "convolutionExistsAt_iff_integrable_swap"],
 ["checkType", "convolution_assoc"],
 ["checkType", "convolution_assoc'"],
 ["checkType", "convolution_def"],
 ["checkType", "convolution_eq_right'"],
 ["checkType", "convolution_eq_swap"],
 ["checkType", "convolution_integrand_bound_right_of_le_of_subset"],
 ["checkType", "convolution_precompR_apply"],
 ["checkType", "coord_norm'"],
 ["checkType", "derivWithin_ccos"],
 ["checkType", "derivWithin_ccosh"],
 ["checkType", "derivWithin_cexp"],
 ["checkType", "derivWithin_clm_apply"],
 ["checkType", "derivWithin_congr"],
 ["checkType", "derivWithin_csin"],
 ["checkType", "derivWithin_csinh"],
 ["checkType", "deriv_ccos"],
 ["checkType", "deriv_ccosh"],
 ["checkType", "deriv_cexp"],
 ["checkType", "deriv_circleMap"],
 ["checkType", "deriv_circleMap_eq_zero_iff"],
 ["checkType", "deriv_circleMap_ne_zero"],
 ["checkType", "deriv_clm_apply"],
 ["checkType", "deriv_csin"],
 ["checkType", "deriv_csinh"],
 ["checkType", "deriv_eqOn"],
 ["checkType", "det_rotation"],
 ["checkType", "differentiableAt_completed_zeta"],
 ["checkType", "differentiableAt_jacobiTheta"],
 ["checkType", "differentiableAt_jacobiTheta₂"],
 ["checkType", "differentiableAt_mellin_zetaKernel₁"],
 ["checkType", "differentiableAt_riemannZeta"],
 ["checkType", "differentiable_circleMap"],
 ["checkType", "differentiable_completed_zeta₀"],
 ["checkType", "differentiable_mellin_zetaKernel₂"],
 ["checkType", "dirichletLSeries_eulerProduct"],
 ["checkType", "dist_center_homothety"],
 ["checkType", "dist_convolution_le'"],
 ["checkType", "dist_homothety_center"],
 ["checkType", "dist_homothety_self"],
 ["checkType", "dist_left_lineMap"],
 ["checkType", "dist_left_pointReflection"],
 ["checkType", "dist_lineMap_left"],
 ["checkType", "dist_lineMap_lineMap"],
 ["checkType", "dist_lineMap_right"],
 ["checkType", "dist_ofAdd"],
 ["checkType", "dist_ofDual"],
 ["checkType", "dist_ofMul"],
 ["checkType", "dist_pointReflection_left"],
 ["checkType", "dist_pointReflection_right"],
 ["checkType", "dist_right_lineMap"],
 ["checkType", "dist_right_pointReflection"],
 ["checkType", "dist_self_homothety"],
 ["checkType", "dist_toAdd"],
 ["checkType", "dist_toDual"],
 ["checkType", "dist_toMul"],
 ["checkType", "domain_mvt"],
 ["checkType",
  "dvd_coeff_zero_of_aeval_eq_prime_smul_of_minpoly_isEisensteinAt"],
 ["checkType", "eigenvalue_mem_ball"],
 ["checkType", "eigenvalue_nonneg_of_nonneg"],
 ["checkType", "eigenvalue_pos_of_pos"],
 ["checkType", "eqOn_dslope_slope"],
 ["checkType", "eqOn_dslope_sub_smul"],
 ["checkType", "eq_lineMap_of_dist_eq_mul_of_dist_eq_mul"],
 ["checkType", "eq_of_derivWithin_eq"],
 ["checkType", "eq_of_norm_le_re_inner_eq_norm_sq"],
 ["checkType", "eq_orthogonalProjection_of_eq_submodule"],
 ["checkType", "eq_orthogonalProjection_of_mem_of_inner_eq_zero"],
 ["checkType", "eq_orthogonalProjection_of_mem_orthogonal"],
 ["checkType", "eq_orthogonalProjection_of_mem_orthogonal'"],
 ["checkType", "equicontinuous_of_equicontinuousAt_one"],
 ["checkType", "equicontinuous_of_equicontinuousAt_zero"],
 ["checkType", "equiv_lpPiLp_norm"],
 ["checkType", "eventually_homothety_image_subset_of_finite_subset_interior"],
 ["checkType", "eventually_homothety_mem_of_mem_interior"],
 ["checkType", "exists_bounded_mem_Icc_of_closed_of_le"],
 ["checkType", "exists_bounded_zero_one_of_closed"],
 ["checkType", "exists_contMDiffOn_forall_mem_convex_of_local"],
 ["checkType", "exists_continuous_forall_mem_convex_of_local"],
 ["checkType", "exists_continuous_forall_mem_convex_of_local_const"],
 ["checkType", "exists_continuous_one_zero_of_isCompact"],
 ["checkType", "exists_continuous_zero_one_of_isClosed"],
 ["checkType", "exists_continuous_zero_one_of_isCompact"],
 ["checkType", "exists_dual_vector"],
 ["checkType", "exists_dual_vector'"],
 ["checkType", "exists_dual_vector''"],
 ["checkType", "exists_embedding_euclidean_of_compact"],
 ["checkType", "exists_extension_norm_eq"],
 ["checkType", "exists_hilbertBasis"],
 ["checkType", "exists_lt_rieszContentAux_add_pos"],
 ["checkType", "exists_orthonormalBasis"],
 ["checkType", "exists_smooth_forall_mem_convex_of_local"],
 ["checkType", "exists_smooth_forall_mem_convex_of_local_const"],
 ["checkType", "exists_smooth_zero_one_of_closed"],
 ["checkType", "expMapCircleHom_apply"],
 ["checkType", "expMapCircle_add"],
 ["checkType", "expMapCircle_add_two_pi"],
 ["checkType", "expMapCircle_apply"],
 ["checkType", "expMapCircle_arg"],
 ["checkType", "expMapCircle_eq_expMapCircle"],
 ["checkType", "expMapCircle_neg"],
 ["checkType", "expMapCircle_sub"],
 ["checkType", "expMapCircle_sub_two_pi"],
 ["checkType", "expMapCircle_two_pi"],
 ["checkType", "expMapCircle_zero"],
 ["checkType", "ext_inner_map"],
 ["checkType", "fderivInnerClm_apply"],
 ["checkType", "fderivWithin_ccos"],
 ["checkType", "fderivWithin_ccosh"],
 ["checkType", "fderivWithin_clm_apply"],
 ["checkType", "fderivWithin_clm_comp"],
 ["checkType", "fderivWithin_congr"],
 ["checkType", "fderivWithin_congr'"],
 ["checkType", "fderivWithin_csin"],
 ["checkType", "fderivWithin_csinh"],
 ["checkType", "fderivWithin_derivWithin"],
 ["checkType", "fderivWithin_fderivWithin"],
 ["checkType", "fderivWithin_inv'"],
 ["checkType", "fderivWithin_iteratedFDerivWithin"],
 ["checkType", "fderiv_ccos"],
 ["checkType", "fderiv_ccosh"],
 ["checkType", "fderiv_clm_apply"],
 ["checkType", "fderiv_clm_comp"],
 ["checkType", "fderiv_csin"],
 ["checkType", "fderiv_csinh"],
 ["checkType", "fderiv_deriv"],
 ["checkType", "fderiv_inner_apply"],
 ["checkType", "fderiv_inv'"],
 ["checkType", "fderiv_inverse"],
 ["checkType", "fderiv_iteratedFDeriv"],
 ["checkType", "fdifferential"],
 ["checkType", "fdifferential_comp"],
 ["checkType", "fourierBasis"],
 ["checkType", "fourierBasis_repr"],
 ["checkType", "fourierCoeffOn_eq_integral"],
 ["checkType", "fourierCoeffOn_of_hasDerivAt"],
 ["checkType", "fourierCoeff_bernoulli_eq"],
 ["checkType", "fourierCoeff_eq_intervalIntegral"],
 ["checkType", "fourierCoeff_liftIco_eq"],
 ["checkType", "fourierCoeff_liftIoc_eq"],
 ["checkType", "fourierCoeff_toLp"],
 ["checkType", "fourierSubalgebra_closure_eq_top"],
 ["checkType", "fourierSubalgebra_coe"],
 ["checkType", "fourier_add"],
 ["checkType", "fourier_add'"],
 ["checkType", "fourier_add_half_inv_index"],
 ["checkType", "fourier_apply"],
 ["checkType", "fourier_coe_apply"],
 ["checkType", "fourier_eval_zero"],
 ["checkType", "fourier_integral_eq_half_sub_half_period_translate"],
 ["checkType", "fourier_integral_half_period_translate"],
 ["checkType", "fourier_integrand_integrable"],
 ["checkType", "fourier_neg"],
 ["checkType", "fourier_neg'"],
 ["checkType", "fourier_one"],
 ["checkType", "fourier_transform_gaussian"],
 ["checkType", "fourier_transform_gaussian_pi"],
 ["checkType", "fourier_transform_gaussian_pi'"],
 ["checkType", "fourier_zero"],
 ["checkType", "gal_C_isSolvable"],
 ["checkType", "gal_X_pow_sub_C_isSolvable"],
 ["checkType", "gal_X_pow_sub_C_isSolvable_aux"],
 ["checkType", "gal_X_sub_C_isSolvable"],
 ["checkType", "gaugeSeminorm_lt_one_of_isOpen"],
 ["checkType", "gaugeSeminorm_toFun"],
 ["checkType", "gaussSum_mulShift"],
 ["checkType", "gaussSum_sq"],
 ["checkType", "gelfandStarTransform_apply_apply"],
 ["checkType", "gelfandStarTransform_symm_apply"],
 ["checkType", "gelfandTransform_bijective"],
 ["checkType", "gelfandTransform_isometry"],
 ["checkType", "gelfandTransform_map_star"],
 ["checkType", "generateFrom_eq_prod"],
 ["checkType", "generateFrom_prod"],
 ["checkType", "generateFrom_prod_eq"],
 ["checkType", "geometric_hahn_banach_closed_compact"],
 ["checkType", "geometric_hahn_banach_closed_point"],
 ["checkType", "geometric_hahn_banach_compact_closed"],
 ["checkType", "geometric_hahn_banach_open"],
 ["checkType", "geometric_hahn_banach_open_open"],
 ["checkType", "geometric_hahn_banach_open_point"],
 ["checkType", "geometric_hahn_banach_point_closed"],
 ["checkType", "geometric_hahn_banach_point_open"],
 ["checkType", "geometric_hahn_banach_point_point"],
 ["checkType", "gradient_eq_deriv"],
 ["checkType", "gramSchmidtOrthonormalBasis_apply"],
 ["checkType", "gramSchmidtOrthonormalBasis_apply_of_orthogonal"],
 ["checkType", "gramSchmidtOrthonormalBasis_det"],
 ["checkType", "gramSchmidtOrthonormalBasis_inv_triangular"],
 ["checkType", "gramSchmidtOrthonormalBasis_inv_triangular'"],
 ["checkType", "gramSchmidt_def"],
 ["checkType", "gramSchmidt_def'"],
 ["checkType", "gramSchmidt_triangular"],
 ["checkType", "hasDerivAt_circleMap"],
 ["checkType", "hasDerivAt_fourier"],
 ["checkType", "hasDerivAt_fourier_neg"],
 ["checkType", "hasDerivAt_integral_of_dominated_loc_of_lip"],
 ["checkType", "hasDerivAt_ofReal_cpow"],
 ["checkType", "hasFDerivAtFilter_iff_hasDerivAtFilter"],
 ["checkType", "hasFDerivAtFilter_iff_isLittleO"],
 ["checkType", "hasFDerivAtFilter_iff_tendsto"],
 ["checkType", "hasFDerivAt_convolution_right_with_param"],
 ["checkType", "hasFDerivAt_iff_hasDerivAt"],
 ["checkType", "hasFDerivAt_iff_hasGradientAt"],
 ["checkType", "hasFDerivAt_iff_isLittleO_nhds_zero"],
 ["checkType", "hasFDerivAt_iff_tendsto"],
 ["checkType", "hasFDerivAt_integral_of_dominated_loc_of_lip"],
 ["checkType", "hasFDerivAt_inv'"],
 ["checkType", "hasFDerivAt_polarCoord_symm"],
 ["checkType", "hasFDerivAt_ring_inverse"],
 ["checkType", "hasFDerivAt_stereoInvFunAux_comp_coe"],
 ["checkType", "hasFDerivWithinAt_iff_hasDerivWithinAt"],
 ["checkType", "hasFDerivWithinAt_iff_hasGradientWithinAt"],
 ["checkType", "hasFDerivWithinAt_iff_tendsto"],
 ["checkType", "hasFPowerSeriesOn_cauchy_integral"],
 ["checkType", "hasFTaylorSeriesUpToOn_succ_iff_right"],
 ["checkType", "hasFTaylorSeriesUpTo_succ_iff_right"],
 ["checkType", "hasGradientAt_iff_hasFDerivAt"],
 ["checkType", "hasGradientWithinAt_iff_hasFDerivWithinAt"],
 ["checkType", "hasMellin_cpow_Ioc"],
 ["checkType", "hasMellin_one_Ioc"],
 ["checkType", "hasMellin_one_div_sqrt_Ioc"],
 ["checkType", "hasMellin_one_div_sqrt_sub_one_div_two_Ioc"],
 ["checkType", "hasStrictFDerivAt_iff_hasStrictDerivAt"],
 ["checkType", "hasStrictFDerivAt_norm_sq"],
 ["checkType", "hasSum_cauchyPowerSeries_integral"],
 ["checkType", "hasSum_fourier_series_L2"],
 ["checkType", "hasSum_fourier_series_of_summable"],
 ["checkType", "hasSum_one_div_nat_pow_mul_fourier"],
 ["checkType", "hasSum_one_div_pow_mul_fourier_mul_bernoulliFun"],
 ["checkType", "hasSum_two_pi_I_cauchyPowerSeries_integral"],
 ["checkType", "has_antideriv_at_fourier_neg"],
 ["checkType", "has_fderiv_at_filter_real_equiv"],
 ["checkType", "has_pointwise_sum_fourier_series_of_summable"],
 ["checkType", "hensels_lemma"],
 ["checkType", "hfdifferential"],
 ["checkType", "hom_trivializationAt_target"],
 ["checkType", "homeomorphUnitSphereProd_apply_fst_coe"],
 ["checkType", "homeomorphUnitSphereProd_apply_snd_coe"],
 ["checkType", "homeomorphUnitSphereProd_symm_apply_coe"],
 ["checkType", "iInter_halfspaces_eq"],
 ["checkType", "iccHomeoI_apply_coe"],
 ["checkType", "iccHomeoI_symm_apply_coe"],
 ["checkType",
  "im_inner_eq_norm_sub_i_smul_mul_self_sub_norm_add_i_smul_mul_self_div_four"],
 ["checkType", "image_norm_nonempty"],
 ["checkType", "image_parallelepiped"],
 ["checkType", "imaginaryPart_I_smul"],
 ["checkType", "imaginaryPart_apply_coe"],
 ["checkType", "imaginaryPart_eq_neg_I_smul_skewAdjointPart"],
 ["checkType", "imaginaryPart_imaginaryPart"],
 ["checkType", "imaginaryPart_ofReal"],
 ["checkType", "imaginaryPart_realPart"],
 ["checkType", "imaginaryPart_smul"],
 ["checkType", "imaginaryPart_surjective"],
 ["checkType", "indicator_le_thickenedIndicator"],
 ["checkType", "innerDualCone_singleton"],
 ["checkType", "innerSLFlip_apply"],
 ["checkType", "innerSL_apply"],
 ["checkType", "innerSL_apply_coe"],
 ["checkType", "innerSL_apply_norm"],
 ["checkType", "inner_conj_symm"],
 ["checkType", "inner_gramSchmidtOrthonormalBasis_eq_zero"],
 ["checkType", "inner_im_symm"],
 ["checkType", "inner_map_complex"],
 ["checkType", "inner_map_polarization"],
 ["checkType", "inner_map_polarization'"],
 ["checkType", "inner_map_self_eq_zero"],
 ["checkType", "inner_matrix_col_col"],
 ["checkType", "inner_matrix_row_row"],
 ["checkType", "inner_mul_inner_self_le"],
 ["checkType", "inner_mul_symm_re_eq_norm"],
 ["checkType", "inner_orthogonalProjection_eq_of_mem_left"],
 ["checkType", "inner_orthogonalProjection_eq_of_mem_right"],
 ["checkType", "inner_orthogonalProjection_left_eq_right"],
 ["checkType", "inner_product_apply_eigenvector"],
 ["checkType", "inner_re_symm"],
 ["checkType", "inner_re_zero_left"],
 ["checkType", "inner_re_zero_right"],
 ["checkType", "inner_self_conj"],
 ["checkType", "inner_self_eq_norm_mul_norm"],
 ["checkType", "inner_self_eq_norm_sq"],
 ["checkType", "inner_self_im"],
 ["checkType", "inner_self_nonneg"],
 ["checkType", "inner_self_nonpos"],
 ["checkType", "inner_self_ofReal_re"],
 ["checkType", "inner_self_re_eq_norm"],
 ["checkType", "inner_smul_left"],
 ["checkType", "innerₛₗ_apply"],
 ["checkType", "innerₛₗ_apply_coe"],
 ["checkType", "integral_Ioi_cpow_of_lt"],
 ["checkType", "integral_cexp_quadratic"],
 ["checkType", "integral_coe_re_add_coe_im"],
 ["checkType", "integral_conj"],
 ["checkType", "integral_convolution"],
 ["checkType", "integral_cos_mul_complex"],
 ["checkType", "integral_cpow"],
 ["checkType", "integral_cpow_mul_exp_neg_pi_mul_sq"],
 ["checkType", "integral_exp_mul_complex"],
 ["checkType", "integral_gaussian_complex"],
 ["checkType", "integral_gaussian_complex_Ioi"],
 ["checkType", "integral_gaussian_sq_complex"],
 ["checkType", "integral_im"],
 ["checkType", "integral_mul_cexp_neg_mul_sq"],
 ["checkType", "integral_mul_cpow_one_add_sq"],
 ["checkType", "integral_posConvolution"],
 ["checkType", "integral_re"],
 ["checkType", "integral_re_add_im"],
 ["checkType", "interior_convexHull_nonempty_iff_affineSpan_eq_top"],
 ["checkType", "invOn_arg_expMapCircle"],
 ["checkType", "isBigO_norm_Icc_restrict_atBot"],
 ["checkType", "isBigO_norm_Icc_restrict_atTop"],
 ["checkType", "isBigO_norm_restrict_cocompact"],
 ["checkType", "isBoundedBilinearMap_apply"],
 ["checkType", "isBounded_convexHull"],
 ["checkType", "isClosed_setOf_isCompactOperator"],
 ["checkType", "isCompactOperator_iff_image_ball_subset_compact"],
 ["checkType", "isCompactOperator_iff_image_closedBall_subset_compact"],
 ["checkType", "isCompactOperator_iff_isCompact_closure_image_ball"],
 ["checkType", "isCompactOperator_iff_isCompact_closure_image_closedBall"],
 ["checkType", "isCompactOperator_of_tendsto"],
 ["checkType", "isConformalMap_complex_linear"],
 ["checkType", "isConformalMap_complex_linear_conj"],
 ["checkType", "isConformalMap_conj"],
 ["checkType", "isConformalMap_iff"],
 ["checkType", "isConformalMap_iff_is_complex_or_conj_linear"],
 ["checkType", "isGLB_quotient_norm"],
 ["checkType", "isOpenMap_barycentric_coord"],
 ["checkType", "isPiSystem_prod"],
 ["checkType", "iteratedDerivWithin_eq_equiv_comp"],
 ["checkType", "iteratedDerivWithin_eq_iteratedFDerivWithin"],
 ["checkType", "iteratedDeriv_eq_equiv_comp"],
 ["checkType", "iteratedDeriv_eq_iteratedFDeriv"],
 ["checkType", "iteratedFDerivWithin_apply_eq_iteratedDerivWithin_mul_prod"],
 ["checkType", "iteratedFDerivWithin_congr"],
 ["checkType", "iteratedFDerivWithin_eq_equiv_comp"],
 ["checkType", "iteratedFDerivWithin_of_isOpen"],
 ["checkType", "iteratedFDerivWithin_one_apply"],
 ["checkType", "iteratedFDerivWithin_succ_apply_left"],
 ["checkType", "iteratedFDerivWithin_succ_apply_right"],
 ["checkType", "iteratedFDerivWithin_succ_eq_comp_left"],
 ["checkType", "iteratedFDerivWithin_succ_eq_comp_right"],
 ["checkType", "iteratedFDerivWithin_zero_apply"],
 ["checkType", "iteratedFDerivWithin_zero_eq_comp"],
 ["checkType", "iteratedFDeriv_apply_eq_iteratedDeriv_mul_prod"],
 ["checkType", "iteratedFDeriv_eq_equiv_comp"],
 ["checkType", "iteratedFDeriv_one_apply"],
 ["checkType", "iteratedFDeriv_succ_apply_left"],
 ["checkType", "iteratedFDeriv_succ_apply_right"],
 ["checkType", "iteratedFDeriv_succ_eq_comp_left"],
 ["checkType", "iteratedFDeriv_succ_eq_comp_right"],
 ["checkType", "iteratedFDeriv_zero_apply"],
 ["checkType", "iteratedFDeriv_zero_eq_comp"],
 ["checkType", "le_addRothNumber_product"],
 ["checkType", "le_mulRothNumber_product"],
 ["checkType", "le_radius_cauchyPowerSeries"],
 ["checkType", "leftInverse_expMapCircle_arg"],
 ["checkType", "lineDerivWithin_congr"],
 ["checkType", "lineDerivWithin_congr'"],
 ["checkType", "linearEquiv_det_rotation"],
 ["checkType", "linear_isometry_complex"],
 ["checkType", "linear_isometry_complex_aux"],
 ["checkType", "lipschitzWith_circleMap"],
 ["checkType", "lipschitzWith_lineMap"],
 ["checkType", "locallyConvexSpace_induced"],
 ["checkType", "map_real_smul"],
 ["checkType", "mapsTo_extChartAt"],
 ["checkType", "mapsTo_tangentCone_pi"],
 ["checkType", "maximal_orthonormal_iff_basis_of_finiteDimensional"],
 ["checkType", "mdifferentiable_jacobiTheta"],
 ["checkType", "measurable_fderiv_apply_const"],
 ["checkType", "measurable_fderiv_apply_const_with_param"],
 ["checkType", "measurable_of_re_im"],
 ["checkType", "measure_le_lintegral_thickenedIndicator"],
 ["checkType", "mellin_differentiableAt_of_isBigO_rpow"],
 ["checkType", "mellin_differentiableAt_of_isBigO_rpow_exp"],
 ["checkType", "mellin_div_const"],
 ["checkType", "mellin_zetaKernel₁_eq_tsum"],
 ["checkType", "mellin_zetaKernel₂_eq_of_lt_re"],
 ["checkType", "mem_adjoin_of_dvd_coeff_of_dvd_aeval"],
 ["checkType", "mem_circle_iff_abs"],
 ["checkType", "mem_circle_iff_normSq"],
 ["checkType", "mfderiv_coe_sphere_injective"],
 ["checkType", "mulLeft_bound"],
 ["checkType", "mulRight_bound"],
 ["checkType", "mulRothNumber_empty"],
 ["checkType", "mulRothNumber_le"],
 ["checkType", "mulRothNumber_lt_of_forall_not_mulSalemSpencer"],
 ["checkType", "mulRothNumber_map_mul_left"],
 ["checkType", "mulRothNumber_map_mul_right"],
 ["checkType", "mulRothNumber_singleton"],
 ["checkType", "mulRothNumber_spec"],
 ["checkType", "mulRothNumber_union_le"],
 ["checkType", "nndist_center_homothety"],
 ["checkType", "nndist_homothety_center"],
 ["checkType", "nndist_homothety_self"],
 ["checkType", "nndist_left_lineMap"],
 ["checkType", "nndist_lineMap_left"],
 ["checkType", "nndist_lineMap_lineMap"],
 ["checkType", "nndist_lineMap_right"],
 ["checkType", "nndist_ofAdd"],
 ["checkType", "nndist_ofDual"],
 ["checkType", "nndist_ofMul"],
 ["checkType", "nndist_right_lineMap"],
 ["checkType", "nndist_self_homothety"],
 ["checkType", "nndist_toAdd"],
 ["checkType", "nndist_toDual"],
 ["checkType", "nndist_toMul"],
 ["checkType", "nnnormHom_apply"],
 ["checkType", "nnnorm_algebraMap"],
 ["checkType", "nnnorm_algebraMap'"],
 ["checkType", "nnnorm_algebraMap_nNReal"],
 ["checkType", "nnnorm_ofAdd"],
 ["checkType", "nnnorm_ofDual"],
 ["checkType", "nnnorm_ofMul"],
 ["checkType", "nnnorm_toAdd"],
 ["checkType", "nnnorm_toDual"],
 ["checkType", "nnnorm_toMul"],
 ["checkType", "normHom_apply"],
 ["checkType", "normSq_eq_of_mem_circle"],
 ["checkType", "norm_add_mul_self"],
 ["checkType", "norm_add_pow_two"],
 ["checkType", "norm_add_sq"],
 ["checkType", "norm_algebraMap"],
 ["checkType", "norm_algebraMap'"],
 ["checkType", "norm_algebraMap_nNReal"],
 ["checkType", "norm_cauchyPowerSeries_le"],
 ["checkType", "norm_eq_sqrt_inner"],
 ["checkType", "norm_image_of_norm_zero"],
 ["checkType", "norm_injOn_ray_left"],
 ["checkType", "norm_injOn_ray_right"],
 ["checkType", "norm_iteratedFDerivWithin_clm_apply"],
 ["checkType", "norm_iteratedFDerivWithin_clm_apply_const"],
 ["checkType", "norm_iteratedFDerivWithin_comp_le"],
 ["checkType", "norm_iteratedFDerivWithin_comp_le_aux"],
 ["checkType", "norm_iteratedFDeriv_clm_apply"],
 ["checkType", "norm_iteratedFDeriv_clm_apply_const"],
 ["checkType", "norm_mk_eq_zero"],
 ["checkType", "norm_mk_lt"],
 ["checkType", "norm_mk_lt'"],
 ["checkType", "norm_mk_nonneg"],
 ["checkType", "norm_ofAdd"],
 ["checkType", "norm_ofDual"],
 ["checkType", "norm_ofMul"],
 ["checkType", "norm_sq_eq_add_norm_sq_projection"],
 ["checkType", "norm_sub_mul_self"],
 ["checkType", "norm_sub_pow_two"],
 ["checkType", "norm_sub_sq"],
 ["checkType", "norm_toAdd"],
 ["checkType", "norm_toDual"],
 ["checkType", "norm_toMul"],
 ["checkType", "normedAddGroupHomCompletionHom_apply"],
 ["checkType", "one_le_thickenedIndicator_apply"],
 ["checkType", "one_le_thickenedIndicator_apply'"],
 ["checkType", "one_lt_natDegree_of_irrational_root"],
 ["checkType", "orthogonalFamily_iff_pairwise"],
 ["checkType", "orthogonalProjectionFn_eq"],
 ["checkType", "orthogonalProjection_add_orthogonalProjection_orthogonal"],
 ["checkType", "orthogonalProjection_eq_linear_proj"],
 ["checkType", "orthogonalProjection_eq_self_iff"],
 ["checkType", "orthogonalProjection_eq_zero_iff"],
 ["checkType", "orthogonalProjection_inner_eq_zero"],
 ["checkType", "orthogonalProjection_map_apply"],
 ["checkType", "orthogonalProjection_mem_subspace_eq_self"],
 ["checkType",
  "orthogonalProjection_mem_subspace_orthogonalComplement_eq_zero"],
 ["checkType",
  "orthogonalProjection_mem_subspace_orthogonal_precomplement_eq_zero"],
 ["checkType", "orthogonalProjection_minimal"],
 ["checkType", "orthogonalProjection_norm_le"],
 ["checkType", "orthogonalProjection_orthogonal"],
 ["checkType", "orthogonalProjection_orthogonalComplement_singleton_eq_zero"],
 ["checkType", "orthogonalProjection_orthogonalProjection_of_le"],
 ["checkType", "orthogonalProjection_orthogonal_val"],
 ["checkType", "orthogonalProjection_singleton"],
 ["checkType", "orthogonalProjection_tendsto_closure_iSup"],
 ["checkType", "orthogonalProjection_tendsto_self"],
 ["checkType", "orthogonalProjection_unit_singleton"],
 ["checkType", "orthonormalBasis_one_dim"],
 ["checkType", "orthonormal_fourier"],
 ["checkType", "parallelepiped_comp_equiv"],
 ["checkType", "parallelepiped_eq_convexHull"],
 ["checkType", "parallelepiped_orthonormalBasis_one_dim"],
 ["checkType", "periodic_expMapCircle"],
 ["checkType", "polarCoord_apply"],
 ["checkType", "polynomialFunctions_coe"],
 ["checkType", "prod_iInter"],
 ["checkType", "quadraticChar_card_card"],
 ["checkType", "quadraticChar_neg_two"],
 ["checkType", "quadraticChar_odd_prime"],
 ["checkType", "quadraticChar_two"],
 ["checkType", "quotient_norm_eq_zero_iff"],
 ["checkType", "quotient_norm_mk_eq"],
 ["checkType", "quotient_norm_mk_le"],
 ["checkType",
  "re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two"],
 ["checkType", "re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four"],
 ["checkType",
  "re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two"],
 ["checkType", "re_inner_le_norm"],
 ["checkType", "realPart_I_smul"],
 ["checkType", "realPart_add_I_smul_imaginaryPart"],
 ["checkType", "realPart_apply_coe"],
 ["checkType", "realPart_idem"],
 ["checkType", "realPart_imaginaryPart"],
 ["checkType", "realPart_ofReal"],
 ["checkType", "realPart_smul"],
 ["checkType", "realPart_surjective"],
 ["checkType", "real_inner_eq_re_inner"],
 ["checkType", "reflection_apply"],
 ["checkType", "reflection_eq_self_iff"],
 ["checkType", "reflection_involutive"],
 ["checkType", "reflection_map_apply"],
 ["checkType", "reflection_mem_subspace_eq_self"],
 ["checkType", "reflection_mem_subspace_orthogonalComplement_eq_neg"],
 ["checkType", "reflection_mem_subspace_orthogonal_precomplement_eq_neg"],
 ["checkType", "reflection_orthogonalComplement_singleton_eq_neg"],
 ["checkType", "reflection_orthogonal_apply"],
 ["checkType", "reflection_reflection"],
 ["checkType", "reflection_singleton_apply"],
 ["checkType", "reflection_sub"],
 ["checkType", "regionBetween_subset"],
 ["checkType", "rieszContentAux_image_nonempty"],
 ["checkType", "rieszContentAux_le"],
 ["checkType", "ringHom_monotone"],
 ["checkType", "rotationOf_coe"],
 ["checkType", "rotationOf_rotation"],
 ["checkType", "rotation_apply"],
 ["checkType", "rotation_injective"],
 ["checkType", "rotation_ne_conjLie"],
 ["checkType", "rotation_symm"],
 ["checkType", "rotation_trans"],
 ["checkType", "rothNumberNat_add_le"],
 ["checkType", "rothNumberNat_def"],
 ["checkType", "rothNumberNat_isBigOWith_id"],
 ["checkType", "rothNumberNat_isBigO_id"],
 ["checkType", "rothNumberNat_le"],
 ["checkType", "rothNumberNat_spec"],
 ["checkType", "rothNumberNat_zero"],
 ["checkType", "second_derivative_symmetric"],
 ["checkType", "second_derivative_symmetric_of_eventually"],
 ["checkType", "separate_convex_open_set"],
 ["checkType", "separatingDual_def"],
 ["checkType", "separatingDual_iff_injective"],
 ["checkType", "sesqFormOfInner_apply_apply"],
 ["checkType", "setIntegral_Ioi_zero_cpow"],
 ["checkType", "set_integral_re_add_im"],
 ["checkType", "skewAdjointPart_eq_I_smul_imaginaryPart"],
 ["checkType", "smoothLeftMul_one"],
 ["checkType", "smoothRightMul_one"],
 ["checkType", "smooth_barycentric_coord"],
 ["checkType", "smul_orthogonalProjection_singleton"],
 ["checkType", "span_fourierLp_closure_eq_top"],
 ["checkType", "span_fourier_closure_eq_top"],
 ["checkType", "sphere_prod"],
 ["checkType", "splits_X_pow_sub_one_of_X_pow_sub_C"],
 ["checkType", "starₗᵢ_apply"],
 ["checkType", "stdOrthonormalBasis_def"],
 ["checkType", "stereoToFun_apply"],
 ["checkType", "stereographic'_symm_apply"],
 ["checkType", "stereographic_apply"],
 ["checkType", "sub_orthogonalProjection_mem_orthogonal"],
 ["checkType", "subset_tangentCone_prod_left"],
 ["checkType", "subset_tangentCone_prod_right"],
 ["checkType", "sum_cauchyPowerSeries_eq_integral"],
 ["checkType", "summable_dirichletSummand"],
 ["checkType", "summable_riemannZetaSummand"],
 ["checkType", "surjOn_expMapCircle_neg_pi_pi"],
 ["checkType", "surjOn_extremePoints_image"],
 ["checkType", "tangentBundleModelSpaceHomeomorph_coe"],
 ["checkType", "tangentBundleModelSpaceHomeomorph_coe_symm"],
 ["checkType", "tangentBundle_model_space_coe_chartAt"],
 ["checkType", "tangentBundle_model_space_coe_chartAt_symm"],
 ["checkType", "tangentCoordChange_comp"],
 ["checkType", "tangentCoordChange_self"],
 ["checkType", "tangentMap_chart"],
 ["checkType", "tangentMap_chart_symm"],
 ["checkType", "taylorWithin_succ"],
 ["checkType", "tendsto_algebraMap_inverse_atTop_nhds_0_nat"],
 ["checkType", "tendsto_integral_exp_inner_smul_cocompact"],
 ["checkType",
  "tendsto_integral_exp_inner_smul_cocompact_of_continuous_compact_support"],
 ["checkType", "tendsto_integral_exp_smul_cocompact"],
 ["checkType", "tendsto_integral_exp_smul_cocompact_of_inner_product"],
 ["checkType", "thickenedIndicator_apply"],
 ["checkType", "thickenedIndicator_le_one"],
 ["checkType", "thickenedIndicator_mono"],
 ["checkType", "thickenedIndicator_one"],
 ["checkType", "thickenedIndicator_one_of_mem_closure"],
 ["checkType", "thickenedIndicator_subset"],
 ["checkType", "thickenedIndicator_tendsto_indicator_closure"],
 ["checkType", "thickenedIndicator_toFun"],
 ["checkType", "thickenedIndicator_zero"],
 ["checkType", "toMatrix_rotation"],
 ["checkType", "torusIntegral_const_mul"],
 ["checkType", "tsum_sq_fourierCoeff"],
 ["checkType", "uniformEquicontinuous_of_equicontinuousAt_one"],
 ["checkType", "uniformEquicontinuous_of_equicontinuousAt_zero"],
 ["checkType", "unitSphereToUnits_apply_coe"],
 ["checkType", "unitSphereToUnits_injective"],
 ["checkType", "AEMeasurable.apply_continuousLinearMap"],
 ["checkType", "AEMeasurable.im"],
 ["checkType", "AEMeasurable.re"],
 ["checkType", "AddChar.coe_to_fun_apply"],
 ["checkType", "AddChar.ext"],
 ["checkType", "AddChar.instFunLike"],
 ["checkType", "AddChar.inv_apply"],
 ["checkType", "AddChar.map_add_mul"],
 ["checkType", "AddChar.map_nsmul_pow"],
 ["checkType", "AddChar.map_zero_one"],
 ["checkType", "AddChar.map_zsmul_zpow"],
 ["checkType", "AddChar.mulShift_apply"],
 ["checkType", "AddChar.mulShift_spec'"],
 ["checkType", "AddChar.mul_apply"],
 ["checkType", "AddChar.one_apply"],
 ["checkType", "AddChar.sum_eq_card_of_is_trivial"],
 ["checkType", "AddChar.sum_eq_zero_of_isNontrivial"],
 ["checkType", "AddChar.sum_mulShift"],
 ["checkType", "AddChar.zmodChar_apply"],
 ["checkType", "AddChar.zmodChar_apply'"],
 ["checkType", "AddChar.zmod_char_isNontrivial_iff"],
 ["checkType", "AddChar.zmod_char_primitive_of_eq_one_only_at_zero"],
 ["checkType", "AddCircle.coe_equivIco_mk_apply"],
 ["checkType", "AddCircle.continuousAt_equivIco"],
 ["checkType", "AddCircle.continuousAt_equivIoc"],
 ["checkType", "AddCircle.continuous_equivIco_symm"],
 ["checkType", "AddCircle.continuous_equivIoc_symm"],
 ["checkType", "AddCircle.continuous_mk'"],
 ["checkType", "AddCircle.equivAddCircle_apply_mk"],
 ["checkType", "AddCircle.equivAddCircle_symm_apply_mk"],
 ["checkType", "AddCircle.equivIccQuot_comp_mk_eq_toIcoMod"],
 ["checkType", "AddCircle.equivIccQuot_comp_mk_eq_toIocMod"],
 ["checkType", "AddCircle.liftIco_eq_lift_Icc"],
 ["checkType", "AddCircle.scaled_exp_map_periodic"],
 ["checkType", "AddEquiv.isAddHaarMeasure_map"],
 ["checkType", "AddEquiv.toRealLinearEquiv"],
 ["checkType", "AddMonoidHom.coe_toRealLinearMap"],
 ["checkType", "AddMonoidHom.isOpenMap_of_sigmaCompact"],
 ["checkType", "AddMonoidHom.mkNormedAddGroupHom"],
 ["checkType", "AddMonoidHom.mkNormedAddGroupHom'"],
 ["checkType", "AddMonoidHom.mkNormedAddGroupHom_norm_le"],
 ["checkType", "AddMonoidHom.mkNormedAddGroupHom_norm_le'"],
 ["checkType", "AddMonoidHom.toRealLinearMap"],
 ["checkType", "AddMonoidHomClass.antilipschitz_of_bound"],
 ["checkType", "AddMonoidHomClass.continuous_of_bound"],
 ["checkType", "AddMonoidHomClass.isometry_iff_norm"],
 ["checkType", "AddMonoidHomClass.isometry_of_norm"],
 ["checkType", "AddMonoidHomClass.lipschitz_of_bound"],
 ["checkType", "AddMonoidHomClass.lipschitz_of_bound_nnnorm"],
 ["checkType", "AddMonoidHomClass.uniformContinuous_of_bound"],
 ["checkType", "AddSalemSpencer.image"],
 ["checkType", "AddSalemSpencer.le_addRothNumber"],
 ["checkType", "AddSalemSpencer.le_rothNumberNat"],
 ["checkType", "AddSalemSpencer.of_image"],
 ["checkType", "AddSalemSpencer.prod"],
 ["checkType", "AddSalemSpencer.roth_number_eq"],
 ["checkType", "AddSubgroup.surjective_normedMk"],
 ["checkType", "AddSubgroup.tendsto_zmultiples_subtype_cofinite"],
 ["checkType", "AffineBasis.centroid_mem_interior_convexHull"],
 ["checkType", "AffineBasis.interior_convexHull"],
 ["checkType", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional"],
 ["checkType", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional_symm"],
 ["checkType", "AffineEquiv.continuous_of_finiteDimensional"],
 ["checkType", "AffineEquiv.sOppSide_map_iff"],
 ["checkType", "AffineEquiv.sSameSide_map_iff"],
 ["checkType", "AffineEquiv.wOppSide_map_iff"],
 ["checkType", "AffineEquiv.wSameSide_map_iff"],
 ["checkType", "AffineIsometry.angle_map"],
 ["checkType", "AffineIsometry.antilipschitz"],
 ["checkType", "AffineIsometry.coeFn_injective"],
 ["checkType", "AffineIsometry.coe_comp"],
 ["checkType", "AffineIsometry.coe_id"],
 ["checkType", "AffineIsometry.coe_mul"],
 ["checkType", "AffineIsometry.coe_one"],
 ["checkType", "AffineIsometry.coe_toAffineIsometryEquiv"],
 ["checkType", "AffineIsometry.coe_toAffineMap"],
 ["checkType", "AffineIsometry.comp_continuous_iff"],
 ["checkType", "AffineIsometry.continuous"],
 ["checkType", "AffineIsometry.diam_image"],
 ["checkType", "AffineIsometry.diam_range"],
 ["checkType", "AffineIsometry.dist_map"],
 ["checkType", "AffineIsometry.ediam_image"],
 ["checkType", "AffineIsometry.ediam_range"],
 ["checkType", "AffineIsometry.edist_map"],
 ["checkType", "AffineIsometry.ext"],
 ["checkType", "AffineIsometry.id_apply"],
 ["checkType", "AffineIsometry.image_intrinsicClosure"],
 ["checkType", "AffineIsometry.image_intrinsicFrontier"],
 ["checkType", "AffineIsometry.image_intrinsicInterior"],
 ["checkType", "AffineIsometry.injective"],
 ["checkType", "AffineIsometry.instFunLikeAffineIsometry"],
 ["checkType", "AffineIsometry.isometry"],
 ["checkType", "AffineIsometry.lipschitz"],
 ["checkType", "AffineIsometry.map_eq_iff"],
 ["checkType", "AffineIsometry.map_ne"],
 ["checkType", "AffineIsometry.map_vadd"],
 ["checkType", "AffineIsometry.map_vsub"],
 ["checkType", "AffineIsometry.mk"],
 ["checkType", "AffineIsometry.nndist_map"],
 ["checkType", "AffineIsometry.norm_map"],
 ["checkType", "AffineIsometry.rec"],
 ["checkType", "AffineIsometry.toAffineIsometryEquiv_apply"],
 ["checkType", "AffineIsometryEquiv.antilipschitz"],
 ["checkType", "AffineIsometryEquiv.apply_symm_apply"],
 ["checkType", "AffineIsometryEquiv.bijective"],
 ["checkType", "AffineIsometryEquiv.coe_constVAdd"],
 ["checkType", "AffineIsometryEquiv.coe_constVSub"],
 ["checkType", "AffineIsometryEquiv.coe_inv"],
 ["checkType", "AffineIsometryEquiv.coe_mk"],
 ["checkType", "AffineIsometryEquiv.coe_mk'"],
 ["checkType", "AffineIsometryEquiv.coe_mul"],
 ["checkType", "AffineIsometryEquiv.coe_one"],
 ["checkType", "AffineIsometryEquiv.coe_refl"],
 ["checkType", "AffineIsometryEquiv.coe_symm_trans"],
 ["checkType", "AffineIsometryEquiv.coe_toAffineEquiv"],
 ["checkType", "AffineIsometryEquiv.coe_toAffineIsometry"],
 ["checkType", "AffineIsometryEquiv.coe_toHomeomorph"],
 ["checkType", "AffineIsometryEquiv.coe_toIsometryEquiv"],
 ["checkType", "AffineIsometryEquiv.coe_trans"],
 ["checkType", "AffineIsometryEquiv.coe_vaddConst"],
 ["checkType", "AffineIsometryEquiv.coe_vaddConst'"],
 ["checkType", "AffineIsometryEquiv.coe_vaddConst_symm"],
 ["checkType", "AffineIsometryEquiv.comp_continuousOn_iff"],
 ["checkType", "AffineIsometryEquiv.comp_continuous_iff"],
 ["checkType", "AffineIsometryEquiv.continuous"],
 ["checkType", "AffineIsometryEquiv.continuousAt"],
 ["checkType", "AffineIsometryEquiv.continuousOn"],
 ["checkType", "AffineIsometryEquiv.continuousWithinAt"],
 ["checkType", "AffineIsometryEquiv.diam_image"],
 ["checkType", "AffineIsometryEquiv.dist_map"],
 ["checkType", "AffineIsometryEquiv.dist_pointReflection_fixed"],
 ["checkType", "AffineIsometryEquiv.dist_pointReflection_self"],
 ["checkType", "AffineIsometryEquiv.dist_pointReflection_self'"],
 ["checkType", "AffineIsometryEquiv.dist_pointReflection_self_real"],
 ["checkType", "AffineIsometryEquiv.ediam_image"],
 ["checkType", "AffineIsometryEquiv.edist_map"],
 ["checkType", "AffineIsometryEquiv.ext"],
 ["checkType", "AffineIsometryEquiv.injective"],
 ["checkType", "AffineIsometryEquiv.isometry"],
 ["checkType", "AffineIsometryEquiv.linearIsometryEquiv_mk'"],
 ["checkType", "AffineIsometryEquiv.lipschitz"],
 ["checkType", "AffineIsometryEquiv.map_eq_iff"],
 ["checkType", "AffineIsometryEquiv.map_ne"],
 ["checkType", "AffineIsometryEquiv.map_vadd"],
 ["checkType", "AffineIsometryEquiv.map_vsub"],
 ["checkType", "AffineIsometryEquiv.mk"],
 ["checkType", "AffineIsometryEquiv.mk'"],
 ["checkType", "AffineIsometryEquiv.norm_map"],
 ["checkType", "AffineIsometryEquiv.pointReflection_apply"],
 ["checkType", "AffineIsometryEquiv.pointReflection_fixed_iff"],
 ["checkType", "AffineIsometryEquiv.pointReflection_involutive"],
 ["checkType", "AffineIsometryEquiv.pointReflection_midpoint_left"],
 ["checkType", "AffineIsometryEquiv.pointReflection_midpoint_right"],
 ["checkType", "AffineIsometryEquiv.pointReflection_self"],
 ["checkType", "AffineIsometryEquiv.range_eq_univ"],
 ["checkType", "AffineIsometryEquiv.rec"],
 ["checkType", "AffineIsometryEquiv.surjective"],
 ["checkType", "AffineIsometryEquiv.symm_apply_apply"],
 ["checkType", "AffineMap.continuous_linear_iff"],
 ["checkType", "AffineMap.continuous_of_finiteDimensional"],
 ["checkType", "AffineMap.deriv"],
 ["checkType", "AffineMap.derivWithin"],
 ["checkType", "AffineMap.differentiable"],
 ["checkType", "AffineMap.differentiableAt"],
 ["checkType", "AffineMap.differentiableOn"],
 ["checkType", "AffineMap.differentiableWithinAt"],
 ["checkType", "AffineMap.hasDerivAt"],
 ["checkType", "AffineMap.hasDerivAtFilter"],
 ["checkType", "AffineMap.hasDerivAt_lineMap"],
 ["checkType", "AffineMap.hasDerivWithinAt"],
 ["checkType", "AffineMap.hasDerivWithinAt_lineMap"],
 ["checkType", "AffineMap.hasStrictDerivAt"],
 ["checkType", "AffineMap.hasStrictDerivAt_lineMap"],
 ["checkType", "AffineMap.isOpenMap"],
 ["checkType", "AffineMap.isOpenMap_linear_iff"],
 ["checkType", "AffineSubspace.coe_subtypeₐᵢ"],
 ["checkType", "AffineSubspace.equivMapOfInjective"],
 ["checkType", "AffineSubspace.equivMapOfInjective_apply"],
 ["checkType", "AffineSubspace.equivMapOfInjective_invFun"],
 ["checkType", "AffineSubspace.equivMapOfInjective_symm_apply"],
 ["checkType", "AffineSubspace.equivMapOfInjective_toFun"],
 ["checkType", "AffineSubspace.linear_equivMapOfInjective"],
 ["checkType",
  "AffineSubspace.mem_perpBisector_iff_inner_pointReflection_vsub_eq_zero"],
 ["checkType",
  "AffineSubspace.mem_perpBisector_pointReflection_iff_inner_eq_zero"],
 ["checkType", "AffineSubspace.sOppSide_lineMap_left"],
 ["checkType", "AffineSubspace.sOppSide_lineMap_right"],
 ["checkType", "AffineSubspace.sOppSide_pointReflection"],
 ["checkType", "AffineSubspace.sSameSide_lineMap_left"],
 ["checkType", "AffineSubspace.sSameSide_lineMap_right"],
 ["checkType", "AffineSubspace.setOf_sOppSide_eq_image2"],
 ["checkType", "AffineSubspace.setOf_sSameSide_eq_image2"],
 ["checkType", "AffineSubspace.setOf_wOppSide_eq_image2"],
 ["checkType", "AffineSubspace.setOf_wSameSide_eq_image2"],
 ["checkType", "AffineSubspace.wOppSide_lineMap_left"],
 ["checkType", "AffineSubspace.wOppSide_lineMap_right"],
 ["checkType", "AffineSubspace.wOppSide_pointReflection"],
 ["checkType", "AffineSubspace.wSameSide_lineMap_left"],
 ["checkType", "AffineSubspace.wSameSide_lineMap_right"],
 ["checkType", "AlgHom.coe_toContinuousLinearMap"],
 ["checkType", "AlgHom.map_coe_real_complex"],
 ["checkType", "AlgHom.norm_apply_le_self"],
 ["checkType", "AlgHom.norm_apply_le_self_mul_norm_one"],
 ["checkType", "Algebra.discr_eq_discr_of_toMatrix_coeff_isIntegral"],
 ["checkType", "Algebra.leftMulMatrix_complex"],
 ["checkType", "Algebra.norm_complex_apply"],
 ["checkType", "Algebra.trace_complex_apply"],
 ["checkType", "AlternatingMap.measure_def"],
 ["checkType", "AlternatingMap.measure_parallelepiped"],
 ["checkType", "AnalyticAt.aeval_mvPolynomial"],
 ["checkType", "AnalyticAt.aeval_polynomial"],
 ["checkType", "AnalyticAt.eventually_constant_or_nhds_le_map_nhds"],
 ["checkType", "AnalyticAt.eventually_constant_or_nhds_le_map_nhds_aux"],
 ["checkType", "AnalyticOn.aeval_mvPolynomial"],
 ["checkType", "AnalyticOn.aeval_polynomial"],
 ["checkType", "AnalyticOn.comp"],
 ["checkType", "AnalyticOn.congr"],
 ["checkType", "AnalyticOn.eqOn_of_preconnected_of_eventuallyEq"],
 ["checkType", "AnalyticOn.eqOn_of_preconnected_of_frequently_eq"],
 ["checkType", "AnalyticOn.eqOn_of_preconnected_of_mem_closure"],
 ["checkType", "AnalyticOn.eqOn_zero_of_preconnected_of_eventuallyEq_zero"],
 ["checkType", "AnalyticOn.eqOn_zero_of_preconnected_of_eventuallyEq_zero_aux"],
 ["checkType", "AnalyticOn.eqOn_zero_of_preconnected_of_frequently_eq_zero"],
 ["checkType", "AnalyticOn.eqOn_zero_of_preconnected_of_mem_closure"],
 ["checkType", "AnalyticOn.eval_continuousLinearMap"],
 ["checkType", "AnalyticOn.eval_continuousLinearMap'"],
 ["checkType", "AnalyticOn.eval_linearMap"],
 ["checkType", "AnalyticOn.eval_linearMap'"],
 ["checkType", "AnalyticOn.eval_mvPolynomial"],
 ["checkType", "AnalyticOn.is_constant_or_isOpen"],
 ["checkType", "AntilipschitzWith.isBounded_of_image2_left"],
 ["checkType", "AntilipschitzWith.isBounded_of_image2_right"],
 ["checkType", "AntilipschitzWith.to_rightInvOn"],
 ["checkType", "AntilipschitzWith.to_rightInvOn'"],
 ["checkType", "ApproximatesLinearOn.approximatesLinearOn_iff_lipschitzOnWith"],
 ["checkType", "ApproximatesLinearOn.exists_homeomorph_extension"],
 ["checkType", "ApproximatesLinearOn.injOn"],
 ["checkType", "ApproximatesLinearOn.lipschitzOnWith"],
 ["checkType", "ApproximatesLinearOn.lipschitz_sub"],
 ["checkType",
  "ApproximatesLinearOn.surjOn_closedBall_of_nonlinearRightInverse"],
 ["checkType", "BarrelledSpace.continuous_of_lowerSemicontinuous"],
 ["checkType", "BarrelledSpace.mk"],
 ["checkType", "BarrelledSpace.rec"],
 ["checkType", "Basis.addHaar_self"],
 ["checkType", "Basis.coe_constrL"],
 ["checkType", "Basis.coe_parallelepiped"],
 ["checkType", "Basis.coe_toOrthonormalBasis"],
 ["checkType", "Basis.coe_toOrthonormalBasis_repr"],
 ["checkType", "Basis.coe_toOrthonormalBasis_repr_symm"],
 ["checkType", "Basis.constrL_apply"],
 ["checkType", "Basis.constrL_basis"],
 ["checkType", "Basis.equivFunL_apply"],
 ["checkType", "Basis.equivFunL_symm_apply_repr"],
 ["checkType", "Basis.exists_op_nnnorm_le"],
 ["checkType", "Basis.exists_op_norm_le"],
 ["checkType", "Basis.ext_linearIsometry"],
 ["checkType", "Basis.ext_linearIsometryEquiv"],
 ["checkType", "Basis.map_addHaar"],
 ["checkType", "Basis.op_nnnorm_le"],
 ["checkType", "Basis.op_norm_le"],
 ["checkType", "Basis.parallelepiped_eq_map"],
 ["checkType", "Basis.parallelepiped_map"],
 ["checkType", "Basis.toBasis_toOrthonormalBasis"],
 ["checkType", "Basis.toOrthonormalBasis"],
 ["checkType", "BddAbove.convolutionExistsAt"],
 ["checkType", "BddAbove.convolutionExistsAt'"],
 ["checkType", "Behrend.addSalemSpencer_image_sphere"],
 ["checkType", "Behrend.bound_aux"],
 ["checkType", "Behrend.bound_aux'"],
 ["checkType", "Behrend.card_sphere_le_rothNumberNat"],
 ["checkType", "Behrend.map_apply"],
 ["checkType", "Behrend.map_eq_iff"],
 ["checkType", "Behrend.map_injOn"],
 ["checkType", "Behrend.map_le_of_mem_box"],
 ["checkType", "Behrend.map_mod"],
 ["checkType", "Behrend.map_monotone"],
 ["checkType", "Behrend.map_succ"],
 ["checkType", "Behrend.map_succ'"],
 ["checkType", "Behrend.map_zero"],
 ["checkType", "Behrend.norm_of_mem_sphere"],
 ["checkType", "Behrend.roth_lower_bound"],
 ["checkType", "Behrend.roth_lower_bound_explicit"],
 ["checkType", "Behrend.sphere_subset_preimage_metric_sphere"],
 ["checkType", "BoundedContinuousFunction.abs_diff_coe_le_dist"],
 ["checkType",
  "BoundedContinuousFunction.abs_self_eq_nnrealPart_add_nnrealPart_neg"],
 ["checkType", "BoundedContinuousFunction.add_apply"],
 ["checkType", "BoundedContinuousFunction.algebraMap_apply"],
 ["checkType", "BoundedContinuousFunction.apply_le_nndist_zero"],
 ["checkType", "BoundedContinuousFunction.apply_le_norm"],
 ["checkType", "BoundedContinuousFunction.arzela_ascoli"],
 ["checkType", "BoundedContinuousFunction.arzela_ascoli₁"],
 ["checkType", "BoundedContinuousFunction.arzela_ascoli₂"],
 ["checkType", "BoundedContinuousFunction.bddAbove_range_norm_comp"],
 ["checkType", "BoundedContinuousFunction.bounded"],
 ["checkType", "BoundedContinuousFunction.codRestrict"],
 ["checkType", "BoundedContinuousFunction.coeFnAddHom_apply"],
 ["checkType", "BoundedContinuousFunction.coeFn_abs"],
 ["checkType", "BoundedContinuousFunction.coeFn_sup"],
 ["checkType", "BoundedContinuousFunction.coeFn_toLp"],
 ["checkType", "BoundedContinuousFunction.coe_add"],
 ["checkType", "BoundedContinuousFunction.coe_compContinuous"],
 ["checkType", "BoundedContinuousFunction.coe_intCast"],
 ["checkType", "BoundedContinuousFunction.coe_le_coe_add_dist"],
 ["checkType", "BoundedContinuousFunction.coe_mul"],
 ["checkType", "BoundedContinuousFunction.coe_natCast"],
 ["checkType", "BoundedContinuousFunction.coe_neg"],
 ["checkType", "BoundedContinuousFunction.coe_normComp"],
 ["checkType", "BoundedContinuousFunction.coe_npowRec"],
 ["checkType", "BoundedContinuousFunction.coe_nsmul"],
 ["checkType", "BoundedContinuousFunction.coe_nsmulRec"],
 ["checkType", "BoundedContinuousFunction.coe_ofNormedAddCommGroup"],
 ["checkType", "BoundedContinuousFunction.coe_ofNormedAddCommGroupDiscrete"],
 ["checkType", "BoundedContinuousFunction.coe_one"],
 ["checkType", "BoundedContinuousFunction.coe_pow"],
 ["checkType", "BoundedContinuousFunction.coe_restrict"],
 ["checkType", "BoundedContinuousFunction.coe_smul"],
 ["checkType", "BoundedContinuousFunction.coe_star"],
 ["checkType", "BoundedContinuousFunction.coe_sub"],
 ["checkType", "BoundedContinuousFunction.coe_sum"],
 ["checkType", "BoundedContinuousFunction.coe_to_continuous_fun"],
 ["checkType", "BoundedContinuousFunction.coe_zero"],
 ["checkType", "BoundedContinuousFunction.coe_zsmul"],
 ["checkType", "BoundedContinuousFunction.coe_zsmulRec"],
 ["checkType", "BoundedContinuousFunction.compContinuous_apply"],
 ["checkType", "BoundedContinuousFunction.const_apply"],
 ["checkType", "BoundedContinuousFunction.const_apply'"],
 ["checkType", "BoundedContinuousFunction.const_toFun"],
 ["checkType", "BoundedContinuousFunction.continuous"],
 ["checkType", "BoundedContinuousFunction.continuous_coe"],
 ["checkType", "BoundedContinuousFunction.continuous_eval"],
 ["checkType", "BoundedContinuousFunction.continuous_eval_const"],
 ["checkType", "BoundedContinuousFunction.dist_coe_le_dist"],
 ["checkType", "BoundedContinuousFunction.dist_eq"],
 ["checkType", "BoundedContinuousFunction.dist_eq_iSup"],
 ["checkType", "BoundedContinuousFunction.dist_extend_extend"],
 ["checkType", "BoundedContinuousFunction.dist_le"],
 ["checkType", "BoundedContinuousFunction.dist_le_iff_of_nonempty"],
 ["checkType", "BoundedContinuousFunction.dist_le_two_norm"],
 ["checkType", "BoundedContinuousFunction.dist_lt_iff_of_compact"],
 ["checkType", "BoundedContinuousFunction.dist_lt_iff_of_nonempty_compact"],
 ["checkType", "BoundedContinuousFunction.dist_lt_of_nonempty_compact"],
 ["checkType", "BoundedContinuousFunction.dist_set_exists"],
 ["checkType", "BoundedContinuousFunction.embedding_coeFn"],
 ["checkType", "BoundedContinuousFunction.evalClm_apply"],
 ["checkType",
  "BoundedContinuousFunction.exists_extension_forall_exists_le_ge_of_closedEmbedding"],
 ["checkType",
  "BoundedContinuousFunction.exists_extension_forall_mem_Icc_of_closedEmbedding"],
 ["checkType",
  "BoundedContinuousFunction.exists_extension_forall_mem_of_closedEmbedding"],
 ["checkType",
  "BoundedContinuousFunction.exists_extension_norm_eq_of_closedEmbedding"],
 ["checkType",
  "BoundedContinuousFunction.exists_extension_norm_eq_of_closedEmbedding'"],
 ["checkType",
  "BoundedContinuousFunction.exists_forall_mem_restrict_eq_of_closed"],
 ["checkType", "BoundedContinuousFunction.ext"],
 ["checkType", "BoundedContinuousFunction.extend_apply"],
 ["checkType", "BoundedContinuousFunction.extend_apply'"],
 ["checkType", "BoundedContinuousFunction.extend_comp"],
 ["checkType", "BoundedContinuousFunction.forall_coe_one_iff_one"],
 ["checkType", "BoundedContinuousFunction.forall_coe_zero_iff_zero"],
 ["checkType", "BoundedContinuousFunction.inducing_coeFn"],
 ["checkType",
  "BoundedContinuousFunction.instCstarRingBoundedContinuousFunctionToPseudoMetricSpaceToNonUnitalSeminormedRingNonUnitalNormedRingInstStarRingBoundedContinuousFunctionToPseudoMetricSpaceToNonUnitalSeminormedRingToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingInstNonUnitalRingBoundedContinuousFunctionToPseudoMetricSpaceTo_normedStarGroup"],
 ["checkType", "BoundedContinuousFunction.integrable"],
 ["checkType", "BoundedContinuousFunction.integrable_of_nnreal"],
 ["checkType", "BoundedContinuousFunction.integral_add_const"],
 ["checkType", "BoundedContinuousFunction.integral_const_sub"],
 ["checkType", "BoundedContinuousFunction.integral_eq_integral_nnrealPart_sub"],
 ["checkType", "BoundedContinuousFunction.isBounded_image"],
 ["checkType", "BoundedContinuousFunction.isBounded_range"],
 ["checkType", "BoundedContinuousFunction.isBounded_range_integral"],
 ["checkType", "BoundedContinuousFunction.lintegral_le_edist_mul"],
 ["checkType", "BoundedContinuousFunction.lintegral_lt_top_of_nnreal"],
 ["checkType", "BoundedContinuousFunction.lintegral_nnnorm_le"],
 ["checkType", "BoundedContinuousFunction.lintegral_of_real_lt_top"],
 ["checkType", "BoundedContinuousFunction.lipschitz_evalx"],
 ["checkType", "BoundedContinuousFunction.measurable_coe_ennreal_comp"],
 ["checkType", "BoundedContinuousFunction.mkOfBound"],
 ["checkType", "BoundedContinuousFunction.mkOfBound_coe"],
 ["checkType", "BoundedContinuousFunction.mkOfCompact_apply"],
 ["checkType", "BoundedContinuousFunction.mkOfDiscrete_apply"],
 ["checkType", "BoundedContinuousFunction.mkOfDiscrete_toFun"],
 ["checkType", "BoundedContinuousFunction.mul_apply"],
 ["checkType", "BoundedContinuousFunction.neg_apply"],
 ["checkType", "BoundedContinuousFunction.neg_norm_le_apply"],
 ["checkType", "BoundedContinuousFunction.nndist_coe_le_nndist"],
 ["checkType", "BoundedContinuousFunction.nndist_eq"],
 ["checkType", "BoundedContinuousFunction.nndist_eq_iSup"],
 ["checkType", "BoundedContinuousFunction.nndist_le_two_nnnorm"],
 ["checkType", "BoundedContinuousFunction.nndist_set_exists"],
 ["checkType", "BoundedContinuousFunction.nnnorm_coeFn_eq"],
 ["checkType", "BoundedContinuousFunction.nnnorm_coe_le_nnnorm"],
 ["checkType", "BoundedContinuousFunction.nnnorm_eq_iSup_nnnorm"],
 ["checkType", "BoundedContinuousFunction.nnnorm_le"],
 ["checkType", "BoundedContinuousFunction.nnrealPart_coeFn_eq"],
 ["checkType", "BoundedContinuousFunction.norm_coe_le_norm"],
 ["checkType", "BoundedContinuousFunction.norm_eq"],
 ["checkType", "BoundedContinuousFunction.norm_eq_iSup_norm"],
 ["checkType", "BoundedContinuousFunction.norm_eq_of_nonempty"],
 ["checkType", "BoundedContinuousFunction.norm_integral_le_mul_norm"],
 ["checkType", "BoundedContinuousFunction.norm_integral_le_norm"],
 ["checkType", "BoundedContinuousFunction.norm_le"],
 ["checkType", "BoundedContinuousFunction.norm_le_of_nonempty"],
 ["checkType", "BoundedContinuousFunction.norm_lt_iff_of_compact"],
 ["checkType", "BoundedContinuousFunction.norm_lt_iff_of_nonempty_compact"],
 ["checkType", "BoundedContinuousFunction.nsmul_apply"],
 ["checkType", "BoundedContinuousFunction.pow_apply"],
 ["checkType", "BoundedContinuousFunction.restrict_apply"],
 ["checkType",
  "BoundedContinuousFunction.self_eq_nnrealPart_sub_nnrealPart_neg"],
 ["checkType", "BoundedContinuousFunction.smul_apply"],
 ["checkType", "BoundedContinuousFunction.star_apply"],
 ["checkType", "BoundedContinuousFunction.sub_apply"],
 ["checkType", "BoundedContinuousFunction.sum_apply"],
 ["checkType", "BoundedContinuousFunction.tendsto_iff_tendstoUniformly"],
 ["checkType", "BoundedContinuousFunction.tietze_extension_step"],
 ["checkType", "BoundedContinuousFunction.toContinuousMapAddHom_apply"],
 ["checkType", "BoundedContinuousFunction.toContinuousMapLinearMap_apply"],
 ["checkType", "BoundedContinuousFunction.toLp_denseRange"],
 ["checkType", "BoundedContinuousFunction.toLp_inj"],
 ["checkType", "BoundedContinuousFunction.toLp_injective"],
 ["checkType", "BoundedContinuousFunction.toReal_lintegral_coe_eq_integral"],
 ["checkType", "BoundedContinuousFunction.uniformContinuous_coe"],
 ["checkType", "BoundedContinuousFunction.zsmul_apply"],
 ["checkType", "BoundedContinuousMapClass.map_bounded"],
 ["checkType", "BoundedContinuousMapClass.mk"],
 ["checkType", "BoundedContinuousMapClass.rec"],
 ["checkType",
  "BoxIntegral.hasIntegral_GP_divergence_of_forall_hasDerivWithinAt"],
 ["checkType", "BoxIntegral.hasIntegral_GP_pderiv"],
 ["checkType", "BoxIntegral.hasIntegral_const"],
 ["checkType", "BoxIntegral.integrable_of_continuousOn"],
 ["checkType", "BoxIntegral.integralSum_sub_partitions"],
 ["checkType", "BoxIntegral.integral_const"],
 ["checkType", "BoxIntegral.integral_nonneg"],
 ["checkType", "BoxIntegral.norm_integral_le_of_le_const"],
 ["checkType", "BoxIntegral.norm_integral_le_of_norm_le"],
 ["checkType",
  "BoxIntegral.norm_volume_sub_integral_face_upper_sub_lower_smul_le"],
 ["checkType", "BumpCovering.coe_single"],
 ["checkType", "BumpCovering.coe_toSmoothPartitionOfUnity"],
 ["checkType", "BumpCovering.eventuallyEq_one"],
 ["checkType", "BumpCovering.eventuallyEq_one'"],
 ["checkType", "BumpCovering.exists_finset_toPOUFun_eventuallyEq"],
 ["checkType", "BumpCovering.exists_finset_toPartitionOfUnity_eventuallyEq"],
 ["checkType", "BumpCovering.exists_isSubordinate_of_locallyFinite_of_prop"],
 ["checkType", "BumpCovering.exists_isSubordinate_of_prop"],
 ["checkType", "BumpCovering.ind_apply"],
 ["checkType",
  "BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["checkType", "BumpCovering.le_one"],
 ["checkType", "BumpCovering.locallyFinite"],
 ["checkType", "BumpCovering.locallyFinite'"],
 ["checkType", "BumpCovering.locallyFinite_tsupport"],
 ["checkType", "BumpCovering.mk"],
 ["checkType", "BumpCovering.nonneg"],
 ["checkType", "BumpCovering.point_finite"],
 ["checkType", "BumpCovering.rec"],
 ["checkType", "BumpCovering.smooth_toPartitionOfUnity"],
 ["checkType", "BumpCovering.sum_toPOUFun_eq"],
 ["checkType", "BumpCovering.sum_toPartitionOfUnity_eq"],
 ["checkType", "BumpCovering.support_toPOUFun_subset"],
 ["checkType", "BumpCovering.support_toPartitionOfUnity_subset"],
 ["checkType", "BumpCovering.toPOUFun_eq_mul_prod"],
 ["checkType", "BumpCovering.toPOUFun_zero_of_zero"],
 ["checkType", "BumpCovering.toPartitionOfUnity_apply"],
 ["checkType", "BumpCovering.toPartitionOfUnity_eq_mul_prod"],
 ["checkType", "BumpCovering.toPartitionOfUnity_zero_of_zero"],
 ["checkType", "BumpCovering.toSmoothPartitionOfUnity"],
 ["checkType", "BumpCovering.toSmoothPartitionOfUnity_toPartitionOfUnity"],
 ["checkType", "CPolynomialOn.congr"],
 ["checkType", "Char.card_pow_card"],
 ["checkType", "Char.card_pow_char_pow"],
 ["checkType", "CircleDeg1Lift.ceil_map_map_zero_le"],
 ["checkType", "CircleDeg1Lift.coe_mk"],
 ["checkType", "CircleDeg1Lift.coe_mul"],
 ["checkType", "CircleDeg1Lift.coe_one"],
 ["checkType", "CircleDeg1Lift.coe_pow"],
 ["checkType", "CircleDeg1Lift.coe_toOrderHom"],
 ["checkType", "CircleDeg1Lift.coe_toOrderIso"],
 ["checkType", "CircleDeg1Lift.coe_toOrderIso_inv"],
 ["checkType", "CircleDeg1Lift.coe_toOrderIso_symm"],
 ["checkType", "CircleDeg1Lift.commute_add_int"],
 ["checkType", "CircleDeg1Lift.commute_add_nat"],
 ["checkType", "CircleDeg1Lift.commute_iff_commute"],
 ["checkType", "CircleDeg1Lift.commute_int_add"],
 ["checkType", "CircleDeg1Lift.commute_nat_add"],
 ["checkType", "CircleDeg1Lift.commute_sub_int"],
 ["checkType", "CircleDeg1Lift.commute_sub_nat"],
 ["checkType", "CircleDeg1Lift.continuous_iff_surjective"],
 ["checkType", "CircleDeg1Lift.continuous_pow"],
 ["checkType", "CircleDeg1Lift.dist_map_map_zero_lt"],
 ["checkType", "CircleDeg1Lift.dist_map_zero_lt_of_semiconj"],
 ["checkType", "CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy"],
 ["checkType", "CircleDeg1Lift.dist_map_zero_translationNumber_le"],
 ["checkType", "CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le"],
 ["checkType", "CircleDeg1Lift.exists_eq_add_translationNumber"],
 ["checkType", "CircleDeg1Lift.ext"],
 ["checkType", "CircleDeg1Lift.ext_iff"],
 ["checkType", "CircleDeg1Lift.floor_map_map_zero_le"],
 ["checkType", "CircleDeg1Lift.floor_sub_le_translationNumber"],
 ["checkType", "CircleDeg1Lift.forall_map_sub_of_Icc"],
 ["checkType", "CircleDeg1Lift.inf_apply"],
 ["checkType", "CircleDeg1Lift.isUnit_iff_bijective"],
 ["checkType", "CircleDeg1Lift.iterate_eq_of_map_eq_add_int"],
 ["checkType", "CircleDeg1Lift.iterate_le_of_map_le_add_int"],
 ["checkType", "CircleDeg1Lift.iterate_mono"],
 ["checkType", "CircleDeg1Lift.iterate_monotone"],
 ["checkType", "CircleDeg1Lift.iterate_pos_eq_iff"],
 ["checkType", "CircleDeg1Lift.iterate_pos_le_iff"],
 ["checkType", "CircleDeg1Lift.iterate_pos_lt_iff"],
 ["checkType", "CircleDeg1Lift.le_ceil_map_map_zero"],
 ["checkType", "CircleDeg1Lift.le_floor_map_map_zero"],
 ["checkType", "CircleDeg1Lift.le_iterate_of_add_int_le_map"],
 ["checkType", "CircleDeg1Lift.le_iterate_pos_iff"],
 ["checkType", "CircleDeg1Lift.le_map_map_zero"],
 ["checkType", "CircleDeg1Lift.le_map_of_map_zero"],
 ["checkType", "CircleDeg1Lift.le_translationNumber_of_add_int_le"],
 ["checkType", "CircleDeg1Lift.le_translationNumber_of_add_le"],
 ["checkType", "CircleDeg1Lift.le_translationNumber_of_add_nat_le"],
 ["checkType", "CircleDeg1Lift.lt_iterate_pos_iff"],
 ["checkType", "CircleDeg1Lift.lt_map_map_zero"],
 ["checkType", "CircleDeg1Lift.lt_map_of_int_lt_translationNumber"],
 ["checkType", "CircleDeg1Lift.lt_map_of_nat_lt_translationNumber"],
 ["checkType", "CircleDeg1Lift.lt_translationNumber_of_forall_add_lt"],
 ["checkType", "CircleDeg1Lift.map_add_int"],
 ["checkType", "CircleDeg1Lift.map_add_nat"],
 ["checkType", "CircleDeg1Lift.map_add_one"],
 ["checkType", "CircleDeg1Lift.map_fract_sub_fract_eq"],
 ["checkType", "CircleDeg1Lift.map_int_add"],
 ["checkType", "CircleDeg1Lift.map_int_of_map_zero"],
 ["checkType", "CircleDeg1Lift.map_le_of_map_zero"],
 ["checkType", "CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one"],
 ["checkType", "CircleDeg1Lift.map_lt_add_translationNumber_add_one"],
 ["checkType", "CircleDeg1Lift.map_lt_of_translationNumber_lt_int"],
 ["checkType", "CircleDeg1Lift.map_lt_of_translationNumber_lt_nat"],
 ["checkType", "CircleDeg1Lift.map_map_zero_le"],
 ["checkType", "CircleDeg1Lift.map_map_zero_lt"],
 ["checkType", "CircleDeg1Lift.map_nat_add"],
 ["checkType", "CircleDeg1Lift.map_one_add"],
 ["checkType", "CircleDeg1Lift.map_sub_int"],
 ["checkType", "CircleDeg1Lift.map_sub_nat"],
 ["checkType", "CircleDeg1Lift.mono"],
 ["checkType", "CircleDeg1Lift.monotone"],
 ["checkType", "CircleDeg1Lift.mul_apply"],
 ["checkType", "CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero"],
 ["checkType", "CircleDeg1Lift.semiconjBy_iff_semiconj"],
 ["checkType", "CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq"],
 ["checkType",
  "CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq"],
 ["checkType", "CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq"],
 ["checkType", "CircleDeg1Lift.strictMono_iff_injective"],
 ["checkType", "CircleDeg1Lift.sup_apply"],
 ["checkType", "CircleDeg1Lift.tendsto_atBot"],
 ["checkType", "CircleDeg1Lift.tendsto_atTop"],
 ["checkType", "CircleDeg1Lift.tendsto_translationNumber"],
 ["checkType", "CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux"],
 ["checkType", "CircleDeg1Lift.tendsto_translation_number'"],
 ["checkType", "CircleDeg1Lift.tendsto_translation_number₀"],
 ["checkType", "CircleDeg1Lift.tendsto_translation_number₀'"],
 ["checkType", "CircleDeg1Lift.translate_apply"],
 ["checkType", "CircleDeg1Lift.translate_inv_apply"],
 ["checkType", "CircleDeg1Lift.translate_iterate"],
 ["checkType", "CircleDeg1Lift.translate_pow"],
 ["checkType", "CircleDeg1Lift.translate_zpow"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_int_iff"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_of_dist_bounded"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_of_semiconj"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_of_tendsto₀"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_of_tendsto₀'"],
 ["checkType", "CircleDeg1Lift.translationNumber_eq_rat_iff"],
 ["checkType", "CircleDeg1Lift.translationNumber_le_ceil_sub"],
 ["checkType", "CircleDeg1Lift.translationNumber_le_of_le_add"],
 ["checkType", "CircleDeg1Lift.translationNumber_le_of_le_add_int"],
 ["checkType", "CircleDeg1Lift.translationNumber_le_of_le_add_nat"],
 ["checkType", "CircleDeg1Lift.translationNumber_lt_of_forall_lt_add"],
 ["checkType", "CircleDeg1Lift.translationNumber_of_eq_add_int"],
 ["checkType", "CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int"],
 ["checkType", "CircleDeg1Lift.translationNumber_translate"],
 ["checkType", "CircleDeg1Lift.transnumAuxSeq_def"],
 ["checkType", "CircleDeg1Lift.transnumAuxSeq_zero"],
 ["checkType", "CircleDeg1Lift.units_apply_inv_apply"],
 ["checkType", "CircleDeg1Lift.units_inv_apply_apply"],
 ["checkType", "CircleDeg1Lift.units_semiconj_of_translationNumber_eq"],
 ["checkType", "CircleIntegrable.out"],
 ["checkType", "ClassGroup.exists_mem_finsetApprox"],
 ["checkType", "ClassGroup.exists_mem_finset_approx'"],
 ["checkType", "ClassGroup.exists_min"],
 ["checkType", "ClassGroup.exists_mk0_eq_mk0"],
 ["checkType", "ClassGroup.mem_finsetApprox"],
 ["checkType", "ClassGroup.mkMMem"],
 ["checkType", "ClassGroup.mkMMem_surjective"],
 ["checkType", "ClassGroup.ne_bot_of_prod_finsetApprox_mem"],
 ["checkType", "ClassGroup.norm_le"],
 ["checkType", "ClassGroup.norm_lt"],
 ["checkType", "ClassGroup.prod_finsetApprox_ne_zero"],
 ["checkType", "CliffordAlgebra.equivBaseChange_apply"],
 ["checkType", "CliffordAlgebra.equivBaseChange_symm_apply"],
 ["checkType", "CliffordAlgebra.ofBaseChangeAux_ι"],
 ["checkType", "CliffordAlgebra.ofBaseChange_tmul_one"],
 ["checkType", "CliffordAlgebra.ofBaseChange_tmul_ι"],
 ["checkType", "CliffordAlgebra.ofBaseChange_toBaseChange"],
 ["checkType", "CliffordAlgebra.toBaseChange_comp_reverseOp"],
 ["checkType", "CliffordAlgebra.toBaseChange_involute"],
 ["checkType", "CliffordAlgebra.toBaseChange_ofBaseChange"],
 ["checkType", "CliffordAlgebra.toBaseChange_reverse"],
 ["checkType", "CliffordAlgebra.toBaseChange_ι"],
 ["checkType", "CliffordAlgebraComplex.Q_apply"],
 ["checkType", "CliffordAlgebraComplex.equiv_apply"],
 ["checkType", "CliffordAlgebraComplex.equiv_symm_apply"],
 ["checkType", "CliffordAlgebraComplex.ofComplex_I"],
 ["checkType", "CliffordAlgebraComplex.ofComplex_conj"],
 ["checkType", "CliffordAlgebraComplex.ofComplex_toComplex"],
 ["checkType", "CliffordAlgebraComplex.reverse_apply"],
 ["checkType", "CliffordAlgebraComplex.toComplex_involute"],
 ["checkType", "CliffordAlgebraComplex.toComplex_ofComplex"],
 ["checkType", "CliffordAlgebraComplex.toComplex_ι"],
 ["checkType", "CliffordAlgebraDualNumber.equiv_symm_eps"],
 ["checkType", "CliffordAlgebraDualNumber.equiv_ι"],
 ["checkType", "CliffordAlgebraDualNumber.ι_mul_ι"],
 ["checkType", "CliffordAlgebraQuaternion.Q_apply"],
 ["checkType", "CliffordAlgebraQuaternion.equiv_apply"],
 ["checkType", "CliffordAlgebraQuaternion.equiv_symm_apply"],
 ["checkType", "CliffordAlgebraQuaternion.ofQuaternion_mk"],
 ["checkType", "CliffordAlgebraQuaternion.ofQuaternion_star"],
 ["checkType", "CliffordAlgebraQuaternion.ofQuaternion_toQuaternion"],
 ["checkType", "CliffordAlgebraQuaternion.quaternionBasis_i"],
 ["checkType", "CliffordAlgebraQuaternion.quaternionBasis_j"],
 ["checkType", "CliffordAlgebraQuaternion.quaternionBasis_k"],
 ["checkType", "CliffordAlgebraQuaternion.toQuaternion_ofQuaternion"],
 ["checkType", "CliffordAlgebraQuaternion.toQuaternion_star"],
 ["checkType", "CliffordAlgebraQuaternion.toQuaternion_ι"],
 ["checkType", "CliffordAlgebraRing.reverse_apply"],
 ["checkType", "CompHaus.effectiveEpiFamily_of_jointly_surjective"],
 ["checkType", "CompHaus.effectiveEpiFamily_tfae"],
 ["checkType", "CompHaus.effectiveEpi_tfae"],
 ["checkType", "CompHaus.epi_iff_surjective"],
 ["checkType", "CompHaus.homeoOfIso_apply"],
 ["checkType", "CompHaus.homeoOfIso_symm_apply"],
 ["checkType", "CompHaus.isClosedMap"],
 ["checkType", "CompHaus.isIso_of_bijective"],
 ["checkType", "CompHaus.isoEquivHomeo_apply"],
 ["checkType", "CompHaus.isoEquivHomeo_symm_apply"],
 ["checkType", "CompHaus.isoOfBijective"],
 ["checkType", "CompHaus.isoOfHomeo_hom"],
 ["checkType", "CompHaus.isoOfHomeo_inv"],
 ["checkType", "CompHaus.mono_iff_injective"],
 ["checkType", "CompHaus.struct"],
 ["checkType", "CompareReals.compare_uc"],
 ["checkType", "CompareReals.compare_uc_symm"],
 ["checkType", "CompletelyRegularSpace.completely_regular"],
 ["checkType", "CompletelyRegularSpace.mk"],
 ["checkType", "CompletelyRegularSpace.rec"],
 ["checkType", "Complex.GammaIntegral_conj"],
 ["checkType", "Complex.GammaIntegral_eq_mellin"],
 ["checkType", "Complex.GammaSeq_eq_approx_Gamma_integral"],
 ["checkType", "Complex.Gamma_conj"],
 ["checkType", "Complex.abs_I"],
 ["checkType", "Complex.abs_abs"],
 ["checkType", "Complex.abs_add_eq"],
 ["checkType", "Complex.abs_add_eq_iff"],
 ["checkType", "Complex.abs_add_mul_I"],
 ["checkType", "Complex.abs_apply"],
 ["checkType", "Complex.abs_circleTransformBoundingFunction_le"],
 ["checkType", "Complex.abs_conj"],
 ["checkType", "Complex.abs_cos_add_sin_mul_I"],
 ["checkType", "Complex.abs_cpow_eq_rpow_re_of_nonneg"],
 ["checkType", "Complex.abs_cpow_eq_rpow_re_of_pos"],
 ["checkType", "Complex.abs_cpow_inv_nat"],
 ["checkType", "Complex.abs_cpow_inv_two_im"],
 ["checkType", "Complex.abs_cpow_le"],
 ["checkType", "Complex.abs_cpow_of_imp"],
 ["checkType", "Complex.abs_cpow_of_ne_zero"],
 ["checkType", "Complex.abs_cpow_real"],
 ["checkType", "Complex.abs_def"],
 ["checkType", "Complex.abs_deriv_le_div_of_mapsTo_ball"],
 ["checkType", "Complex.abs_deriv_le_one_of_mapsTo_ball"],
 ["checkType", "Complex.abs_eq_one_iff"],
 ["checkType", "Complex.abs_exp"],
 ["checkType", "Complex.abs_exp_eq_iff_re_eq"],
 ["checkType", "Complex.abs_exp_mul_exp_add_exp_neg_le_of_abs_im_le"],
 ["checkType", "Complex.abs_exp_ofReal"],
 ["checkType", "Complex.abs_exp_ofReal_mul_I"],
 ["checkType", "Complex.abs_exp_sub_one_le"],
 ["checkType", "Complex.abs_exp_sub_one_sub_id_le"],
 ["checkType", "Complex.abs_im_div_abs_le_one"],
 ["checkType", "Complex.abs_im_eq_abs"],
 ["checkType", "Complex.abs_im_le_abs"],
 ["checkType", "Complex.abs_im_lt_abs"],
 ["checkType", "Complex.abs_le_abs_of_mapsTo_ball_self"],
 ["checkType", "Complex.abs_le_abs_re_add_abs_im"],
 ["checkType", "Complex.abs_le_sqrt_two_mul_max"],
 ["checkType", "Complex.abs_mul_cos_add_sin_mul_I"],
 ["checkType", "Complex.abs_mul_cos_arg"],
 ["checkType", "Complex.abs_mul_exp_arg_mul_I"],
 ["checkType", "Complex.abs_mul_sin_arg"],
 ["checkType", "Complex.abs_natCast"],
 ["checkType", "Complex.abs_ofNat"],
 ["checkType", "Complex.abs_ofReal"],
 ["checkType", "Complex.abs_of_nonneg"],
 ["checkType", "Complex.abs_pow"],
 ["checkType", "Complex.abs_prod"],
 ["checkType", "Complex.abs_re_div_abs_le_one"],
 ["checkType", "Complex.abs_re_eq_abs"],
 ["checkType", "Complex.abs_re_le_abs"],
 ["checkType", "Complex.abs_re_lt_abs"],
 ["checkType", "Complex.abs_sub_eq"],
 ["checkType", "Complex.abs_sub_eq_iff"],
 ["checkType", "Complex.abs_two"],
 ["checkType", "Complex.abs_zpow"],
 ["checkType", "Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div"],
 ["checkType", "Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div'"],
 ["checkType", "Complex.algHom_ext"],
 ["checkType",
  "Complex.analyticAt_of_differentiable_on_punctured_nhds_of_continuousAt"],
 ["checkType", "Complex.antilipschitz_equivRealProd"],
 ["checkType", "Complex.approx_Gamma_integral_tendsto_Gamma_integral"],
 ["checkType", "Complex.areaForm"],
 ["checkType", "Complex.arg_conj"],
 ["checkType", "Complex.arg_conj_coe_angle"],
 ["checkType", "Complex.arg_eq_arg_iff"],
 ["checkType", "Complex.arg_eq_nhds_of_im_neg"],
 ["checkType", "Complex.arg_eq_nhds_of_im_pos"],
 ["checkType", "Complex.arg_eq_nhds_of_re_neg_of_im_neg"],
 ["checkType", "Complex.arg_eq_nhds_of_re_neg_of_im_pos"],
 ["checkType", "Complex.arg_eq_nhds_of_re_pos"],
 ["checkType", "Complex.arg_of_im_neg"],
 ["checkType", "Complex.arg_of_im_nonneg_of_ne_zero"],
 ["checkType", "Complex.arg_of_im_pos"],
 ["checkType", "Complex.arg_of_re_neg_of_im_neg"],
 ["checkType", "Complex.arg_of_re_neg_of_im_nonneg"],
 ["checkType", "Complex.arg_of_re_nonneg"],
 ["checkType", "Complex.betaIntegral_scaled"],
 ["checkType", "Complex.cauSeqAbs"],
 ["checkType", "Complex.cauSeqConj"],
 ["checkType", "Complex.cauSeqIm"],
 ["checkType", "Complex.cauSeqRe"],
 ["checkType", "Complex.cderiv_eq_deriv"],
 ["checkType",
  "Complex.circleIntegral_div_sub_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.circleIntegral_eq_of_differentiable_on_annulus_off_countable"],
 ["checkType",
  "Complex.circleIntegral_eq_zero_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.circleIntegral_sub_center_inv_smul_eq_of_differentiable_on_annulus_off_countable"],
 ["checkType",
  "Complex.circleIntegral_sub_center_inv_smul_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.circleIntegral_sub_center_inv_smul_of_differentiable_on_off_countable_of_tendsto"],
 ["checkType",
  "Complex.circleIntegral_sub_inv_smul_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.circleIntegral_sub_inv_smul_of_differentiable_on_off_countable_aux"],
 ["checkType", "Complex.circleTransformDeriv_bound"],
 ["checkType", "Complex.coe_algebraMap"],
 ["checkType", "Complex.coe_basisOneI"],
 ["checkType", "Complex.coe_basisOneI_repr"],
 ["checkType", "Complex.coe_orthonormalBasisOneI"],
 ["checkType", "Complex.coe_realPart"],
 ["checkType", "Complex.coe_selfAdjointEquiv"],
 ["checkType", "Complex.comap_abs_nhds_zero"],
 ["checkType", "Complex.conjAe_coe"],
 ["checkType", "Complex.conjCle_apply"],
 ["checkType", "Complex.conjCle_nnorm"],
 ["checkType", "Complex.conjCle_norm"],
 ["checkType", "Complex.conjLie_apply"],
 ["checkType", "Complex.conj_cpow"],
 ["checkType", "Complex.conj_cpow_eq_ite"],
 ["checkType", "Complex.conj_mul'"],
 ["checkType", "Complex.conj_tsum"],
 ["checkType", "Complex.contDiffAt_log"],
 ["checkType", "Complex.contDiffAt_tan"],
 ["checkType", "Complex.contDiff_cos"],
 ["checkType", "Complex.contDiff_cosh"],
 ["checkType", "Complex.contDiff_exp"],
 ["checkType", "Complex.contDiff_sin"],
 ["checkType", "Complex.contDiff_sinh"],
 ["checkType", "Complex.continuousOn_abs_circleTransformBoundingFunction"],
 ["checkType", "Complex.continuous_abs"],
 ["checkType", "Complex.continuous_conj"],
 ["checkType", "Complex.continuous_normSq"],
 ["checkType", "Complex.convexHull_reProdIm"],
 ["checkType", "Complex.cos_arg"],
 ["checkType", "Complex.cos_conj"],
 ["checkType", "Complex.cosh_conj"],
 ["checkType", "Complex.cpow_conj"],
 ["checkType", "Complex.cpow_inv_two_im_eq_neg_sqrt"],
 ["checkType", "Complex.cpow_inv_two_im_eq_sqrt"],
 ["checkType", "Complex.cpow_inv_two_re"],
 ["checkType", "Complex.cpow_ofReal"],
 ["checkType", "Complex.cpow_ofReal_im"],
 ["checkType", "Complex.cpow_ofReal_re"],
 ["checkType", "Complex.deriv_cos"],
 ["checkType", "Complex.deriv_cos'"],
 ["checkType", "Complex.deriv_cosh"],
 ["checkType", "Complex.deriv_eq_smul_circleIntegral"],
 ["checkType", "Complex.deriv_exp"],
 ["checkType", "Complex.deriv_sin"],
 ["checkType", "Complex.deriv_sinh"],
 ["checkType", "Complex.deriv_tan"],
 ["checkType", "Complex.det_conjAe"],
 ["checkType", "Complex.det_conjLie"],
 ["checkType", "Complex.differentiableAt_Gamma"],
 ["checkType", "Complex.differentiableAt_GammaAux"],
 ["checkType", "Complex.differentiableAt_cos"],
 ["checkType", "Complex.differentiableAt_cosh"],
 ["checkType", "Complex.differentiableAt_exp"],
 ["checkType", "Complex.differentiableAt_log"],
 ["checkType", "Complex.differentiableAt_sin"],
 ["checkType", "Complex.differentiableAt_sinh"],
 ["checkType", "Complex.differentiableAt_tan"],
 ["checkType", "Complex.differentiableOn_compl_singleton_and_continuousAt_iff"],
 ["checkType", "Complex.differentiableOn_dslope"],
 ["checkType", "Complex.differentiableOn_tsum_of_summable_norm"],
 ["checkType", "Complex.differentiableOn_update_limUnder_insert_of_isLittleO"],
 ["checkType", "Complex.differentiableOn_update_limUnder_of_bddAbove"],
 ["checkType", "Complex.differentiableOn_update_limUnder_of_isLittleO"],
 ["checkType", "Complex.differentiable_cos"],
 ["checkType", "Complex.differentiable_cosh"],
 ["checkType", "Complex.differentiable_exp"],
 ["checkType", "Complex.differentiable_one_div_Gamma"],
 ["checkType", "Complex.differentiable_sin"],
 ["checkType", "Complex.differentiable_sinh"],
 ["checkType", "Complex.dist_conj_comm"],
 ["checkType", "Complex.dist_conj_conj"],
 ["checkType", "Complex.dist_conj_self"],
 ["checkType", "Complex.dist_eq"],
 ["checkType", "Complex.dist_le_dist_of_mapsTo_ball_self"],
 ["checkType", "Complex.dist_le_div_mul_dist_of_mapsTo_ball"],
 ["checkType", "Complex.dist_self_conj"],
 ["checkType", "Complex.eqOn_closedBall_of_isMaxOn_norm"],
 ["checkType", "Complex.eqOn_closure_of_eqOn_frontier"],
 ["checkType", "Complex.eqOn_closure_of_isPreconnected_of_isMaxOn_norm"],
 ["checkType", "Complex.eqOn_of_eqOn_frontier"],
 ["checkType", "Complex.eqOn_of_isPreconnected_of_isMaxOn_norm"],
 ["checkType", "Complex.equivRealProdAddHom_apply"],
 ["checkType", "Complex.equivRealProdAddHom_symm_apply"],
 ["checkType", "Complex.equivRealProdAddHom_symm_apply_im"],
 ["checkType", "Complex.equivRealProdAddHom_symm_apply_re"],
 ["checkType", "Complex.equivRealProdClm_apply"],
 ["checkType", "Complex.equivRealProdClm_symm_apply"],
 ["checkType", "Complex.equivRealProdClm_symm_apply_im"],
 ["checkType", "Complex.equivRealProdClm_symm_apply_re"],
 ["checkType", "Complex.equivRealProdLm_apply"],
 ["checkType", "Complex.equivRealProdLm_symm_apply"],
 ["checkType", "Complex.equivRealProdLm_symm_apply_im"],
 ["checkType", "Complex.equivRealProdLm_symm_apply_re"],
 ["checkType", "Complex.equivRealProd_apply_le"],
 ["checkType", "Complex.equivRealProd_apply_le'"],
 ["checkType", "Complex.equiv_limAux"],
 ["checkType", "Complex.eventually_eq_or_eq_zero_of_isLocalMin_norm"],
 ["checkType", "Complex.exists_cthickening_tendstoUniformlyOn"],
 ["checkType", "Complex.exp'"],
 ["checkType", "Complex.exp_bound"],
 ["checkType", "Complex.exp_bound'"],
 ["checkType", "Complex.exp_conj"],
 ["checkType", "Complex.ext_abs_arg"],
 ["checkType", "Complex.ext_abs_arg_iff"],
 ["checkType", "Complex.hasDerivAt_GammaIntegral"],
 ["checkType", "Complex.hasDerivAt_cos"],
 ["checkType", "Complex.hasDerivAt_cosh"],
 ["checkType", "Complex.hasDerivAt_exp"],
 ["checkType", "Complex.hasDerivAt_log"],
 ["checkType", "Complex.hasDerivAt_logTaylor"],
 ["checkType", "Complex.hasDerivAt_log_sub_logTaylor"],
 ["checkType", "Complex.hasDerivAt_sin"],
 ["checkType", "Complex.hasDerivAt_sinh"],
 ["checkType", "Complex.hasDerivAt_tan"],
 ["checkType", "Complex.hasFDerivAt_cpow"],
 ["checkType", "Complex.hasFPowerSeriesOnBall_of_differentiable_off_countable"],
 ["checkType", "Complex.hasStrictDerivAt_const_cpow"],
 ["checkType", "Complex.hasStrictDerivAt_cos"],
 ["checkType", "Complex.hasStrictDerivAt_cosh"],
 ["checkType", "Complex.hasStrictDerivAt_cpow_const"],
 ["checkType", "Complex.hasStrictDerivAt_exp"],
 ["checkType", "Complex.hasStrictDerivAt_log"],
 ["checkType", "Complex.hasStrictDerivAt_sin"],
 ["checkType", "Complex.hasStrictDerivAt_sinh"],
 ["checkType", "Complex.hasStrictDerivAt_tan"],
 ["checkType", "Complex.hasStrictFDerivAt_cpow"],
 ["checkType", "Complex.hasStrictFDerivAt_cpow'"],
 ["checkType", "Complex.hasStrictFDerivAt_exp_real"],
 ["checkType", "Complex.hasStrictFDerivAt_log_real"],
 ["checkType", "Complex.hasSum_conj"],
 ["checkType", "Complex.hasSum_conj'"],
 ["checkType", "Complex.hasSum_deriv_of_summable_norm"],
 ["checkType", "Complex.imClm_apply"],
 ["checkType", "Complex.imClm_nnnorm"],
 ["checkType", "Complex.imClm_norm"],
 ["checkType", "Complex.imLm_coe"],
 ["checkType", "Complex.im_le_abs"],
 ["checkType", "Complex.inner"],
 ["checkType", "Complex.instIsComplete"],
 ["checkType", "Complex.int_cast_abs"],
 ["checkType",
  "Complex.integral_boundary_rect_eq_zero_of_continuousOn_of_differentiableOn"],
 ["checkType", "Complex.integral_boundary_rect_eq_zero_of_differentiableOn"],
 ["checkType",
  "Complex.integral_boundary_rect_eq_zero_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.integral_boundary_rect_of_continuousOn_of_hasFDerivAt_real"],
 ["checkType", "Complex.integral_boundary_rect_of_differentiableOn_real"],
 ["checkType",
  "Complex.integral_boundary_rect_of_hasFDerivAt_real_off_countable"],
 ["checkType", "Complex.integral_comp_polarCoord_symm"],
 ["checkType", "Complex.integral_cpow_mul_exp_neg_mul_Ioi"],
 ["checkType", "Complex.integral_exp_neg_mul_rpow"],
 ["checkType", "Complex.integral_exp_neg_rpow"],
 ["checkType", "Complex.integral_rpow_mul_exp_neg_mul_rpow"],
 ["checkType", "Complex.integral_rpow_mul_exp_neg_rpow"],
 ["checkType", "Complex.inv_cpow_eq_ite"],
 ["checkType", "Complex.inv_cpow_eq_ite'"],
 ["checkType", "Complex.inv_eq_conj"],
 ["checkType", "Complex.isBigO_cpow_rpow"],
 ["checkType", "Complex.isCauSeq_abs"],
 ["checkType", "Complex.isCauSeq_abs_exp"],
 ["checkType", "Complex.isCauSeq_conj"],
 ["checkType", "Complex.isCauSeq_exp"],
 ["checkType", "Complex.isCauSeq_im"],
 ["checkType", "Complex.isCauSeq_re"],
 ["checkType", "Complex.isTheta_cpow_const_rpow"],
 ["checkType", "Complex.isTheta_cpow_rpow"],
 ["checkType", "Complex.isometryOfOrthonormal_apply"],
 ["checkType", "Complex.isometryOfOrthonormal_symm_apply"],
 ["checkType", "Complex.isometry_conj"],
 ["checkType", "Complex.iter_deriv_exp"],
 ["checkType", "Complex.kahler"],
 ["checkType", "Complex.liftAux_apply"],
 ["checkType", "Complex.liftAux_apply_I"],
 ["checkType", "Complex.lift_apply"],
 ["checkType", "Complex.lift_symm_apply_coe"],
 ["checkType", "Complex.limAux"],
 ["checkType", "Complex.lim_abs"],
 ["checkType", "Complex.lim_conj"],
 ["checkType", "Complex.lim_eq_lim_im_add_lim_re"],
 ["checkType", "Complex.lim_im"],
 ["checkType", "Complex.lim_re"],
 ["checkType", "Complex.linearEquiv_det_conjAe"],
 ["checkType", "Complex.linearEquiv_det_conjLie"],
 ["checkType", "Complex.liouville_theorem_aux"],
 ["checkType", "Complex.lipschitz_equivRealProd"],
 ["checkType", "Complex.log_conj"],
 ["checkType", "Complex.log_conj_eq_ite"],
 ["checkType", "Complex.log_eq_integral"],
 ["checkType", "Complex.log_inv_eq_integral"],
 ["checkType", "Complex.log_inv_eq_ite"],
 ["checkType", "Complex.log_re"],
 ["checkType", "Complex.measurableEquivPi_apply"],
 ["checkType", "Complex.measurableEquivPi_symm_apply"],
 ["checkType", "Complex.measurableEquivRealProd_apply"],
 ["checkType", "Complex.measurableEquivRealProd_symm_apply"],
 ["checkType", "Complex.mul_conj'"],
 ["checkType", "Complex.mul_self_abs"],
 ["checkType", "Complex.neg_re_eq_abs"],
 ["checkType", "Complex.nndist_conj_comm"],
 ["checkType", "Complex.nndist_conj_conj"],
 ["checkType", "Complex.nndist_conj_self"],
 ["checkType", "Complex.nndist_self_conj"],
 ["checkType", "Complex.normSq_eq_abs"],
 ["checkType", "Complex.norm_deriv_le_aux"],
 ["checkType", "Complex.norm_deriv_le_div_of_mapsTo_ball"],
 ["checkType", "Complex.norm_deriv_le_of_forall_mem_sphere_norm_le"],
 ["checkType", "Complex.norm_dslope_le_div_of_mapsTo_ball"],
 ["checkType", "Complex.norm_eqOn_closedBall_of_isMaxOn"],
 ["checkType", "Complex.norm_eqOn_closure_of_isPreconnected_of_isMaxOn"],
 ["checkType", "Complex.norm_eqOn_of_isPreconnected_of_isMaxOn"],
 ["checkType", "Complex.norm_eq_abs"],
 ["checkType", "Complex.norm_max_aux₁"],
 ["checkType", "Complex.norm_max_aux₂"],
 ["checkType", "Complex.norm_max_aux₃"],
 ["checkType", "Complex.oangle"],
 ["checkType", "Complex.ofRealAm_coe"],
 ["checkType", "Complex.ofRealClm_apply"],
 ["checkType", "Complex.ofRealClm_nnnorm"],
 ["checkType", "Complex.ofRealClm_norm"],
 ["checkType", "Complex.orthonormalBasisOneI"],
 ["checkType", "Complex.orthonormalBasisOneI_repr_apply"],
 ["checkType", "Complex.orthonormalBasisOneI_repr_symm_apply"],
 ["checkType", "Complex.polarCoord_apply"],
 ["checkType", "Complex.polardCoord_symm_abs"],
 ["checkType", "Complex.range_abs"],
 ["checkType", "Complex.range_normSq"],
 ["checkType", "Complex.reClm_apply"],
 ["checkType", "Complex.reClm_nnnorm"],
 ["checkType", "Complex.reClm_norm"],
 ["checkType", "Complex.reLm_coe"],
 ["checkType", "Complex.re_eq_abs"],
 ["checkType", "Complex.re_eq_neg_abs"],
 ["checkType", "Complex.re_le_abs"],
 ["checkType", "Complex.rightAngleRotation"],
 ["checkType", "Complex.ringHom_eq_id_or_conj_of_continuous"],
 ["checkType", "Complex.ringHom_eq_ofReal_of_continuous"],
 ["checkType", "Complex.rotation"],
 ["checkType", "Complex.schwarz_aux"],
 ["checkType", "Complex.selfAdjointEquiv_apply"],
 ["checkType", "Complex.selfAdjointEquiv_symm_apply"],
 ["checkType", "Complex.sin_arg"],
 ["checkType", "Complex.sin_conj"],
 ["checkType", "Complex.sinh_conj"],
 ["checkType", "Complex.sq_abs"],
 ["checkType", "Complex.sq_abs_sub_sq_im"],
 ["checkType", "Complex.sq_abs_sub_sq_re"],
 ["checkType", "Complex.summable_conj"],
 ["checkType", "Complex.tan_conj"],
 ["checkType", "Complex.tanh_conj"],
 ["checkType", "Complex.tendstoUniformlyOn_deriv_of_cthickening_subset"],
 ["checkType", "Complex.tendsto_abs_cocompact_atTop"],
 ["checkType", "Complex.tendsto_abs_tan_atTop"],
 ["checkType", "Complex.tendsto_abs_tan_of_cos_eq_zero"],
 ["checkType",
  "Complex.tendsto_limUnder_of_differentiable_on_punctured_nhds_of_bounded_under"],
 ["checkType",
  "Complex.tendsto_limUnder_of_differentiable_on_punctured_nhds_of_isLittleO"],
 ["checkType", "Complex.tendsto_log_nhdsWithin_im_neg_of_re_neg_of_im_zero"],
 ["checkType", "Complex.tendsto_log_nhdsWithin_im_nonneg_of_re_neg_of_im_zero"],
 ["checkType", "Complex.tendsto_normSq_cocompact_atTop"],
 ["checkType", "Complex.toBasis_orthonormalBasisOneI"],
 ["checkType", "Complex.toMatrix_conjAe"],
 ["checkType",
  "Complex.two_pi_I_inv_smul_circleIntegral_sub_inv_smul_of_differentiable_on_off_countable"],
 ["checkType",
  "Complex.two_pi_I_inv_smul_circleIntegral_sub_sq_inv_smul_of_differentiable"],
 ["checkType", "Complex.uniformContinuous_ringHom_eq_id_or_conj"],
 ["checkType", "Complex.uniformEmbedding_equivRealProd"],
 ["checkType", "Complex.volume_ball"],
 ["checkType", "Complex.volume_closedBall"],
 ["checkType", "Complex.volume_preserving_equiv_pi"],
 ["checkType", "Complex.volume_preserving_equiv_real_prod"],
 ["checkType", "Complex.volume_sum_rpow_le"],
 ["checkType", "Complex.volume_sum_rpow_lt"],
 ["checkType", "Complex.volume_sum_rpow_lt_one"],
 ["checkType", "Composition.blocksFun_sigmaCompositionAux"],
 ["checkType", "ConcaveOn.congr"],
 ["checkType", "ContDiff.ccos"],
 ["checkType", "ContDiff.ccosh"],
 ["checkType", "ContDiff.cexp"],
 ["checkType", "ContDiff.clm_apply"],
 ["checkType", "ContDiff.comp_continuousLinearMap"],
 ["checkType", "ContDiff.contDiff_fderiv_apply"],
 ["checkType", "ContDiff.continuousLinearMap_comp"],
 ["checkType", "ContDiff.continuous_fderiv_apply"],
 ["checkType", "ContDiff.csin"],
 ["checkType", "ContDiff.csinh"],
 ["checkType", "ContDiff.fderiv_apply"],
 ["checkType", "ContDiff.real_of_complex"],
 ["checkType", "ContDiffAt.ccos"],
 ["checkType", "ContDiffAt.ccosh"],
 ["checkType", "ContDiffAt.cexp"],
 ["checkType", "ContDiffAt.continuousLinearMap_comp"],
 ["checkType", "ContDiffAt.csin"],
 ["checkType", "ContDiffAt.csinh"],
 ["checkType", "ContDiffAt.real_of_complex"],
 ["checkType", "ContDiffBumpBase.mk"],
 ["checkType", "ContDiffBumpBase.rec"],
 ["checkType", "ContDiffBumpBase.smooth"],
 ["checkType", "ContDiffOn.ccos"],
 ["checkType", "ContDiffOn.ccosh"],
 ["checkType", "ContDiffOn.cexp"],
 ["checkType", "ContDiffOn.clm_apply"],
 ["checkType", "ContDiffOn.comp_continuousLinearMap"],
 ["checkType", "ContDiffOn.continuousLinearMap_comp"],
 ["checkType", "ContDiffOn.continuousOn_fderivWithin_apply"],
 ["checkType", "ContDiffOn.csin"],
 ["checkType", "ContDiffOn.csinh"],
 ["checkType", "ContDiffOn.prod_map"],
 ["checkType", "ContDiffWithinAt.ccos"],
 ["checkType", "ContDiffWithinAt.ccosh"],
 ["checkType", "ContDiffWithinAt.cexp"],
 ["checkType", "ContDiffWithinAt.comp_continuousLinearMap"],
 ["checkType", "ContDiffWithinAt.continuousLinearMap_comp"],
 ["checkType", "ContDiffWithinAt.csin"],
 ["checkType", "ContDiffWithinAt.csinh"],
 ["checkType", "ContDiffWithinAt.fderivWithin"],
 ["checkType", "ContDiffWithinAt.fderivWithin'"],
 ["checkType", "ContDiffWithinAt.fderivWithin''"],
 ["checkType", "ContDiffWithinAt.fderivWithin_apply"],
 ["checkType", "ContDiffWithinAt.hasFDerivWithinAt_nhds"],
 ["checkType", "ContDiffWithinAt.prod_map"],
 ["checkType", "ContDiffWithinAt.prod_map'"],
 ["checkType", "ContMDiff.clm_apply"],
 ["checkType", "ContMDiffAt.clm_apply"],
 ["checkType", "ContMDiffAt.mfderiv_apply"],
 ["checkType", "ContMDiffMap.coeFn_mk"],
 ["checkType", "ContMDiffMap.coe_injective"],
 ["checkType", "ContMDiffMap.comp_apply"],
 ["checkType", "ContMDiffMap.contMDiff"],
 ["checkType", "ContMDiffMap.ext"],
 ["checkType", "ContMDiffMap.funLike"],
 ["checkType", "ContMDiffMap.mdifferentiable"],
 ["checkType", "ContMDiffMap.mdifferentiable'"],
 ["checkType", "ContMDiffMap.mdifferentiableAt"],
 ["checkType", "ContMDiffMap.smooth"],
 ["checkType", "ContMDiffOn.clm_apply"],
 ["checkType", "ContMDiffOn.coordChange"],
 ["checkType", "ContMDiffOn.coordChangeL"],
 ["checkType", "ContMDiffOn.prod_map"],
 ["checkType", "ContMDiffSection.coeFn_mk"],
 ["checkType", "ContMDiffSection.coe_add"],
 ["checkType", "ContMDiffSection.coe_inj"],
 ["checkType", "ContMDiffSection.coe_injective"],
 ["checkType", "ContMDiffSection.coe_neg"],
 ["checkType", "ContMDiffSection.coe_nsmul"],
 ["checkType", "ContMDiffSection.coe_smul"],
 ["checkType", "ContMDiffSection.coe_sub"],
 ["checkType", "ContMDiffSection.coe_zero"],
 ["checkType", "ContMDiffSection.coe_zsmul"],
 ["checkType", "ContMDiffSection.contMDiff"],
 ["checkType", "ContMDiffSection.ext"],
 ["checkType", "ContMDiffSection.instFunLikeContMDiffSection"],
 ["checkType", "ContMDiffSection.mdifferentiable"],
 ["checkType", "ContMDiffSection.mdifferentiable'"],
 ["checkType", "ContMDiffSection.mdifferentiableAt"],
 ["checkType", "ContMDiffSection.smooth"],
 ["checkType", "ContMDiffWithinAt.clm_apply"],
 ["checkType", "ContMDiffWithinAt.comp"],
 ["checkType", "ContMDiffWithinAt.comp_of_eq"],
 ["checkType", "ContMDiffWithinAt.prod_map"],
 ["checkType", "ContMDiffWithinAt.prod_map'"],
 ["checkType", "Continuous.clm_apply"],
 ["checkType", "Continuous.convolution_integrand_fst"],
 ["checkType", "Continuous.path_eval"],
 ["checkType", "ContinuousAddMonoidHom.add_toFun"],
 ["checkType", "ContinuousAddMonoidHom.comp_toFun"],
 ["checkType", "ContinuousAddMonoidHom.continuous_of_continuous_uncurry"],
 ["checkType", "ContinuousAddMonoidHom.coprod_toFun"],
 ["checkType", "ContinuousAddMonoidHom.diag_toFun"],
 ["checkType", "ContinuousAddMonoidHom.ext"],
 ["checkType", "ContinuousAddMonoidHom.fst_toFun"],
 ["checkType", "ContinuousAddMonoidHom.id_toFun"],
 ["checkType", "ContinuousAddMonoidHom.inl_toFun"],
 ["checkType", "ContinuousAddMonoidHom.inr_toFun"],
 ["checkType", "ContinuousAddMonoidHom.mk'"],
 ["checkType", "ContinuousAddMonoidHom.neg_toFun"],
 ["checkType", "ContinuousAddMonoidHom.range_toContinuousMap"],
 ["checkType", "ContinuousAddMonoidHom.snd_toFun"],
 ["checkType", "ContinuousAddMonoidHom.sum_map_toFun"],
 ["checkType", "ContinuousAddMonoidHom.sum_toFun"],
 ["checkType", "ContinuousAddMonoidHom.swap_toFun"],
 ["checkType", "ContinuousAddMonoidHom.zero_toFun"],
 ["checkType", "ContinuousAddMonoidHomClass.map_continuous"],
 ["checkType", "ContinuousAddMonoidHomClass.mk"],
 ["checkType", "ContinuousAddMonoidHomClass.rec"],
 ["checkType", "ContinuousAffineMap.coe_contLinear"],
 ["checkType", "ContinuousAffineMap.coe_linear_eq_coe_contLinear"],
 ["checkType", "ContinuousAffineMap.coe_mk_const_linear_eq_linear"],
 ["checkType", "ContinuousAffineMap.contDiff"],
 ["checkType", "ContinuousAffineMap.contLinear_map_vsub"],
 ["checkType", "ContinuousAffineMap.decomp"],
 ["checkType", "ContinuousAffineMap.map_vadd"],
 ["checkType", "ContinuousAffineMap.norm_comp_le"],
 ["checkType", "ContinuousAffineMap.norm_def"],
 ["checkType", "ContinuousAffineMap.norm_eq"],
 ["checkType", "ContinuousAffineMap.norm_image_zero_le"],
 ["checkType", "ContinuousAffineMap.toConstProdContinuousLinearMap_fst"],
 ["checkType", "ContinuousAffineMap.toConstProdContinuousLinearMap_snd"],
 ["checkType", "ContinuousLinearEquiv.antilipschitz"],
 ["checkType", "ContinuousLinearEquiv.arrowCongrSL_apply"],
 ["checkType", "ContinuousLinearEquiv.arrowCongrSL_symm_apply"],
 ["checkType", "ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_apply"],
 ["checkType", "ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply"],
 ["checkType", "ContinuousLinearEquiv.coeFn_ofBijective"],
 ["checkType", "ContinuousLinearEquiv.coe_toDiffeomorph"],
 ["checkType", "ContinuousLinearEquiv.coe_toDiffeomorph_symm"],
 ["checkType", "ContinuousLinearEquiv.coe_toSpanNonzeroSingleton_symm"],
 ["checkType", "ContinuousLinearEquiv.compContinuousMultilinearMapL_apply"],
 ["checkType", "ContinuousLinearEquiv.comp_contDiffAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_contDiffOn_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_contDiffWithinAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_contDiff_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_differentiableAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_differentiableOn_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_differentiableWithinAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_differentiable_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_fderiv"],
 ["checkType", "ContinuousLinearEquiv.comp_fderivWithin"],
 ["checkType", "ContinuousLinearEquiv.comp_hasFDerivAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_hasFDerivAt_iff'"],
 ["checkType", "ContinuousLinearEquiv.comp_hasFDerivWithinAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_hasFDerivWithinAt_iff'"],
 ["checkType", "ContinuousLinearEquiv.comp_hasStrictFDerivAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_differentiableAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_differentiableOn_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_differentiableWithinAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_differentiable_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_fderiv"],
 ["checkType", "ContinuousLinearEquiv.comp_right_fderivWithin"],
 ["checkType", "ContinuousLinearEquiv.comp_right_hasFDerivAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_hasFDerivAt_iff'"],
 ["checkType", "ContinuousLinearEquiv.comp_right_hasFDerivWithinAt_iff"],
 ["checkType", "ContinuousLinearEquiv.comp_right_hasFDerivWithinAt_iff'"],
 ["checkType", "ContinuousLinearEquiv.contDiff"],
 ["checkType", "ContinuousLinearEquiv.contDiffAt_comp_iff"],
 ["checkType", "ContinuousLinearEquiv.contDiffOn_comp_iff"],
 ["checkType", "ContinuousLinearEquiv.contDiffWithinAt_comp_iff"],
 ["checkType", "ContinuousLinearEquiv.contDiff_comp_iff"],
 ["checkType", "ContinuousLinearEquiv.coord_norm"],
 ["checkType", "ContinuousLinearEquiv.coord_self"],
 ["checkType", "ContinuousLinearEquiv.coord_toSpanNonzeroSingleton"],
 ["checkType", "ContinuousLinearEquiv.differentiable"],
 ["checkType", "ContinuousLinearEquiv.differentiableAt"],
 ["checkType", "ContinuousLinearEquiv.differentiableOn"],
 ["checkType", "ContinuousLinearEquiv.differentiableWithinAt"],
 ["checkType", "ContinuousLinearEquiv.dimH_image"],
 ["checkType", "ContinuousLinearEquiv.dimH_preimage"],
 ["checkType", "ContinuousLinearEquiv.fderiv"],
 ["checkType", "ContinuousLinearEquiv.fderivWithin"],
 ["checkType", "ContinuousLinearEquiv.hasFDerivAt"],
 ["checkType", "ContinuousLinearEquiv.hasFDerivWithinAt"],
 ["checkType", "ContinuousLinearEquiv.hasMFDerivAt"],
 ["checkType", "ContinuousLinearEquiv.hasMFDerivWithinAt"],
 ["checkType", "ContinuousLinearEquiv.hasStrictFDerivAt"],
 ["checkType", "ContinuousLinearEquiv.homothety_inverse"],
 ["checkType", "ContinuousLinearEquiv.integral_comp_comm"],
 ["checkType", "ContinuousLinearEquiv.isAddHaarMeasure_map"],
 ["checkType", "ContinuousLinearEquiv.isBigO_comp"],
 ["checkType", "ContinuousLinearEquiv.isBigO_comp_rev"],
 ["checkType", "ContinuousLinearEquiv.isBigO_sub"],
 ["checkType", "ContinuousLinearEquiv.isBigO_sub_rev"],
 ["checkType", "ContinuousLinearEquiv.iteratedFDerivWithin_comp_left"],
 ["checkType", "ContinuousLinearEquiv.iteratedFDerivWithin_comp_right"],
 ["checkType", "ContinuousLinearEquiv.lipschitz"],
 ["checkType", "ContinuousLinearEquiv.mdifferentiable"],
 ["checkType", "ContinuousLinearEquiv.mdifferentiableAt"],
 ["checkType", "ContinuousLinearEquiv.mdifferentiableOn"],
 ["checkType", "ContinuousLinearEquiv.mdifferentiableWithinAt"],
 ["checkType", "ContinuousLinearEquiv.mfderivWithin_eq"],
 ["checkType", "ContinuousLinearEquiv.mfderiv_eq"],
 ["checkType", "ContinuousLinearEquiv.ofBijective_apply_symm_apply"],
 ["checkType", "ContinuousLinearEquiv.ofBijective_symm_apply_apply"],
 ["checkType", "ContinuousLinearEquiv.ofHomothety"],
 ["checkType", "ContinuousLinearEquiv.toSpanNonzeroSingleton_coord"],
 ["checkType", "ContinuousLinearEquiv.toSpanNonzeroSingleton_homothety"],
 ["checkType", "ContinuousLinearEquiv.uniqueDiffOn_image"],
 ["checkType", "ContinuousLinearEquiv.uniqueDiffOn_image_iff"],
 ["checkType", "ContinuousLinearEquiv.uniqueDiffOn_preimage_iff"],
 ["checkType", "ContinuousLinearMap.adjointAux_adjointAux"],
 ["checkType", "ContinuousLinearMap.adjointAux_apply"],
 ["checkType", "ContinuousLinearMap.adjointAux_inner_left"],
 ["checkType", "ContinuousLinearMap.adjointAux_inner_right"],
 ["checkType", "ContinuousLinearMap.adjointAux_norm"],
 ["checkType", "ContinuousLinearMap.adjoint_adjoint"],
 ["checkType", "ContinuousLinearMap.adjoint_comp"],
 ["checkType", "ContinuousLinearMap.adjoint_id"],
 ["checkType", "ContinuousLinearMap.adjoint_inner_left"],
 ["checkType", "ContinuousLinearMap.adjoint_inner_right"],
 ["checkType", "ContinuousLinearMap.aestronglyMeasurable_comp₂"],
 ["checkType", "ContinuousLinearMap.analyticAt"],
 ["checkType", "ContinuousLinearMap.analyticAt_bilinear"],
 ["checkType", "ContinuousLinearMap.antilipschitz_of_bound"],
 ["checkType", "ContinuousLinearMap.antilipschitz_of_embedding"],
 ["checkType", "ContinuousLinearMap.apply_apply"],
 ["checkType", "ContinuousLinearMap.apply_apply'"],
 ["checkType", "ContinuousLinearMap.apply_norm_eq_sqrt_inner_adjoint_left"],
 ["checkType", "ContinuousLinearMap.apply_norm_eq_sqrt_inner_adjoint_right"],
 ["checkType", "ContinuousLinearMap.apply_norm_sq_eq_inner_adjoint_left"],
 ["checkType", "ContinuousLinearMap.apply_norm_sq_eq_inner_adjoint_right"],
 ["checkType", "ContinuousLinearMap.bilinearComp_apply"],
 ["checkType", "ContinuousLinearMap.bound"],
 ["checkType", "ContinuousLinearMap.bound_of_antilipschitz"],
 ["checkType", "ContinuousLinearMap.bounds_bddBelow"],
 ["checkType", "ContinuousLinearMap.bounds_nonempty"],
 ["checkType", "ContinuousLinearMap.closure_preimage"],
 ["checkType", "ContinuousLinearMap.coeFn_compLp"],
 ["checkType", "ContinuousLinearMap.coeFn_compLp'"],
 ["checkType", "ContinuousLinearMap.coeFn_compLpL"],
 ["checkType", "ContinuousLinearMap.coeFn_ofIsClosedGraph"],
 ["checkType", "ContinuousLinearMap.coeFn_ofSeqClosedGraph"],
 ["checkType", "ContinuousLinearMap.coe_deriv₂"],
 ["checkType", "ContinuousLinearMap.coe_equivRange"],
 ["checkType", "ContinuousLinearMap.coe_flipₗᵢ"],
 ["checkType", "ContinuousLinearMap.coe_flipₗᵢ'"],
 ["checkType", "ContinuousLinearMap.coe_linearMap_equivRange"],
 ["checkType", "ContinuousLinearMap.coe_mkOfIsCompactOperator"],
 ["checkType", "ContinuousLinearMap.coe_mulₗᵢ"],
 ["checkType", "ContinuousLinearMap.coe_ofSeqClosedGraph"],
 ["checkType", "ContinuousLinearMap.coe_restrictScalarsIsometry"],
 ["checkType", "ContinuousLinearMap.coe_restrict_scalarsL'"],
 ["checkType", "ContinuousLinearMap.compFormalMultilinearSeries_apply'"],
 ["checkType", "ContinuousLinearMap.compL_apply"],
 ["checkType", "ContinuousLinearMap.compLeftContinuousBounded_apply"],
 ["checkType", "ContinuousLinearMap.compLeftContinuousCompact_apply"],
 ["checkType", "ContinuousLinearMap.compSL_apply"],
 ["checkType", "ContinuousLinearMap.comp_analyticOn"],
 ["checkType", "ContinuousLinearMap.comp_cPolynomialOn"],
 ["checkType", "ContinuousLinearMap.comp_hasFPowerSeriesOnBall"],
 ["checkType", "ContinuousLinearMap.comp_hasFiniteFPowerSeriesOnBall"],
 ["checkType", "ContinuousLinearMap.comp_memℒp"],
 ["checkType", "ContinuousLinearMap.comp_memℒp'"],
 ["checkType", "ContinuousLinearMap.contDiff"],
 ["checkType", "ContinuousLinearMap.contMDiff"],
 ["checkType", "ContinuousLinearMap.contMDiffAt"],
 ["checkType", "ContinuousLinearMap.contMDiffOn"],
 ["checkType", "ContinuousLinearMap.contMDiffWithinAt"],
 ["checkType", "ContinuousLinearMap.continuous_integral_comp_L1"],
 ["checkType", "ContinuousLinearMap.continuous₂"],
 ["checkType", "ContinuousLinearMap.deriv"],
 ["checkType", "ContinuousLinearMap.derivWithin"],
 ["checkType", "ContinuousLinearMap.differentiable"],
 ["checkType", "ContinuousLinearMap.differentiableAt"],
 ["checkType", "ContinuousLinearMap.differentiableOn"],
 ["checkType", "ContinuousLinearMap.differentiableWithinAt"],
 ["checkType", "ContinuousLinearMap.dist_le_op_norm"],
 ["checkType", "ContinuousLinearMap.dslope_comp"],
 ["checkType", "ContinuousLinearMap.eq_adjoint_iff"],
 ["checkType", "ContinuousLinearMap.equivProdOfSurjectiveOfIsCompl_apply"],
 ["checkType", "ContinuousLinearMap.equivRange"],
 ["checkType", "ContinuousLinearMap.exists_approx_preimage_norm_le"],
 ["checkType", "ContinuousLinearMap.exists_lt_apply_of_lt_op_nnnorm"],
 ["checkType", "ContinuousLinearMap.exists_lt_apply_of_lt_op_norm"],
 ["checkType", "ContinuousLinearMap.exists_mul_lt_apply_of_lt_op_nnnorm"],
 ["checkType", "ContinuousLinearMap.exists_mul_lt_of_lt_op_norm"],
 ["checkType", "ContinuousLinearMap.exists_preimage_norm_le"],
 ["checkType", "ContinuousLinearMap.extend"],
 ["checkType", "ContinuousLinearMap.extendTo𝕜'_apply"],
 ["checkType", "ContinuousLinearMap.extendTo𝕜_apply"],
 ["checkType", "ContinuousLinearMap.extend_eq"],
 ["checkType", "ContinuousLinearMap.extend_unique"],
 ["checkType", "ContinuousLinearMap.extend_zero"],
 ["checkType", "ContinuousLinearMap.fderiv"],
 ["checkType", "ContinuousLinearMap.fderivWithin"],
 ["checkType", "ContinuousLinearMap.fderivWithin_of_bilinear"],
 ["checkType", "ContinuousLinearMap.fderiv_of_bilinear"],
 ["checkType", "ContinuousLinearMap.flipMultilinear_apply_apply"],
 ["checkType", "ContinuousLinearMap.flip_apply"],
 ["checkType", "ContinuousLinearMap.fpowerSeriesBilinear_apply_one"],
 ["checkType", "ContinuousLinearMap.fpowerSeriesBilinear_apply_zero"],
 ["checkType", "ContinuousLinearMap.fpowerSeries_apply_one"],
 ["checkType", "ContinuousLinearMap.fpowerSeries_apply_zero"],
 ["checkType", "ContinuousLinearMap.frontier_preimage"],
 ["checkType", "ContinuousLinearMap.hasBasis_nhds_zero"],
 ["checkType", "ContinuousLinearMap.hasBasis_nhds_zero_of_basis"],
 ["checkType", "ContinuousLinearMap.hasDerivAt"],
 ["checkType", "ContinuousLinearMap.hasDerivAtFilter"],
 ["checkType", "ContinuousLinearMap.hasDerivWithinAt"],
 ["checkType", "ContinuousLinearMap.hasFDerivAt"],
 ["checkType", "ContinuousLinearMap.hasFDerivAtFilter"],
 ["checkType", "ContinuousLinearMap.hasFDerivAt_of_bilinear"],
 ["checkType", "ContinuousLinearMap.hasFDerivWithinAt"],
 ["checkType", "ContinuousLinearMap.hasFDerivWithinAt_of_bilinear"],
 ["checkType", "ContinuousLinearMap.hasFPowerSeriesAt"],
 ["checkType", "ContinuousLinearMap.hasFPowerSeriesAt_bilinear"],
 ["checkType", "ContinuousLinearMap.hasFPowerSeriesOnBall"],
 ["checkType", "ContinuousLinearMap.hasFPowerSeriesOnBall_bilinear"],
 ["checkType", "ContinuousLinearMap.hasMFDerivAt"],
 ["checkType", "ContinuousLinearMap.hasMFDerivWithinAt"],
 ["checkType", "ContinuousLinearMap.hasStrictDerivAt"],
 ["checkType", "ContinuousLinearMap.hasStrictFDerivAt"],
 ["checkType", "ContinuousLinearMap.homothety_norm"],
 ["checkType", "ContinuousLinearMap.integrable_comp"],
 ["checkType", "ContinuousLinearMap.integral_apply"],
 ["checkType", "ContinuousLinearMap.integral_compLp"],
 ["checkType", "ContinuousLinearMap.integral_comp_L1_comm"],
 ["checkType", "ContinuousLinearMap.integral_comp_comm"],
 ["checkType", "ContinuousLinearMap.integral_comp_comm'"],
 ["checkType", "ContinuousLinearMap.interior_preimage"],
 ["checkType", "ContinuousLinearMap.intervalIntegral_apply"],
 ["checkType", "ContinuousLinearMap.intervalIntegral_comp_comm"],
 ["checkType", "ContinuousLinearMap.isAdjointPair_inner"],
 ["checkType", "ContinuousLinearMap.isBigOWith_comp"],
 ["checkType", "ContinuousLinearMap.isBigOWith_id"],
 ["checkType", "ContinuousLinearMap.isBigOWith_sub"],
 ["checkType", "ContinuousLinearMap.isBigO_comp"],
 ["checkType", "ContinuousLinearMap.isBigO_id"],
 ["checkType", "ContinuousLinearMap.isBigO_sub"],
 ["checkType", "ContinuousLinearMap.isBoundedBilinearMap"],
 ["checkType", "ContinuousLinearMap.isBoundedLinearMap"],
 ["checkType", "ContinuousLinearMap.isClosed_image_coe_closedBall"],
 ["checkType",
  "ContinuousLinearMap.isClosed_image_coe_of_bounded_of_weak_closed"],
 ["checkType", "ContinuousLinearMap.isCompact_closure_image_coe_of_bounded"],
 ["checkType", "ContinuousLinearMap.isCompact_image_coe_closedBall"],
 ["checkType",
  "ContinuousLinearMap.isCompact_image_coe_of_bounded_of_closed_image"],
 ["checkType",
  "ContinuousLinearMap.isCompact_image_coe_of_bounded_of_weak_closed"],
 ["checkType", "ContinuousLinearMap.isLeast_op_nnnorm"],
 ["checkType", "ContinuousLinearMap.isLeast_op_norm"],
 ["checkType", "ContinuousLinearMap.isOpenMap"],
 ["checkType", "ContinuousLinearMap.isPositive_iff_complex"],
 ["checkType", "ContinuousLinearMap.isSelfAdjoint_iff'"],
 ["checkType", "ContinuousLinearMap.is_weak_closed_closedBall"],
 ["checkType", "ContinuousLinearMap.isometry_mul"],
 ["checkType", "ContinuousLinearMap.isometry_mul_flip"],
 ["checkType", "ContinuousLinearMap.iteratedFDerivWithin_comp_left"],
 ["checkType", "ContinuousLinearMap.iteratedFDerivWithin_comp_right"],
 ["checkType", "ContinuousLinearMap.iteratedFDeriv_comp_left"],
 ["checkType", "ContinuousLinearMap.iteratedFDeriv_comp_right"],
 ["checkType", "ContinuousLinearMap.le_of_op_norm_le"],
 ["checkType", "ContinuousLinearMap.le_of_op_norm_le_of_le"],
 ["checkType", "ContinuousLinearMap.le_of_op_norm₂_le_of_le"],
 ["checkType", "ContinuousLinearMap.le_op_nnnorm"],
 ["checkType", "ContinuousLinearMap.le_op_norm"],
 ["checkType", "ContinuousLinearMap.le_op_norm_of_le"],
 ["checkType", "ContinuousLinearMap.le_op_norm₂"],
 ["checkType", "ContinuousLinearMap.lipschitz"],
 ["checkType", "ContinuousLinearMap.lipschitz_apply"],
 ["checkType", "ContinuousLinearMap.lsmul_apply"],
 ["checkType", "ContinuousLinearMap.map_add_add"],
 ["checkType", "ContinuousLinearMap.map_add₂"],
 ["checkType", "ContinuousLinearMap.map_neg₂"],
 ["checkType", "ContinuousLinearMap.map_smul₂"],
 ["checkType", "ContinuousLinearMap.map_smulₛₗ₂"],
 ["checkType", "ContinuousLinearMap.map_sub₂"],
 ["checkType", "ContinuousLinearMap.map_zero₂"],
 ["checkType", "ContinuousLinearMap.mdifferentiable"],
 ["checkType", "ContinuousLinearMap.mdifferentiableAt"],
 ["checkType", "ContinuousLinearMap.mdifferentiableOn"],
 ["checkType", "ContinuousLinearMap.mdifferentiableWithinAt"],
 ["checkType", "ContinuousLinearMap.measurable"],
 ["checkType", "ContinuousLinearMap.measurable_apply"],
 ["checkType", "ContinuousLinearMap.measurable_apply'"],
 ["checkType", "ContinuousLinearMap.measurable_apply₂"],
 ["checkType", "ContinuousLinearMap.measurable_coe"],
 ["checkType", "ContinuousLinearMap.measurable_comp"],
 ["checkType", "ContinuousLinearMap.mfderivWithin_eq"],
 ["checkType", "ContinuousLinearMap.mfderiv_eq"],
 ["checkType", "ContinuousLinearMap.mkOfIsCompactOperator"],
 ["checkType", "ContinuousLinearMap.mkOfIsCompactOperator_mem_compactOperator"],
 ["checkType", "ContinuousLinearMap.mkOfIsCompactOperator_to_linearMap"],
 ["checkType", "ContinuousLinearMap.mulLeftRight_apply"],
 ["checkType", "ContinuousLinearMap.mulLeftRight_isBoundedBilinear"],
 ["checkType", "ContinuousLinearMap.mul_apply'"],
 ["checkType", "ContinuousLinearMap.nndist_le_op_nnnorm"],
 ["checkType", "ContinuousLinearMap.nnnorm_def"],
 ["checkType", "ContinuousLinearMap.norm_adjoint_comp_self"],
 ["checkType", "ContinuousLinearMap.norm_def"],
 ["checkType", "ContinuousLinearMap.norm_extendTo𝕜'_bound"],
 ["checkType", "ContinuousLinearMap.norm_iteratedFDerivWithin_le_of_bilinear"],
 ["checkType",
  "ContinuousLinearMap.norm_iteratedFDerivWithin_le_of_bilinear_aux"],
 ["checkType",
  "ContinuousLinearMap.norm_iteratedFDerivWithin_le_of_bilinear_of_le_one"],
 ["checkType", "ContinuousLinearMap.norm_iteratedFDeriv_le_of_bilinear"],
 ["checkType",
  "ContinuousLinearMap.norm_iteratedFDeriv_le_of_bilinear_of_le_one"],
 ["checkType", "ContinuousLinearMap.norm_map_tail_le"],
 ["checkType", "ContinuousLinearMap.norm_smulRightL"],
 ["checkType", "ContinuousLinearMap.norm_smulRightL_apply"],
 ["checkType", "ContinuousLinearMap.ofHomothety"],
 ["checkType", "ContinuousLinearMap.ofMemClosureImageCoeBounded"],
 ["checkType", "ContinuousLinearMap.ofMemClosureImageCoeBounded_apply"],
 ["checkType", "ContinuousLinearMap.ofSeqClosedGraph"],
 ["checkType", "ContinuousLinearMap.ofTendstoOfBoundedRange"],
 ["checkType", "ContinuousLinearMap.ofTendstoOfBoundedRange_apply"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_eq_of_bounds"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_le_bound"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_le_bound'"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_le_iff"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_le_of_lipschitz"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_le_of_unit_nnnorm"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_mul_apply"],
 ["checkType", "ContinuousLinearMap.op_nnnorm_mul_flip_apply"],
 ["checkType", "ContinuousLinearMap.op_norm_bound_of_ball_bound"],
 ["checkType", "ContinuousLinearMap.op_norm_eq_of_bounds"],
 ["checkType", "ContinuousLinearMap.op_norm_ext"],
 ["checkType", "ContinuousLinearMap.op_norm_extend_le"],
 ["checkType", "ContinuousLinearMap.op_norm_le_bound"],
 ["checkType", "ContinuousLinearMap.op_norm_le_bound'"],
 ["checkType", "ContinuousLinearMap.op_norm_le_bound₂"],
 ["checkType", "ContinuousLinearMap.op_norm_le_iff"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_ball"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_lipschitz"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_nhds_zero"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_shell"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_shell'"],
 ["checkType", "ContinuousLinearMap.op_norm_le_of_unit_norm"],
 ["checkType", "ContinuousLinearMap.op_norm_lsmul_apply_le"],
 ["checkType", "ContinuousLinearMap.op_norm_mulLeftRight_apply_apply_le"],
 ["checkType", "ContinuousLinearMap.op_norm_mulLeftRight_apply_le"],
 ["checkType", "ContinuousLinearMap.op_norm_mul_apply"],
 ["checkType", "ContinuousLinearMap.op_norm_mul_apply_le"],
 ["checkType", "ContinuousLinearMap.op_norm_mul_flip_apply"],
 ["checkType", "ContinuousLinearMap.postcomp_apply"],
 ["checkType", "ContinuousLinearMap.postcomp_toFun"],
 ["checkType", "ContinuousLinearMap.precompR_apply"],
 ["checkType", "ContinuousLinearMap.precomp_apply"],
 ["checkType", "ContinuousLinearMap.precomp_toFun"],
 ["checkType", "ContinuousLinearMap.prodMapL_apply"],
 ["checkType", "ContinuousLinearMap.quotientMap"],
 ["checkType", "ContinuousLinearMap.ratio_le_op_norm"],
 ["checkType", "ContinuousLinearMap.reApplyInnerSelf_apply"],
 ["checkType", "ContinuousLinearMap.sSup_closed_unit_ball_eq_nnnorm"],
 ["checkType", "ContinuousLinearMap.sSup_closed_unit_ball_eq_norm"],
 ["checkType", "ContinuousLinearMap.sSup_unit_ball_eq_nnnorm"],
 ["checkType", "ContinuousLinearMap.sSup_unit_ball_eq_norm"],
 ["checkType", "ContinuousLinearMap.set_integral_compLp"],
 ["checkType", "ContinuousLinearMap.smooth"],
 ["checkType", "ContinuousLinearMap.star_eq_adjoint"],
 ["checkType",
  "ContinuousLinearMap.tendsto_birkhoffAverage_orthogonalProjection"],
 ["checkType", "ContinuousLinearMap.tendsto_of_tendsto_pointwise_of_cauchySeq"],
 ["checkType", "ContinuousLinearMap.toContinuousLinearEquivOfDetNeZero_apply"],
 ["checkType", "ContinuousLinearMap.toPMap_adjoint_eq_adjoint_toPMap_of_dense"],
 ["checkType", "ContinuousLinearMap.toSesqForm_apply_coe"],
 ["checkType", "ContinuousLinearMap.toSesqForm_apply_norm_le"],
 ["checkType", "ContinuousLinearMap.toSpanSingleton_homothety"],
 ["checkType", "ContinuousLinearMap.uncurryBilinear_apply"],
 ["checkType", "ContinuousLinearMap.uncurryLeft_apply"],
 ["checkType", "ContinuousLinearMap.uniformEmbedding_of_bound"],
 ["checkType", "ContinuousLinearMap.unit_le_op_norm"],
 ["checkType", "ContinuousMap.addEquivBoundedOfCompact_apply"],
 ["checkType", "ContinuousMap.addEquivBoundedOfCompact_symm_apply"],
 ["checkType", "ContinuousMap.addUnitsLift_apply_neg_apply"],
 ["checkType", "ContinuousMap.addUnitsLift_symm_apply_apply_neg'"],
 ["checkType", "ContinuousMap.algHom_ext_map_X"],
 ["checkType", "ContinuousMap.apply_le_norm"],
 ["checkType", "ContinuousMap.attachBound_apply_coe"],
 ["checkType", "ContinuousMap.canLift"],
 ["checkType", "ContinuousMap.coeFn_toAEEqFun"],
 ["checkType", "ContinuousMap.coeFn_toLp"],
 ["checkType", "ContinuousMap.coeNNRealReal_apply"],
 ["checkType", "ContinuousMap.coe_toLp"],
 ["checkType", "ContinuousMap.compRightAlgHom_continuous"],
 ["checkType", "ContinuousMap.compRightContinuousMap_apply"],
 ["checkType", "ContinuousMap.comp_attachBound_mem_closure"],
 ["checkType", "ContinuousMap.continuous_isUnit_unit"],
 ["checkType", "ContinuousMap.dist_apply_le_dist"],
 ["checkType", "ContinuousMap.dist_le"],
 ["checkType", "ContinuousMap.dist_le_iff_of_nonempty"],
 ["checkType", "ContinuousMap.dist_le_two_norm"],
 ["checkType", "ContinuousMap.dist_lt_iff"],
 ["checkType", "ContinuousMap.dist_lt_iff_of_nonempty"],
 ["checkType", "ContinuousMap.dist_lt_of_dist_lt_modulus"],
 ["checkType", "ContinuousMap.dist_lt_of_nonempty"],
 ["checkType", "ContinuousMap.equivBoundedOfCompact_apply"],
 ["checkType", "ContinuousMap.equivBoundedOfCompact_symm_apply"],
 ["checkType", "ContinuousMap.exists_extension_forall_mem_of_closedEmbedding"],
 ["checkType", "ContinuousMap.exists_extension_of_closedEmbedding"],
 ["checkType",
  "ContinuousMap.exists_mem_subalgebra_near_continuous_of_separatesPoints"],
 ["checkType", "ContinuousMap.exists_mul_le_one_eqOn_ge"],
 ["checkType", "ContinuousMap.exists_restrict_eq_forall_mem_of_closed"],
 ["checkType", "ContinuousMap.hasSum_of_hasSum_Lp"],
 ["checkType", "ContinuousMap.isUnit_iff_forall_isUnit"],
 ["checkType", "ContinuousMap.isUnit_iff_forall_ne_zero"],
 ["checkType", "ContinuousMap.isometryEquivBoundedOfCompact_apply"],
 ["checkType", "ContinuousMap.isometryEquivBoundedOfCompact_symm_apply"],
 ["checkType", "ContinuousMap.linearIsometryBoundedOfCompact_apply_apply"],
 ["checkType", "ContinuousMap.linearIsometryBoundedOfCompact_symm_apply"],
 ["checkType", "ContinuousMap.linearIsometryBoundedOfCompact_toIsometryEquiv"],
 ["checkType", "ContinuousMap.measurable"],
 ["checkType", "ContinuousMap.mem_idealOfSet"],
 ["checkType", "ContinuousMap.mem_idealOfSet_compl_singleton"],
 ["checkType", "ContinuousMap.mem_setOfIdeal"],
 ["checkType", "ContinuousMap.neg_norm_le_apply"],
 ["checkType", "ContinuousMap.nnnorm_lt_iff"],
 ["checkType", "ContinuousMap.nnnorm_lt_iff_of_nonempty"],
 ["checkType", "ContinuousMap.norm_coe_le_norm"],
 ["checkType", "ContinuousMap.norm_eq_iSup_norm"],
 ["checkType", "ContinuousMap.norm_le"],
 ["checkType", "ContinuousMap.norm_le_of_nonempty"],
 ["checkType", "ContinuousMap.norm_lt_iff"],
 ["checkType", "ContinuousMap.norm_lt_iff_of_nonempty"],
 ["checkType", "ContinuousMap.not_mem_idealOfSet"],
 ["checkType", "ContinuousMap.not_mem_setOfIdeal"],
 ["checkType", "ContinuousMap.polynomial_comp_attachBound"],
 ["checkType", "ContinuousMap.polynomial_comp_attachBound_mem"],
 ["checkType", "ContinuousMap.spectrum_eq_range"],
 ["checkType", "ContinuousMap.starAlgHom_ext_map_X"],
 ["checkType",
  "ContinuousMap.starSubalgebra_topologicalClosure_eq_top_of_separatesPoints"],
 ["checkType", "ContinuousMap.toLp_comp_toContinuousMap"],
 ["checkType", "ContinuousMap.toLp_def"],
 ["checkType", "ContinuousMap.toLp_denseRange"],
 ["checkType", "ContinuousMap.toLp_inj"],
 ["checkType", "ContinuousMap.toLp_injective"],
 ["checkType", "ContinuousMap.uniformEmbedding_equivBoundedOfCompact"],
 ["checkType", "ContinuousMap.uniformInducing_equivBoundedOfCompact"],
 ["checkType", "ContinuousMap.uniform_continuity"],
 ["checkType", "ContinuousMap.unitsLift_apply_inv_apply"],
 ["checkType", "ContinuousMap.unitsLift_symm_apply_apply_inv'"],
 ["checkType", "ContinuousMap.unitsOfForallIsUnit"],
 ["checkType", "ContinuousMap.unitsOfForallIsUnit_apply"],
 ["checkType", "ContinuousMap.val_addUnitsLift_apply_apply"],
 ["checkType", "ContinuousMap.val_addUnitsLift_symm_apply_apply"],
 ["checkType", "ContinuousMap.val_unitsLift_apply_apply"],
 ["checkType", "ContinuousMap.val_unitsLift_symm_apply_apply"],
 ["checkType", "ContinuousMonoidHom.comp_toFun"],
 ["checkType", "ContinuousMonoidHom.continuous_of_continuous_uncurry"],
 ["checkType", "ContinuousMonoidHom.coprod_toFun"],
 ["checkType", "ContinuousMonoidHom.diag_toFun"],
 ["checkType", "ContinuousMonoidHom.ext"],
 ["checkType", "ContinuousMonoidHom.fst_toFun"],
 ["checkType", "ContinuousMonoidHom.id_toFun"],
 ["checkType", "ContinuousMonoidHom.inl_toFun"],
 ["checkType", "ContinuousMonoidHom.inr_toFun"],
 ["checkType", "ContinuousMonoidHom.inv_toFun"],
 ["checkType", "ContinuousMonoidHom.mk'"],
 ["checkType", "ContinuousMonoidHom.mul_toFun"],
 ["checkType", "ContinuousMonoidHom.one_toFun"],
 ["checkType", "ContinuousMonoidHom.prod_map_toFun"],
 ["checkType", "ContinuousMonoidHom.prod_toFun"],
 ["checkType", "ContinuousMonoidHom.range_toContinuousMap"],
 ["checkType", "ContinuousMonoidHom.snd_toFun"],
 ["checkType", "ContinuousMonoidHom.swap_toFun"],
 ["checkType", "ContinuousMonoidHomClass.map_continuous"],
 ["checkType", "ContinuousMonoidHomClass.mk"],
 ["checkType", "ContinuousMonoidHomClass.rec"],
 ["checkType", "ContinuousMultilinearMap.apply_zero_curry0"],
 ["checkType", "ContinuousMultilinearMap.bound"],
 ["checkType", "ContinuousMultilinearMap.bounds_bddBelow"],
 ["checkType", "ContinuousMultilinearMap.bounds_nonempty"],
 ["checkType", "ContinuousMultilinearMap.compAlongComposition_apply"],
 ["checkType", "ContinuousMultilinearMap.compContinuousLinearMapEquivL_apply"],
 ["checkType", "ContinuousMultilinearMap.compContinuousLinearMapL_apply"],
 ["checkType", "ContinuousMultilinearMap.continuous_eval"],
 ["checkType", "ContinuousMultilinearMap.continuous_eval_left"],
 ["checkType", "ContinuousMultilinearMap.curry0_apply"],
 ["checkType", "ContinuousMultilinearMap.curryFinFinset_apply"],
 ["checkType", "ContinuousMultilinearMap.curryFinFinset_apply_const"],
 ["checkType", "ContinuousMultilinearMap.curryFinFinset_symm_apply"],
 ["checkType", "ContinuousMultilinearMap.curryFinFinset_symm_apply_const"],
 ["checkType",
  "ContinuousMultilinearMap.curryFinFinset_symm_apply_piecewise_const"],
 ["checkType", "ContinuousMultilinearMap.curryLeft_apply"],
 ["checkType", "ContinuousMultilinearMap.curryRight_apply"],
 ["checkType", "ContinuousMultilinearMap.currySum_apply"],
 ["checkType", "ContinuousMultilinearMap.fin0_apply_norm"],
 ["checkType", "ContinuousMultilinearMap.hasSum_eval"],
 ["checkType", "ContinuousMultilinearMap.isLeast_op_nnnorm"],
 ["checkType", "ContinuousMultilinearMap.isLeast_op_norm"],
 ["checkType", "ContinuousMultilinearMap.le_mul_prod_of_le_op_norm_of_le"],
 ["checkType", "ContinuousMultilinearMap.le_of_op_nnnorm_le"],
 ["checkType", "ContinuousMultilinearMap.le_of_op_norm_le"],
 ["checkType", "ContinuousMultilinearMap.le_op_nnnorm"],
 ["checkType", "ContinuousMultilinearMap.le_op_norm"],
 ["checkType", "ContinuousMultilinearMap.le_op_norm_mul_pow_card_of_le"],
 ["checkType", "ContinuousMultilinearMap.le_op_norm_mul_pow_of_le"],
 ["checkType", "ContinuousMultilinearMap.le_op_norm_mul_prod_of_le"],
 ["checkType", "ContinuousMultilinearMap.mkPiField_apply"],
 ["checkType", "ContinuousMultilinearMap.mkPiField_apply_one_eq_self"],
 ["checkType", "ContinuousMultilinearMap.nnnorm_ofSubsingleton"],
 ["checkType", "ContinuousMultilinearMap.nnnorm_ofSubsingleton_id"],
 ["checkType", "ContinuousMultilinearMap.nnnorm_ofSubsingleton_id_le"],
 ["checkType",
  "ContinuousMultilinearMap.norm_compContinuous_linearIsometryEquiv"],
 ["checkType", "ContinuousMultilinearMap.norm_def"],
 ["checkType", "ContinuousMultilinearMap.norm_image_sub_le"],
 ["checkType", "ContinuousMultilinearMap.norm_image_sub_le'"],
 ["checkType", "ContinuousMultilinearMap.norm_map_cons_le"],
 ["checkType", "ContinuousMultilinearMap.norm_map_init_le"],
 ["checkType", "ContinuousMultilinearMap.norm_map_snoc_le"],
 ["checkType", "ContinuousMultilinearMap.norm_ofSubsingleton"],
 ["checkType", "ContinuousMultilinearMap.norm_ofSubsingleton_id"],
 ["checkType", "ContinuousMultilinearMap.norm_ofSubsingleton_id_le"],
 ["checkType", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_apply"],
 ["checkType", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_symm_apply"],
 ["checkType", "ContinuousMultilinearMap.op_nnnorm_le_iff"],
 ["checkType", "ContinuousMultilinearMap.op_norm_le_bound"],
 ["checkType", "ContinuousMultilinearMap.op_norm_le_iff"],
 ["checkType", "ContinuousMultilinearMap.ratio_le_op_norm"],
 ["checkType", "ContinuousMultilinearMap.tsum_eval"],
 ["checkType", "ContinuousMultilinearMap.uncurry0_apply"],
 ["checkType", "ContinuousMultilinearMap.uncurryRight_apply"],
 ["checkType", "ContinuousMultilinearMap.uncurrySum_apply"],
 ["checkType", "ContinuousMultilinearMap.unit_le_op_norm"],
 ["checkType", "ContinuousOn.clm_apply"],
 ["checkType", "ContinuousOn.measurableEmbedding"],
 ["checkType", "Convex.closure_subset_image_homothety_interior_of_one_lt"],
 ["checkType", "Convex.closure_subset_interior_image_homothety_of_one_lt"],
 ["checkType", "Convex.eqOn_of_fderivWithin_eq"],
 ["checkType", "Convex.isLittleO_alternate_sum_square"],
 ["checkType", "Convex.norm_image_sub_le_of_norm_fderivWithin_le'"],
 ["checkType", "Convex.norm_image_sub_le_of_norm_fderiv_le'"],
 ["checkType", "Convex.norm_image_sub_le_of_norm_hasFDerivWithin_le'"],
 ["checkType", "Convex.second_derivative_within_at_symmetric"],
 ["checkType", "Convex.second_derivative_within_at_symmetric_of_mem_interior"],
 ["checkType", "Convex.strictConvex'"],
 ["checkType", "Convex.subset_interior_image_homothety_of_one_lt"],
 ["checkType", "Convex.taylor_approx_two_segment"],
 ["checkType", "ConvexOn.congr"],
 ["checkType", "ConvolutionExistsAt.integrable"],
 ["checkType", "ConvolutionExistsAt.integrable_swap"],
 ["checkType", "Cube.insertAt_boundary"],
 ["checkType", "CuspForm.add_apply"],
 ["checkType", "CuspForm.coeHom_apply"],
 ["checkType", "CuspForm.coe_add"],
 ["checkType", "CuspForm.coe_neg"],
 ["checkType", "CuspForm.coe_smul"],
 ["checkType", "CuspForm.coe_sub"],
 ["checkType", "CuspForm.coe_zero"],
 ["checkType", "CuspForm.copy"],
 ["checkType", "CuspForm.ext"],
 ["checkType", "CuspForm.holo'"],
 ["checkType", "CuspForm.mk"],
 ["checkType", "CuspForm.neg_apply"],
 ["checkType", "CuspForm.rec"],
 ["checkType", "CuspForm.smul_apply"],
 ["checkType", "CuspForm.sub_apply"],
 ["checkType", "CuspForm.toFun_eq_coe"],
 ["checkType", "CuspForm.toSlashInvariantForm_coe"],
 ["checkType", "CuspForm.zero_apply"],
 ["checkType", "CuspForm.zero_at_infty'"],
 ["checkType", "CuspFormClass.holo"],
 ["checkType", "CuspFormClass.mk"],
 ["checkType", "CuspFormClass.rec"],
 ["checkType", "CuspFormClass.zero_at_infty"],
 ["checkType", "CyclotomicRing.adjoin_algebra_injective"],
 ["checkType", "CyclotomicRing.algebraBase_injective"],
 ["checkType", "Derivation.evalAt"],
 ["checkType", "Derivation.evalAt_apply"],
 ["checkType", "DiffContOnCl.ball_subset_image_closedBall"],
 ["checkType", "DiffContOnCl.circleIntegral_sub_inv_smul"],
 ["checkType", "DiffContOnCl.comp"],
 ["checkType", "DiffContOnCl.hasFPowerSeriesOnBall"],
 ["checkType", "DiffContOnCl.two_pi_i_inv_smul_circleIntegral_sub_inv_smul"],
 ["checkType", "Diffeomorph.apply_symm_apply"],
 ["checkType", "Diffeomorph.coeFn_injective"],
 ["checkType", "Diffeomorph.coe_coe"],
 ["checkType", "Diffeomorph.coe_prodComm"],
 ["checkType", "Diffeomorph.coe_prodCongr"],
 ["checkType", "Diffeomorph.coe_refl"],
 ["checkType", "Diffeomorph.coe_toEquiv"],
 ["checkType", "Diffeomorph.coe_toHomeomorph"],
 ["checkType", "Diffeomorph.coe_toHomeomorph_symm"],
 ["checkType", "Diffeomorph.coe_trans"],
 ["checkType", "Diffeomorph.contDiff"],
 ["checkType", "Diffeomorph.contMDiff"],
 ["checkType", "Diffeomorph.contMDiffAt"],
 ["checkType", "Diffeomorph.contMDiffAt_comp_diffeomorph_iff"],
 ["checkType", "Diffeomorph.contMDiffAt_diffeomorph_comp_iff"],
 ["checkType", "Diffeomorph.contMDiffOn_comp_diffeomorph_iff"],
 ["checkType", "Diffeomorph.contMDiffOn_diffeomorph_comp_iff"],
 ["checkType", "Diffeomorph.contMDiffWithinAt"],
 ["checkType", "Diffeomorph.contMDiffWithinAt_comp_diffeomorph_iff"],
 ["checkType", "Diffeomorph.contMDiffWithinAt_diffeomorph_comp_iff"],
 ["checkType", "Diffeomorph.contMDiff_comp_diffeomorph_iff"],
 ["checkType", "Diffeomorph.contMDiff_diffeomorph_comp_iff"],
 ["checkType", "Diffeomorph.contMDiff_invFun"],
 ["checkType", "Diffeomorph.contMDiff_toFun"],
 ["checkType", "Diffeomorph.continuous"],
 ["checkType", "Diffeomorph.ext"],
 ["checkType", "Diffeomorph.image_eq_preimage"],
 ["checkType", "Diffeomorph.image_symm_image"],
 ["checkType", "Diffeomorph.isLocalDiffeomorph"],
 ["checkType", "Diffeomorph.mdifferentiable"],
 ["checkType", "Diffeomorph.mdifferentiableOn"],
 ["checkType", "Diffeomorph.mk"],
 ["checkType", "Diffeomorph.range_comp"],
 ["checkType", "Diffeomorph.rec"],
 ["checkType", "Diffeomorph.smooth"],
 ["checkType", "Diffeomorph.symm_apply_apply"],
 ["checkType", "Diffeomorph.symm_image_eq_preimage"],
 ["checkType", "Diffeomorph.symm_image_image"],
 ["checkType", "Diffeomorph.toEquiv_coe_symm"],
 ["checkType", "Diffeomorph.uniqueDiffOn_image"],
 ["checkType", "Diffeomorph.uniqueDiffOn_preimage"],
 ["checkType", "Diffeomorph.uniqueMDiffOn_image"],
 ["checkType", "Diffeomorph.uniqueMDiffOn_image_aux"],
 ["checkType", "Diffeomorph.uniqueMDiffOn_preimage"],
 ["checkType", "Differentiable.analyticAt"],
 ["checkType", "Differentiable.ccos"],
 ["checkType", "Differentiable.ccosh"],
 ["checkType", "Differentiable.cexp"],
 ["checkType", "Differentiable.clm_apply"],
 ["checkType", "Differentiable.clog"],
 ["checkType", "Differentiable.contDiff"],
 ["checkType", "Differentiable.csin"],
 ["checkType", "Differentiable.csinh"],
 ["checkType", "Differentiable.hasFPowerSeriesOnBall"],
 ["checkType", "DifferentiableAt.ccos"],
 ["checkType", "DifferentiableAt.ccosh"],
 ["checkType", "DifferentiableAt.cexp"],
 ["checkType", "DifferentiableAt.clm_apply"],
 ["checkType", "DifferentiableAt.clog"],
 ["checkType", "DifferentiableAt.conformalAt"],
 ["checkType", "DifferentiableAt.const_cpow"],
 ["checkType", "DifferentiableAt.cpow"],
 ["checkType", "DifferentiableAt.csin"],
 ["checkType", "DifferentiableAt.csinh"],
 ["checkType", "DifferentiableAt.lineDeriv_eq_fderiv"],
 ["checkType", "DifferentiableOn.analyticAt"],
 ["checkType", "DifferentiableOn.analyticOn"],
 ["checkType", "DifferentiableOn.ccos"],
 ["checkType", "DifferentiableOn.ccosh"],
 ["checkType", "DifferentiableOn.cexp"],
 ["checkType", "DifferentiableOn.circleIntegral_sub_inv_smul"],
 ["checkType", "DifferentiableOn.clm_apply"],
 ["checkType", "DifferentiableOn.clog"],
 ["checkType", "DifferentiableOn.comp"],
 ["checkType", "DifferentiableOn.contDiffOn"],
 ["checkType", "DifferentiableOn.csin"],
 ["checkType", "DifferentiableOn.csinh"],
 ["checkType", "DifferentiableOn.hasFPowerSeriesOnBall"],
 ["checkType", "DifferentiableWithinAt.ccos"],
 ["checkType", "DifferentiableWithinAt.ccosh"],
 ["checkType", "DifferentiableWithinAt.cexp"],
 ["checkType", "DifferentiableWithinAt.clm_apply"],
 ["checkType", "DifferentiableWithinAt.clog"],
 ["checkType", "DifferentiableWithinAt.comp"],
 ["checkType", "DifferentiableWithinAt.congr_mono"],
 ["checkType", "DifferentiableWithinAt.const_cpow"],
 ["checkType", "DifferentiableWithinAt.cpow"],
 ["checkType", "DifferentiableWithinAt.csin"],
 ["checkType", "DifferentiableWithinAt.csinh"],
 ["checkType", "DifferentiableWithinAt.fderivWithin_congr_mono"],
 ["checkType", "Dilation.antilipschitz"],
 ["checkType", "Dilation.cancel_left"],
 ["checkType", "Dilation.cancel_right"],
 ["checkType", "Dilation.closedEmbedding"],
 ["checkType", "Dilation.coe_comp"],
 ["checkType", "Dilation.coe_id"],
 ["checkType", "Dilation.coe_mk"],
 ["checkType", "Dilation.coe_mkOfDistEq"],
 ["checkType", "Dilation.coe_mkOfNNDistEq"],
 ["checkType", "Dilation.coe_mul"],
 ["checkType", "Dilation.coe_one"],
 ["checkType", "Dilation.comap_cobounded"],
 ["checkType", "Dilation.comp_apply"],
 ["checkType", "Dilation.comp_continuousOn_iff"],
 ["checkType", "Dilation.comp_continuous_iff"],
 ["checkType", "Dilation.congr_arg"],
 ["checkType", "Dilation.congr_fun"],
 ["checkType", "Dilation.copy"],
 ["checkType", "Dilation.copy_eq_self"],
 ["checkType", "Dilation.copy_toFun"],
 ["checkType", "Dilation.diam_image"],
 ["checkType", "Dilation.diam_range"],
 ["checkType", "Dilation.dist_eq"],
 ["checkType", "Dilation.ediam_image"],
 ["checkType", "Dilation.ediam_range"],
 ["checkType", "Dilation.edist_eq"],
 ["checkType", "Dilation.embedding"],
 ["checkType", "Dilation.ext"],
 ["checkType", "Dilation.ext_iff"],
 ["checkType", "Dilation.injective"],
 ["checkType", "Dilation.lipschitz"],
 ["checkType", "Dilation.mapsTo_ball"],
 ["checkType", "Dilation.mapsTo_closedBall"],
 ["checkType", "Dilation.mapsTo_emetric_ball"],
 ["checkType", "Dilation.mapsTo_emetric_closedBall"],
 ["checkType", "Dilation.mapsTo_sphere"],
 ["checkType", "Dilation.mk_coe"],
 ["checkType", "Dilation.mk_coe_of_dist_eq"],
 ["checkType", "Dilation.mk_coe_of_nndist_eq"],
 ["checkType", "Dilation.nndist_eq"],
 ["checkType", "Dilation.ratioHom_apply"],
 ["checkType", "Dilation.ratio_unique"],
 ["checkType", "Dilation.ratio_unique_of_dist_ne_zero"],
 ["checkType", "Dilation.ratio_unique_of_nndist_ne_zero"],
 ["checkType", "Dilation.tendsto_cobounded"],
 ["checkType", "Dilation.tendsto_nhds_iff"],
 ["checkType", "Dilation.toContinuous"],
 ["checkType", "Dilation.toFun_eq_coe"],
 ["checkType", "Dilation.uniformEmbedding"],
 ["checkType", "Dilation.uniformInducing"],
 ["checkType", "DilationClass.edist_eq'"],
 ["checkType", "DilationClass.mk"],
 ["checkType", "DilationClass.rec"],
 ["checkType", "DilationEquiv.apply_symm_apply"],
 ["checkType", "DilationEquiv.bijective"],
 ["checkType", "DilationEquiv.coe_inv"],
 ["checkType", "DilationEquiv.coe_mul"],
 ["checkType", "DilationEquiv.coe_one"],
 ["checkType", "DilationEquiv.coe_pow"],
 ["checkType", "DilationEquiv.coe_toEquiv"],
 ["checkType", "DilationEquiv.ext"],
 ["checkType", "DilationEquiv.injective"],
 ["checkType", "DilationEquiv.map_cobounded"],
 ["checkType", "DilationEquiv.mulLeft_apply"],
 ["checkType", "DilationEquiv.mulLeft_symm_apply"],
 ["checkType", "DilationEquiv.mulRight_apply"],
 ["checkType", "DilationEquiv.mulRight_symm_apply"],
 ["checkType", "DilationEquiv.refl_apply"],
 ["checkType", "DilationEquiv.surjective"],
 ["checkType", "DilationEquiv.symm_apply_apply"],
 ["checkType", "DilationEquiv.toPerm_apply"],
 ["checkType", "DilationEquiv.trans_apply"],
 ["checkType", "DilationEquivClass.edist_eq'"],
 ["checkType", "DilationEquivClass.mk"],
 ["checkType", "DilationEquivClass.rec"],
 ["checkType", "DirichletCharacter.norm_le_one"],
 ["checkType", "DirichletCharacter.unit_norm_eq_one"],
 ["checkType", "DomAddAct.mk_vadd_mk_aeeqFun"],
 ["checkType", "DomAddAct.mk_vadd_toLp"],
 ["checkType", "DomAddAct.vadd_Lp_ae_eq"],
 ["checkType", "DomAddAct.vadd_Lp_const"],
 ["checkType", "DomAddAct.vadd_aeeqFun_aeeq"],
 ["checkType", "DomMulAct.mk_smul_mk_aeeqFun"],
 ["checkType", "DomMulAct.mk_smul_toLp"],
 ["checkType", "DomMulAct.smul_Lp_ae_eq"],
 ["checkType", "DomMulAct.smul_Lp_const"],
 ["checkType", "DomMulAct.smul_aeeqFun_aeeq"],
 ["checkType", "DoubleCentralizer.algebraMap_fst"],
 ["checkType", "DoubleCentralizer.algebraMap_snd"],
 ["checkType", "DoubleCentralizer.algebraMap_toProd"],
 ["checkType", "DoubleCentralizer.central"],
 ["checkType", "DoubleCentralizer.coeHom_apply"],
 ["checkType", "DoubleCentralizer.coe_eq_algebraMap"],
 ["checkType", "DoubleCentralizer.coe_fst"],
 ["checkType", "DoubleCentralizer.coe_snd"],
 ["checkType", "DoubleCentralizer.mk"],
 ["checkType", "DoubleCentralizer.nnnorm_def"],
 ["checkType", "DoubleCentralizer.nnnorm_def'"],
 ["checkType", "DoubleCentralizer.norm_def"],
 ["checkType", "DoubleCentralizer.norm_def'"],
 ["checkType", "DoubleCentralizer.range_toProd"],
 ["checkType", "DoubleCentralizer.range_toProdMulOpposite"],
 ["checkType", "DoubleCentralizer.rec"],
 ["checkType", "DoubleCentralizer.star_fst"],
 ["checkType", "DoubleCentralizer.star_snd"],
 ["checkType", "DoubleCentralizer.toProdHom_apply"],
 ["checkType", "DoubleCentralizer.toProdMulOppositeHom_apply"],
 ["checkType", "EMetric.exists_continuous_eNNReal_forall_closedBall_subset"],
 ["checkType", "EMetric.exists_continuous_nNReal_forall_closedBall_subset"],
 ["checkType", "EMetric.exists_continuous_real_forall_closedBall_subset"],
 ["checkType", "ENNReal.exists_frequently_lt_of_liminf_ne_top"],
 ["checkType", "ENNReal.exists_frequently_lt_of_liminf_ne_top'"],
 ["checkType", "ENNReal.exists_upcrossings_of_not_bounded_under"],
 ["checkType", "ENNReal.orderIsoRpow_apply"],
 ["checkType", "Emetric.exists_smooth_forall_closedBall_subset"],
 ["checkType", "Equiv.polishSpace_induced"],
 ["checkType", "Euclidean.ball_eq_preimage"],
 ["checkType", "Euclidean.closedBall_eq_image"],
 ["checkType", "Euclidean.closedBall_eq_preimage"],
 ["checkType", "EuclideanGeometry.dist_affineCombination"],
 ["checkType", "EuclideanGeometry.dist_eq_iff_dist_orthogonalProjection_eq"],
 ["checkType",
  "EuclideanGeometry.dist_eq_iff_eq_smul_rotation_pi_div_two_vadd_midpoint"],
 ["checkType", "EuclideanGeometry.dist_orthogonalProjection_eq_zero_iff"],
 ["checkType",
  "EuclideanGeometry.dist_orthogonalProjection_ne_zero_of_not_mem"],
 ["checkType", "EuclideanGeometry.dist_reflection"],
 ["checkType", "EuclideanGeometry.dist_reflection_eq_of_mem"],
 ["checkType",
  "EuclideanGeometry.dist_set_eq_iff_dist_orthogonalProjection_eq"],
 ["checkType",
  "EuclideanGeometry.dist_sq_eq_dist_orthogonalProjection_sq_add_dist_orthogonalProjection_sq"],
 ["checkType", "EuclideanGeometry.eq_or_eq_reflection_of_dist_eq"],
 ["checkType", "EuclideanGeometry.eq_orthogonalProjection_of_eq_subspace"],
 ["checkType", "EuclideanGeometry.eq_reflection_of_eq_subspace"],
 ["checkType",
  "EuclideanGeometry.exists_dist_eq_iff_exists_dist_orthogonalProjection_eq"],
 ["checkType", "EuclideanGeometry.hasFDerivAt_inversion"],
 ["checkType", "EuclideanGeometry.inner_weightedVSub"],
 ["checkType", "EuclideanGeometry.inter_eq_singleton_orthogonalProjection"],
 ["checkType", "EuclideanGeometry.inversion_eq_lineMap"],
 ["checkType", "EuclideanGeometry.inversion_mul"],
 ["checkType", "EuclideanGeometry.orthogonalProjectionFn_eq"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_eq_self_iff"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_mem"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_mem_orthogonal"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_mem_subspace_eq_self"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_orthogonalProjection"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_vadd_eq_self"],
 ["checkType",
  "EuclideanGeometry.orthogonalProjection_vadd_smul_vsub_orthogonalProjection"],
 ["checkType", "EuclideanGeometry.orthogonalProjection_vsub_mem_direction"],
 ["checkType",
  "EuclideanGeometry.orthogonalProjection_vsub_mem_direction_orthogonal"],
 ["checkType",
  "EuclideanGeometry.orthogonalProjection_vsub_orthogonalProjection"],
 ["checkType", "EuclideanGeometry.reflection_apply"],
 ["checkType", "EuclideanGeometry.reflection_eq_iff_orthogonalProjection_eq"],
 ["checkType", "EuclideanGeometry.reflection_eq_self_iff"],
 ["checkType", "EuclideanGeometry.reflection_involutive"],
 ["checkType", "EuclideanGeometry.reflection_mem_of_le_of_mem"],
 ["checkType", "EuclideanGeometry.reflection_orthogonal_vadd"],
 ["checkType", "EuclideanGeometry.reflection_reflection"],
 ["checkType",
  "EuclideanGeometry.reflection_vadd_smul_vsub_orthogonalProjection"],
 ["checkType", "EuclideanGeometry.vsub_orthogonalProjection_mem_direction"],
 ["checkType",
  "EuclideanGeometry.vsub_orthogonalProjection_mem_direction_orthogonal"],
 ["checkType", "EuclideanSpace.basisFun_apply"],
 ["checkType", "EuclideanSpace.basisFun_repr"],
 ["checkType", "EuclideanSpace.coe_measurableEquiv"],
 ["checkType", "EuclideanSpace.coe_measurableEquiv_symm"],
 ["checkType", "EuclideanSpace.inner_eq_star_dotProduct"],
 ["checkType", "EuclideanSpace.inner_piLp_equiv_symm"],
 ["checkType", "EuclideanSpace.inner_single_left"],
 ["checkType", "EuclideanSpace.inner_single_right"],
 ["checkType", "EuclideanSpace.nndist_eq"],
 ["checkType", "EuclideanSpace.nnnorm_eq"],
 ["checkType", "EuclideanSpace.piLpCongrLeft_single"],
 ["checkType", "EuclideanSpace.proj_apply"],
 ["checkType", "EuclideanSpace.projₗ_apply"],
 ["checkType", "EuclideanSpace.volume_preserving_measurableEquiv"],
 ["checkType", "EulerProduct.eulerProduct_completely_multiplicative"],
 ["checkType", "EulerProduct.prod_primesBelow_geometric_eq_tsum_smoothNumbers"],
 ["checkType",
  "EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric"],
 ["checkType", "EulerSine.antideriv_cos_comp_const_mul"],
 ["checkType", "EulerSine.antideriv_sin_comp_const_mul"],
 ["checkType", "EulerSine.integral_cos_mul_cos_pow"],
 ["checkType", "EulerSine.integral_cos_mul_cos_pow_aux"],
 ["checkType", "EulerSine.integral_cos_mul_cos_pow_even"],
 ["checkType", "EulerSine.integral_sin_mul_sin_mul_cos_pow_eq"],
 ["checkType", "EulerSine.sin_pi_mul_eq"],
 ["checkType", "EulerSine.tendsto_integral_cos_pow_mul_div"],
 ["checkType", "ExistsContDiffBumpBase.y_smooth"],
 ["checkType", "FDerivMeasurableAux.le_of_mem_A"],
 ["checkType", "FiberBundle.extChartAt_target"],
 ["checkType", "FiberwiseLinear.source_trans_partialHomeomorph"],
 ["checkType", "FiberwiseLinear.target_trans_partialHomeomorph"],
 ["checkType", "FiberwiseLinear.trans_partialHomeomorph_apply"],
 ["checkType", "FiniteField.isSquare_odd_prime_iff"],
 ["checkType", "FiniteField.two_pow_card"],
 ["checkType", "Finsupp.log_prod"],
 ["checkType", "Finsupp.sum_inner"],
 ["checkType", "FintypeCat.toProfinite_map_apply"],
 ["checkType", "FormalMultilinearSeries.applyComposition_ones"],
 ["checkType", "FormalMultilinearSeries.applyComposition_single"],
 ["checkType", "FormalMultilinearSeries.applyComposition_update"],
 ["checkType", "FormalMultilinearSeries.apply_eq_pow_smul_coeff"],
 ["checkType", "FormalMultilinearSeries.apply_eq_prod_smul_coeff"],
 ["checkType", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_fst"],
 ["checkType", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_snd"],
 ["checkType", "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_fst"],
 ["checkType",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_fst"],
 ["checkType",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_snd_coe"],
 ["checkType", "FormalMultilinearSeries.changeOriginSeriesTerm_apply"],
 ["checkType",
  "FormalMultilinearSeries.changeOriginSeriesTerm_changeOriginIndexEquiv_symm"],
 ["checkType", "FormalMultilinearSeries.compAlongComposition_apply"],
 ["checkType", "FormalMultilinearSeries.compAlongComposition_bound"],
 ["checkType", "FormalMultilinearSeries.compContinuousLinearMap_apply"],
 ["checkType",
  "FormalMultilinearSeries.compContinuousLinearMap_applyComposition"],
 ["checkType", "FormalMultilinearSeries.comp_coeff_one"],
 ["checkType", "FormalMultilinearSeries.comp_coeff_zero"],
 ["checkType", "FormalMultilinearSeries.comp_coeff_zero'"],
 ["checkType", "FormalMultilinearSeries.comp_partialSum"],
 ["checkType", "FormalMultilinearSeries.comp_rightInv"],
 ["checkType", "FormalMultilinearSeries.comp_rightInv_aux1"],
 ["checkType", "FormalMultilinearSeries.comp_rightInv_aux2"],
 ["checkType", "FormalMultilinearSeries.congr"],
 ["checkType", "FormalMultilinearSeries.hasSum"],
 ["checkType", "FormalMultilinearSeries.hasSum_of_finite"],
 ["checkType", "FormalMultilinearSeries.id_apply_one"],
 ["checkType", "FormalMultilinearSeries.id_apply_one'"],
 ["checkType", "FormalMultilinearSeries.leftInv_coeff_one"],
 ["checkType", "FormalMultilinearSeries.leftInv_comp"],
 ["checkType", "FormalMultilinearSeries.leftInv_eq_rightInv"],
 ["checkType",
  "FormalMultilinearSeries.nnnorm_changeOriginSeriesTerm_apply_le"],
 ["checkType",
  "FormalMultilinearSeries.nnnorm_changeOriginSeries_apply_le_tsum"],
 ["checkType", "FormalMultilinearSeries.rightInv_coeff_one"],
 ["checkType", "FormalMultilinearSeries.summable"],
 ["checkType", "FormalMultilinearSeries.summable_norm_apply"],
 ["checkType", "Fourier.fourierIntegral_comp_add_right"],
 ["checkType", "Fourier.fourierIntegral_def"],
 ["checkType", "FundamentalGroupoid.equiv_apply"],
 ["checkType", "FundamentalGroupoid.equiv_symm_apply_as"],
 ["checkType", "FundamentalGroupoid.map_eq"],
 ["checkType", "FundamentalGroupoidFunctor.projLeft_map"],
 ["checkType", "FundamentalGroupoidFunctor.projRight_map"],
 ["checkType", "FundamentalGroupoidFunctor.proj_map"],
 ["checkType", "GaussianFourier.integral_cexp_neg_mul_sq_add_real_mul_I"],
 ["checkType", "GaussianInt.int_cast_complex_norm"],
 ["checkType", "GaussianInt.int_cast_real_norm"],
 ["checkType", "GaussianInt.normSq_div_sub_div_lt_one"],
 ["checkType", "GaussianInt.normSq_le_normSq_of_re_le_of_im_le"],
 ["checkType", "GaussianInt.toComplex_add"],
 ["checkType", "GaussianInt.toComplex_def"],
 ["checkType", "GaussianInt.toComplex_def'"],
 ["checkType", "GaussianInt.toComplex_def₂"],
 ["checkType", "GaussianInt.toComplex_div_im"],
 ["checkType", "GaussianInt.toComplex_div_re"],
 ["checkType", "GaussianInt.toComplex_eq_zero"],
 ["checkType", "GaussianInt.toComplex_im"],
 ["checkType", "GaussianInt.toComplex_inj"],
 ["checkType", "GaussianInt.toComplex_mul"],
 ["checkType", "GaussianInt.toComplex_neg"],
 ["checkType", "GaussianInt.toComplex_one"],
 ["checkType", "GaussianInt.toComplex_re"],
 ["checkType", "GaussianInt.toComplex_star"],
 ["checkType", "GaussianInt.toComplex_sub"],
 ["checkType", "GaussianInt.toComplex_zero"],
 ["checkType", "GaussianInt.to_real_im"],
 ["checkType", "GaussianInt.to_real_re"],
 ["checkType", "GenLoop.boundary"],
 ["checkType", "GenLoop.coe_copy"],
 ["checkType", "GenLoop.const_apply"],
 ["checkType", "GenLoop.copy"],
 ["checkType", "GenLoop.copy_eq"],
 ["checkType", "GenLoop.ext"],
 ["checkType", "GenLoop.fromLoop_apply"],
 ["checkType", "GenLoop.funLike"],
 ["checkType", "GenLoop.homotopyFrom_apply"],
 ["checkType", "GenLoop.homotopyTo_apply"],
 ["checkType", "GenLoop.loopHomeo_apply"],
 ["checkType", "GenLoop.loopHomeo_symm_apply"],
 ["checkType", "GenLoop.mk_apply"],
 ["checkType", "GenLoop.toLoop_apply"],
 ["checkType", "GenLoop.toLoop_apply_coe"],
 ["checkType", "GromovHausdorff.HD_below_aux1"],
 ["checkType", "GromovHausdorff.HD_below_aux2"],
 ["checkType", "GromovHausdorff.eq_toGHSpace"],
 ["checkType", "HSpace.hmul_e_e"],
 ["checkType", "HSpace.mk"],
 ["checkType", "HSpace.rec"],
 ["checkType", "Hamming.dist_eq_hammingDist"],
 ["checkType", "Hamming.nndist_eq_hammingDist"],
 ["checkType", "Hamming.nnnorm_eq_hammingNorm"],
 ["checkType", "Hamming.norm_eq_hammingNorm"],
 ["checkType", "Hamming.ofHamming_add"],
 ["checkType", "Hamming.ofHamming_inj"],
 ["checkType", "Hamming.ofHamming_neg"],
 ["checkType", "Hamming.ofHamming_smul"],
 ["checkType", "Hamming.ofHamming_sub"],
 ["checkType", "Hamming.ofHamming_toHamming"],
 ["checkType", "Hamming.ofHamming_zero"],
 ["checkType", "Hamming.toHamming_add"],
 ["checkType", "Hamming.toHamming_inj"],
 ["checkType", "Hamming.toHamming_neg"],
 ["checkType", "Hamming.toHamming_ofHamming"],
 ["checkType", "Hamming.toHamming_smul"],
 ["checkType", "Hamming.toHamming_sub"],
 ["checkType", "Hamming.toHamming_zero"],
 ["checkType", "HasCompactSupport.convolutionExistsAt"],
 ["checkType", "HasCompactSupport.convolution_integrand_bound_left"],
 ["checkType", "HasCompactSupport.convolution_integrand_bound_right"],
 ["checkType", "HasCompactSupport.convolution_integrand_bound_right_of_subset"],
 ["checkType", "HasDerivAt.ccos"],
 ["checkType", "HasDerivAt.ccosh"],
 ["checkType", "HasDerivAt.cexp"],
 ["checkType", "HasDerivAt.clm_apply"],
 ["checkType", "HasDerivAt.clog"],
 ["checkType", "HasDerivAt.clog_real"],
 ["checkType", "HasDerivAt.comp_ofReal"],
 ["checkType", "HasDerivAt.complexToReal_fderiv"],
 ["checkType", "HasDerivAt.complexToReal_fderiv'"],
 ["checkType", "HasDerivAt.const_cpow"],
 ["checkType", "HasDerivAt.cpow"],
 ["checkType", "HasDerivAt.cpow_const"],
 ["checkType", "HasDerivAt.csin"],
 ["checkType", "HasDerivAt.csinh"],
 ["checkType", "HasDerivAt.hasFDerivAt_equiv"],
 ["checkType", "HasDerivAt.hasGradientAt"],
 ["checkType", "HasDerivAt.ofReal_comp"],
 ["checkType", "HasDerivAt.real_of_complex"],
 ["checkType", "HasDerivAtFilter.hasGradientAtFilter"],
 ["checkType", "HasDerivWithinAt.ccos"],
 ["checkType", "HasDerivWithinAt.ccosh"],
 ["checkType", "HasDerivWithinAt.cexp"],
 ["checkType", "HasDerivWithinAt.clm_apply"],
 ["checkType", "HasDerivWithinAt.clog"],
 ["checkType", "HasDerivWithinAt.clog_real"],
 ["checkType", "HasDerivWithinAt.comp"],
 ["checkType", "HasDerivWithinAt.comp_hasFDerivWithinAt"],
 ["checkType", "HasDerivWithinAt.complexToReal_fderiv"],
 ["checkType", "HasDerivWithinAt.complexToReal_fderiv'"],
 ["checkType", "HasDerivWithinAt.const_cpow"],
 ["checkType", "HasDerivWithinAt.cpow"],
 ["checkType", "HasDerivWithinAt.cpow_const"],
 ["checkType", "HasDerivWithinAt.csin"],
 ["checkType", "HasDerivWithinAt.csinh"],
 ["checkType", "HasDerivWithinAt.scomp"],
 ["checkType", "HasFDerivAt.ccos"],
 ["checkType", "HasFDerivAt.ccosh"],
 ["checkType", "HasFDerivAt.cexp"],
 ["checkType", "HasFDerivAt.clm_apply"],
 ["checkType", "HasFDerivAt.clm_comp"],
 ["checkType", "HasFDerivAt.clog"],
 ["checkType", "HasFDerivAt.comp_hasDerivAt"],
 ["checkType", "HasFDerivAt.comp_hasDerivWithinAt"],
 ["checkType", "HasFDerivAt.const_cpow"],
 ["checkType", "HasFDerivAt.cpow"],
 ["checkType", "HasFDerivAt.csin"],
 ["checkType", "HasFDerivAt.csinh"],
 ["checkType", "HasFDerivAt.eventually_ne"],
 ["checkType", "HasFDerivAt.hasDerivAt"],
 ["checkType", "HasFDerivAt.hasGradientAt"],
 ["checkType", "HasFDerivAt.hasLineDerivAt"],
 ["checkType", "HasFDerivAt.lim"],
 ["checkType", "HasFDerivAt.lim_real"],
 ["checkType", "HasFDerivAt.norm_sq"],
 ["checkType", "HasFDerivAtFilter.hasDerivAtFilter"],
 ["checkType", "HasFDerivAtFilter.isBigO_sub_rev"],
 ["checkType", "HasFDerivAtFilter.isLittleO"],
 ["checkType", "HasFDerivAtFilter.of_isLittleO"],
 ["checkType", "HasFDerivAtFilter.rec"],
 ["checkType", "HasFDerivWithinAt.ccos"],
 ["checkType", "HasFDerivWithinAt.ccosh"],
 ["checkType", "HasFDerivWithinAt.cexp"],
 ["checkType", "HasFDerivWithinAt.clm_apply"],
 ["checkType", "HasFDerivWithinAt.clm_comp"],
 ["checkType", "HasFDerivWithinAt.clog"],
 ["checkType", "HasFDerivWithinAt.comp"],
 ["checkType", "HasFDerivWithinAt.comp_hasDerivWithinAt"],
 ["checkType", "HasFDerivWithinAt.congr"],
 ["checkType", "HasFDerivWithinAt.congr'"],
 ["checkType", "HasFDerivWithinAt.congr_mono"],
 ["checkType", "HasFDerivWithinAt.const_cpow"],
 ["checkType", "HasFDerivWithinAt.cpow"],
 ["checkType", "HasFDerivWithinAt.csin"],
 ["checkType", "HasFDerivWithinAt.csinh"],
 ["checkType", "HasFDerivWithinAt.eventually_ne"],
 ["checkType", "HasFDerivWithinAt.hasDerivWithinAt"],
 ["checkType", "HasFDerivWithinAt.hasGradientWithinAt"],
 ["checkType", "HasFDerivWithinAt.hasLineDerivWithinAt"],
 ["checkType", "HasFDerivWithinAt.lim"],
 ["checkType", "HasFDerivWithinAt.mapsTo_tangent_cone"],
 ["checkType", "HasFDerivWithinAt.norm_sq"],
 ["checkType", "HasFDerivWithinAt.uniqueDiffWithinAt"],
 ["checkType", "HasFDerivWithinAt.unique_on"],
 ["checkType", "HasFPowerSeriesAt.apply_eq_zero"],
 ["checkType", "HasFPowerSeriesAt.coeff_zero"],
 ["checkType", "HasFPowerSeriesAt.deriv"],
 ["checkType", "HasFPowerSeriesAt.eventually_hasSum"],
 ["checkType", "HasFPowerSeriesAt.eventually_hasSum_sub"],
 ["checkType", "HasFPowerSeriesAt.fderiv_eq"],
 ["checkType", "HasFPowerSeriesAt.hasDerivAt"],
 ["checkType", "HasFPowerSeriesAt.hasFDerivAt"],
 ["checkType", "HasFPowerSeriesAt.hasStrictDerivAt"],
 ["checkType", "HasFPowerSeriesAt.hasStrictFDerivAt"],
 ["checkType", "HasFPowerSeriesAt.isBigO_image_sub_norm_mul_norm_sub"],
 ["checkType", "HasFPowerSeriesOnBall.coeff_zero"],
 ["checkType", "HasFPowerSeriesOnBall.congr"],
 ["checkType", "HasFPowerSeriesOnBall.eventually_hasSum"],
 ["checkType", "HasFPowerSeriesOnBall.eventually_hasSum_sub"],
 ["checkType", "HasFPowerSeriesOnBall.fderiv"],
 ["checkType", "HasFPowerSeriesOnBall.fderiv_eq"],
 ["checkType", "HasFPowerSeriesOnBall.hasFDerivAt"],
 ["checkType", "HasFPowerSeriesOnBall.hasSum"],
 ["checkType", "HasFPowerSeriesOnBall.hasSum_sub"],
 ["checkType", "HasFPowerSeriesOnBall.image_sub_sub_deriv_le"],
 ["checkType",
  "HasFPowerSeriesOnBall.isBigO_image_sub_image_sub_deriv_principal"],
 ["checkType", "HasFPowerSeriesOnBall.mk"],
 ["checkType", "HasFPowerSeriesOnBall.rec"],
 ["checkType", "HasFTaylorSeriesUpTo.hasFDerivAt"],
 ["checkType", "HasFTaylorSeriesUpTo.zero_eq'"],
 ["checkType", "HasFTaylorSeriesUpToOn.compContinuousLinearMap"],
 ["checkType", "HasFTaylorSeriesUpToOn.continuousLinearMap_comp"],
 ["checkType", "HasFTaylorSeriesUpToOn.eventually_hasFDerivAt"],
 ["checkType", "HasFTaylorSeriesUpToOn.hasFDerivAt"],
 ["checkType", "HasFTaylorSeriesUpToOn.hasFDerivWithinAt"],
 ["checkType", "HasFTaylorSeriesUpToOn.hasStrictFDerivAt"],
 ["checkType", "HasFTaylorSeriesUpToOn.shift_of_succ"],
 ["checkType", "HasFTaylorSeriesUpToOn.zero_eq'"],
 ["checkType", "HasFiniteFPowerSeriesOnBall.congr"],
 ["checkType", "HasFiniteFPowerSeriesOnBall.fderiv"],
 ["checkType", "HasFiniteFPowerSeriesOnBall.fderiv'"],
 ["checkType", "HasFiniteFPowerSeriesOnBall.fderiv_eq"],
 ["checkType", "HasFiniteFPowerSeriesOnBall.hasFDerivAt"],
 ["checkType", "HasGradientAt.hasDerivAt"],
 ["checkType", "HasGradientAt.hasFDerivAt"],
 ["checkType", "HasGradientAtFilter.hasDerivAtFilter"],
 ["checkType", "HasGradientWithinAt.hasFDerivWithinAt"],
 ["checkType", "HasLineDerivAt.of_comp"],
 ["checkType", "HasLineDerivWithinAt.congr"],
 ["checkType", "HasLineDerivWithinAt.congr'"],
 ["checkType", "HasLineDerivWithinAt.congr_mono"],
 ["checkType", "HasOuterApproxClosed.apprSeq_apply_eq_one"],
 ["checkType", "HasOuterApproxClosed.apprSeq_apply_le_one"],
 ["checkType", "HasOuterApproxClosed.exAppr"],
 ["checkType", "HasOuterApproxClosed.indicator_le_apprSeq"],
 ["checkType", "HasOuterApproxClosed.measure_le_lintegral"],
 ["checkType", "HasOuterApproxClosed.mk"],
 ["checkType", "HasOuterApproxClosed.rec"],
 ["checkType", "HasOuterApproxClosed.tendsto_apprSeq"],
 ["checkType", "HasOuterApproxClosed.tendsto_lintegral_apprSeq"],
 ["checkType", "HasStrictDerivAt.ccos"],
 ["checkType", "HasStrictDerivAt.ccosh"],
 ["checkType", "HasStrictDerivAt.cexp"],
 ["checkType", "HasStrictDerivAt.clm_apply"],
 ["checkType", "HasStrictDerivAt.clog"],
 ["checkType", "HasStrictDerivAt.clog_real"],
 ["checkType", "HasStrictDerivAt.complexToReal_fderiv"],
 ["checkType", "HasStrictDerivAt.complexToReal_fderiv'"],
 ["checkType", "HasStrictDerivAt.const_cpow"],
 ["checkType", "HasStrictDerivAt.cpow"],
 ["checkType", "HasStrictDerivAt.cpow_const"],
 ["checkType", "HasStrictDerivAt.csin"],
 ["checkType", "HasStrictDerivAt.csinh"],
 ["checkType", "HasStrictDerivAt.hasStrictFDerivAt_equiv"],
 ["checkType", "HasStrictDerivAt.real_of_complex"],
 ["checkType", "HasStrictFDerivAt.ccos"],
 ["checkType", "HasStrictFDerivAt.ccosh"],
 ["checkType", "HasStrictFDerivAt.cexp"],
 ["checkType", "HasStrictFDerivAt.clm_apply"],
 ["checkType", "HasStrictFDerivAt.clm_comp"],
 ["checkType", "HasStrictFDerivAt.clog"],
 ["checkType", "HasStrictFDerivAt.comp_hasStrictDerivAt"],
 ["checkType", "HasStrictFDerivAt.const_cpow"],
 ["checkType", "HasStrictFDerivAt.cpow"],
 ["checkType", "HasStrictFDerivAt.csin"],
 ["checkType", "HasStrictFDerivAt.csinh"],
 ["checkType", "HasStrictFDerivAt.hasStrictDerivAt"],
 ["checkType", "HasStrictFDerivAt.implicitFunctionDataOfComplemented"],
 ["checkType",
  "HasStrictFDerivAt.implicitToPartialHomeomorphOfComplemented_apply"],
 ["checkType", "HasStrictFDerivAt.to_implicitFunction"],
 ["checkType", "HasStrictFDerivAt.to_implicitFunctionOfComplemented"],
 ["checkType", "HilbertBasis.coe_mk"],
 ["checkType", "HilbertBasis.coe_mkOfOrthogonalEqBot"],
 ["checkType", "HilbertBasis.coe_toOrthonormalBasis"],
 ["checkType", "HilbertBasis.dense_span"],
 ["checkType", "HilbertBasis.finite_spans_dense"],
 ["checkType", "HilbertBasis.hasSum_inner_mul_inner"],
 ["checkType", "HilbertBasis.hasSum_orthogonalProjection"],
 ["checkType", "HilbertBasis.hasSum_repr"],
 ["checkType", "HilbertBasis.hasSum_repr_symm"],
 ["checkType", "HilbertBasis.orthonormal"],
 ["checkType", "HilbertBasis.repr_apply_apply"],
 ["checkType", "HilbertBasis.repr_self"],
 ["checkType", "HilbertBasis.repr_symm_single"],
 ["checkType", "HilbertBasis.summable_inner_mul_inner"],
 ["checkType", "HilbertBasis.tsum_inner_mul_inner"],
 ["checkType", "HolderOnWith.comp"],
 ["checkType", "Homeomorph.coe_toHomotopyEquiv"],
 ["checkType", "Homeomorph.coe_unitBall_apply_zero"],
 ["checkType", "Homeomorph.contDiffOn_unitBall_symm"],
 ["checkType", "Homeomorph.contDiff_symm"],
 ["checkType", "Homeomorph.contDiff_symm_deriv"],
 ["checkType", "Homeomorph.contDiff_unitBall"],
 ["checkType", "Homeomorph.isBigOWith_congr"],
 ["checkType", "Homeomorph.isBigO_congr"],
 ["checkType", "Homeomorph.isLittleO_congr"],
 ["checkType", "Homeomorph.isPathConnected_image"],
 ["checkType", "Homeomorph.isPathConnected_preimage"],
 ["checkType", "Homeomorph.measurable"],
 ["checkType", "Homeomorph.measurableEmbedding"],
 ["checkType", "Homeomorph.toMeasurableEquiv_coe"],
 ["checkType", "Homeomorph.toMeasurableEquiv_symm_coe"],
 ["checkType", "Homeomorph.unitBall_apply_coe"],
 ["checkType", "Homeomorph.unitBall_symm_apply"],
 ["checkType", "Ideal.toCharacterSpace_apply_eq_zero_of_mem"],
 ["checkType", "Inducing.withSeminorms"],
 ["checkType", "InnerProductSpace.conj_symm"],
 ["checkType", "InnerProductSpace.continuousLinearMapOfBilin_apply"],
 ["checkType", "InnerProductSpace.ext_inner_left_basis"],
 ["checkType", "InnerProductSpace.ext_inner_right_basis"],
 ["checkType", "InnerProductSpace.mk"],
 ["checkType", "InnerProductSpace.norm_sq_eq_inner"],
 ["checkType", "InnerProductSpace.rec"],
 ["checkType", "InnerProductSpace.smul_left"],
 ["checkType", "InnerProductSpace.toDualMap_apply"],
 ["checkType", "InnerProductSpace.toDual_apply"],
 ["checkType", "InnerProductSpace.toDual_symm_apply"],
 ["checkType", "InnerProductSpace.unique_continuousLinearMapOfBilin"],
 ["checkType", "Int.tendsto_zmultiplesHom_cofinite"],
 ["checkType", "IsBoundedBilinearMap.deriv_apply"],
 ["checkType", "IsClosed.measurableSet_image_of_continuousOn_injOn"],
 ["checkType", "IsCoercive.antilipschitz"],
 ["checkType", "IsCoercive.bounded_below"],
 ["checkType", "IsCoercive.continuousLinearEquivOfBilin_apply"],
 ["checkType", "IsCoercive.unique_continuousLinearEquivOfBilin"],
 ["checkType", "IsCompact.measure_eq_biInf_integral_hasCompactSupport"],
 ["checkType", "IsCompactOperator.clm_comp"],
 ["checkType", "IsCompactOperator.comp_clm"],
 ["checkType", "IsCompactOperator.continuous"],
 ["checkType", "IsCompactOperator.image_ball_subset_compact"],
 ["checkType", "IsCompactOperator.image_closedBall_subset_compact"],
 ["checkType", "IsCompactOperator.image_subset_compact_of_bounded"],
 ["checkType", "IsCompactOperator.image_subset_compact_of_isVonNBounded"],
 ["checkType", "IsCompactOperator.isCompact_closure_image_ball"],
 ["checkType", "IsCompactOperator.isCompact_closure_image_closedBall"],
 ["checkType", "IsCompactOperator.isCompact_closure_image_of_bounded"],
 ["checkType", "IsCompactOperator.isCompact_closure_image_of_isVonNBounded"],
 ["checkType", "IsCompactOperator.restrict"],
 ["checkType", "IsCompactOperator.restrict'"],
 ["checkType", "IsConformalMap.injective"],
 ["checkType", "IsConformalMap.is_complex_or_conj_linear"],
 ["checkType", "IsCountablySpanning.prod"],
 ["checkType", "IsCyclotomicExtension.aeval_zeta"],
 ["checkType", "IsCyclotomicExtension.autEquivPow_apply"],
 ["checkType", "IsCyclotomicExtension.autEquivPow_symm_apply"],
 ["checkType", "IsCyclotomicExtension.discr_odd_prime"],
 ["checkType", "IsCyclotomicExtension.discr_prime_pow"],
 ["checkType", "IsCyclotomicExtension.discr_prime_pow_eq_unit_mul_pow"],
 ["checkType", "IsCyclotomicExtension.discr_prime_pow_ne_two"],
 ["checkType", "IsCyclotomicExtension.discr_prime_pow_ne_two'"],
 ["checkType", "IsCyclotomicExtension.fromZetaAut_spec"],
 ["checkType", "IsCyclotomicExtension.isPrimePow_norm_zeta_sub_one"],
 ["checkType", "IsCyclotomicExtension.norm_zeta_eq_one"],
 ["checkType", "IsCyclotomicExtension.prime_ne_two_norm_zeta_sub_one"],
 ["checkType", "IsCyclotomicExtension.prime_ne_two_pow_norm_zeta_pow_sub_one"],
 ["checkType", "IsCyclotomicExtension.prime_ne_two_pow_norm_zeta_sub_one"],
 ["checkType", "IsCyclotomicExtension.singleton_one_of_algebraMap_bijective"],
 ["checkType", "IsCyclotomicExtension.trans"],
 ["checkType", "IsCyclotomicExtension.two_pow_norm_zeta_sub_one"],
 ["checkType", "IsFiniteMeasureOnCompacts.map"],
 ["checkType", "IsHilbertSum.hasSum_linearIsometryEquiv_symm"],
 ["checkType", "IsHilbertSum.linearIsometryEquiv_apply_dfinsupp_sum_single"],
 ["checkType", "IsHilbertSum.linearIsometryEquiv_symm_apply"],
 ["checkType",
  "IsHilbertSum.linearIsometryEquiv_symm_apply_dfinsupp_sum_single"],
 ["checkType", "IsHilbertSum.linearIsometryEquiv_symm_apply_single"],
 ["checkType", "IsHilbertSum.mkInternal"],
 ["checkType", "IsHilbertSum.ofSurjective"],
 ["checkType", "IsHilbertSum.rec"],
 ["checkType", "IsHilbertSum.surjective_isometry"],
 ["checkType", "IsLocalExtrOn.exists_linear_map_of_hasStrictFDerivAt"],
 ["checkType", "IsLocalMaxOn.fderivWithin_eq_zero"],
 ["checkType", "IsLocalMaxOn.fderivWithin_nonpos"],
 ["checkType", "IsLocalMaxOn.hasFDerivWithinAt_eq_zero"],
 ["checkType", "IsLocalMaxOn.hasFDerivWithinAt_nonpos"],
 ["checkType", "IsLocalMinOn.fderivWithin_eq_zero"],
 ["checkType", "IsLocalMinOn.fderivWithin_nonneg"],
 ["checkType", "IsLocalMinOn.hasFDerivWithinAt_eq_zero"],
 ["checkType", "IsLocalMinOn.hasFDerivWithinAt_nonneg"],
 ["checkType", "IsPathConnected.exists_path_through_family"],
 ["checkType", "IsPathConnected.exists_path_through_family'"],
 ["checkType", "IsPiSystem.prod"],
 ["checkType", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_apply"],
 ["checkType", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_symm_apply"],
 ["checkType", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_apply"],
 ["checkType", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_symm_apply"],
 ["checkType", "IsPrimitiveRoot.autToPow_injective"],
 ["checkType", "IsPrimitiveRoot.discr_zeta_eq_discr_zeta_sub_one"],
 ["checkType", "IsPrimitiveRoot.embeddingsEquivPrimitiveRoots_apply_coe"],
 ["checkType", "IsPrimitiveRoot.norm_eq_neg_one_pow"],
 ["checkType", "IsPrimitiveRoot.norm_eq_one"],
 ["checkType", "IsPrimitiveRoot.norm_eq_one_of_linearly_ordered"],
 ["checkType", "IsPrimitiveRoot.norm_of_cyclotomic_irreducible"],
 ["checkType", "IsPrimitiveRoot.pow_sub_one_norm_prime_ne_two"],
 ["checkType", "IsPrimitiveRoot.pow_sub_one_norm_prime_pow_ne_two"],
 ["checkType", "IsPrimitiveRoot.pow_sub_one_norm_prime_pow_of_ne_zero"],
 ["checkType", "IsPrimitiveRoot.pow_sub_one_norm_two"],
 ["checkType", "IsPrimitiveRoot.sub_one_norm_eq_eval_cyclotomic"],
 ["checkType", "IsPrimitiveRoot.sub_one_norm_isPrimePow"],
 ["checkType", "IsPrimitiveRoot.sub_one_norm_prime"],
 ["checkType", "IsPrimitiveRoot.sub_one_norm_prime_ne_two"],
 ["checkType", "IsPrimitiveRoot.sub_one_norm_two"],
 ["checkType", "IsROrC.I_im"],
 ["checkType", "IsROrC.I_im'"],
 ["checkType", "IsROrC.I_mul_re"],
 ["checkType", "IsROrC.I_re"],
 ["checkType", "IsROrC.I_re_ax"],
 ["checkType", "IsROrC.abs_im_div_norm_le_one"],
 ["checkType", "IsROrC.abs_im_le_norm"],
 ["checkType", "IsROrC.abs_re_div_norm_le_one"],
 ["checkType", "IsROrC.abs_re_le_norm"],
 ["checkType", "IsROrC.add_conj"],
 ["checkType", "IsROrC.algebraMap_eq_ofReal"],
 ["checkType", "IsROrC.bit0_im"],
 ["checkType", "IsROrC.bit0_re"],
 ["checkType", "IsROrC.bit1_im"],
 ["checkType", "IsROrC.bit1_re"],
 ["checkType", "IsROrC.conjAe_coe"],
 ["checkType", "IsROrC.conjCle_apply"],
 ["checkType", "IsROrC.conjLie_apply"],
 ["checkType", "IsROrC.conj_I"],
 ["checkType", "IsROrC.conj_I_ax"],
 ["checkType", "IsROrC.conj_bit0"],
 ["checkType", "IsROrC.conj_bit1"],
 ["checkType", "IsROrC.conj_div"],
 ["checkType", "IsROrC.conj_eq_iff_im"],
 ["checkType", "IsROrC.conj_eq_iff_re"],
 ["checkType", "IsROrC.conj_eq_iff_real"],
 ["checkType", "IsROrC.conj_eq_re_sub_im"],
 ["checkType", "IsROrC.conj_im"],
 ["checkType", "IsROrC.conj_im_ax"],
 ["checkType", "IsROrC.conj_inv"],
 ["checkType", "IsROrC.conj_mul"],
 ["checkType", "IsROrC.conj_neg_I"],
 ["checkType", "IsROrC.conj_ofReal"],
 ["checkType", "IsROrC.conj_re"],
 ["checkType", "IsROrC.conj_re_ax"],
 ["checkType", "IsROrC.conj_smul"],
 ["checkType", "IsROrC.conj_to_real"],
 ["checkType", "IsROrC.conj_tsum"],
 ["checkType", "IsROrC.continuous_conj"],
 ["checkType", "IsROrC.continuous_im"],
 ["checkType", "IsROrC.continuous_normSq"],
 ["checkType", "IsROrC.continuous_re"],
 ["checkType", "IsROrC.div_im"],
 ["checkType", "IsROrC.div_re"],
 ["checkType", "IsROrC.div_re_ofReal"],
 ["checkType", "IsROrC.ext"],
 ["checkType", "IsROrC.ext_iff"],
 ["checkType", "IsROrC.hasSum_conj"],
 ["checkType", "IsROrC.hasSum_conj'"],
 ["checkType", "IsROrC.hasSum_iff"],
 ["checkType", "IsROrC.hasSum_im"],
 ["checkType", "IsROrC.hasSum_re"],
 ["checkType", "IsROrC.imClm_apply"],
 ["checkType", "IsROrC.imLm_coe"],
 ["checkType", "IsROrC.im_eq_complex_im"],
 ["checkType", "IsROrC.im_eq_conj_sub"],
 ["checkType", "IsROrC.im_eq_zero_of_le"],
 ["checkType", "IsROrC.im_le_norm"],
 ["checkType", "IsROrC.im_ofReal_mul"],
 ["checkType", "IsROrC.im_sq_le_normSq"],
 ["checkType", "IsROrC.im_to_complex"],
 ["checkType", "IsROrC.im_to_real"],
 ["checkType", "IsROrC.im_tsum"],
 ["checkType", "IsROrC.inner_apply"],
 ["checkType", "IsROrC.intCast_im"],
 ["checkType", "IsROrC.intCast_re"],
 ["checkType", "IsROrC.inv_def"],
 ["checkType", "IsROrC.inv_eq_conj"],
 ["checkType", "IsROrC.inv_im"],
 ["checkType", "IsROrC.inv_re"],
 ["checkType", "IsROrC.isCauSeq_im"],
 ["checkType", "IsROrC.isCauSeq_re"],
 ["checkType", "IsROrC.is_real_TFAE"],
 ["checkType", "IsROrC.le_iff_re_im"],
 ["checkType", "IsROrC.lt_iff_re_im"],
 ["checkType", "IsROrC.measurable_im"],
 ["checkType", "IsROrC.measurable_re"],
 ["checkType", "IsROrC.mk"],
 ["checkType", "IsROrC.mul_conj"],
 ["checkType", "IsROrC.mul_im"],
 ["checkType", "IsROrC.mul_im_I_ax"],
 ["checkType", "IsROrC.mul_im_ax"],
 ["checkType", "IsROrC.mul_re"],
 ["checkType", "IsROrC.mul_re_ax"],
 ["checkType", "IsROrC.mul_self_norm"],
 ["checkType", "IsROrC.natCast_im"],
 ["checkType", "IsROrC.natCast_re"],
 ["checkType", "IsROrC.neg_iff"],
 ["checkType", "IsROrC.nonneg_iff"],
 ["checkType", "IsROrC.nonpos_iff"],
 ["checkType", "IsROrC.normSq_add"],
 ["checkType", "IsROrC.normSq_apply"],
 ["checkType", "IsROrC.normSq_conj"],
 ["checkType", "IsROrC.normSq_div"],
 ["checkType", "IsROrC.normSq_eq_def'"],
 ["checkType", "IsROrC.normSq_eq_zero"],
 ["checkType", "IsROrC.normSq_inv"],
 ["checkType", "IsROrC.normSq_mul"],
 ["checkType", "IsROrC.normSq_neg"],
 ["checkType", "IsROrC.normSq_nonneg"],
 ["checkType", "IsROrC.normSq_one"],
 ["checkType", "IsROrC.normSq_pos"],
 ["checkType", "IsROrC.normSq_sub"],
 ["checkType", "IsROrC.normSq_to_complex"],
 ["checkType", "IsROrC.normSq_to_real"],
 ["checkType", "IsROrC.normSq_zero"],
 ["checkType", "IsROrC.norm_conj"],
 ["checkType", "IsROrC.norm_im_le_norm"],
 ["checkType", "IsROrC.norm_re_le_norm"],
 ["checkType", "IsROrC.norm_sq_eq_def"],
 ["checkType", "IsROrC.norm_sq_eq_def_ax"],
 ["checkType", "IsROrC.norm_sq_re_add_conj"],
 ["checkType", "IsROrC.norm_sq_re_conj_add"],
 ["checkType", "IsROrC.ofNat_im"],
 ["checkType", "IsROrC.ofNat_mul_im"],
 ["checkType", "IsROrC.ofNat_mul_re"],
 ["checkType", "IsROrC.ofNat_re"],
 ["checkType", "IsROrC.ofRealAm_coe"],
 ["checkType", "IsROrC.ofRealClm_apply"],
 ["checkType", "IsROrC.ofRealLi_apply"],
 ["checkType", "IsROrC.ofReal_im"],
 ["checkType", "IsROrC.ofReal_im_ax"],
 ["checkType", "IsROrC.ofReal_re"],
 ["checkType", "IsROrC.ofReal_re_ax"],
 ["checkType", "IsROrC.one_im"],
 ["checkType", "IsROrC.one_re"],
 ["checkType", "IsROrC.pos_iff"],
 ["checkType", "IsROrC.ratCast_im"],
 ["checkType", "IsROrC.ratCast_re"],
 ["checkType", "IsROrC.reClm_apply"],
 ["checkType", "IsROrC.reLm_coe"],
 ["checkType", "IsROrC.re_add_im"],
 ["checkType", "IsROrC.re_add_im_ax"],
 ["checkType", "IsROrC.re_eq_add_conj"],
 ["checkType", "IsROrC.re_eq_complex_re"],
 ["checkType", "IsROrC.re_eq_norm_of_mul_conj"],
 ["checkType", "IsROrC.re_eq_self_of_le"],
 ["checkType", "IsROrC.re_le_norm"],
 ["checkType", "IsROrC.re_ofReal_mul"],
 ["checkType", "IsROrC.re_sq_le_normSq"],
 ["checkType", "IsROrC.re_to_complex"],
 ["checkType", "IsROrC.re_to_real"],
 ["checkType", "IsROrC.re_tsum"],
 ["checkType", "IsROrC.rec"],
 ["checkType", "IsROrC.smul_im"],
 ["checkType", "IsROrC.smul_re"],
 ["checkType", "IsROrC.sqrt_normSq_eq_norm"],
 ["checkType", "IsROrC.star_def"],
 ["checkType", "IsROrC.sub_conj"],
 ["checkType", "IsROrC.summable_conj"],
 ["checkType", "IsROrC.zero_re'"],
 ["checkType", "IsSelfAdjoint.adjoint_conj"],
 ["checkType", "IsSelfAdjoint.adjoint_eq"],
 ["checkType", "IsSelfAdjoint.coe_realPart"],
 ["checkType", "IsSelfAdjoint.conj_adjoint"],
 ["checkType", "IsSelfAdjoint.eq_smul_self_of_isLocalExtrOn"],
 ["checkType", "IsSelfAdjoint.eq_smul_self_of_isLocalExtrOn_real"],
 ["checkType", "IsSelfAdjoint.imaginaryPart"],
 ["checkType", "IsSelfAdjoint.linearly_dependent_of_isLocalExtrOn"],
 ["checkType", "IsSolvableByRad.base"],
 ["checkType", "IsSolvableByRad.rec"],
 ["checkType", "Isometry.affineIsometryOfStrictConvexSpace_apply"],
 ["checkType", "Isometry.coe_affineIsometryOfStrictConvexSpace"],
 ["checkType", "Isometry.isometryEquivOnRange_apply"],
 ["checkType", "Isometry.mapsTo_ball"],
 ["checkType", "Isometry.mapsTo_closedBall"],
 ["checkType", "Isometry.mapsTo_emetric_ball"],
 ["checkType", "Isometry.mapsTo_emetric_closedBall"],
 ["checkType", "Isometry.mapsTo_perpBisector"],
 ["checkType", "Isometry.mapsTo_sphere"],
 ["checkType", "IsometryEquiv.addLeft_apply"],
 ["checkType", "IsometryEquiv.addRight_apply"],
 ["checkType", "IsometryEquiv.apply_inv_self"],
 ["checkType", "IsometryEquiv.apply_symm_apply"],
 ["checkType", "IsometryEquiv.bijective"],
 ["checkType", "IsometryEquiv.coeFn_toRealAffineIsometryEquiv"],
 ["checkType", "IsometryEquiv.coe_eq_toEquiv"],
 ["checkType", "IsometryEquiv.coe_mk"],
 ["checkType", "IsometryEquiv.coe_mul"],
 ["checkType", "IsometryEquiv.coe_one"],
 ["checkType", "IsometryEquiv.coe_toEquiv"],
 ["checkType", "IsometryEquiv.coe_toHomeomorph"],
 ["checkType", "IsometryEquiv.coe_toHomeomorph_symm"],
 ["checkType", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero"],
 ["checkType", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero_symm"],
 ["checkType", "IsometryEquiv.comp_continuousOn_iff"],
 ["checkType", "IsometryEquiv.comp_continuous_iff"],
 ["checkType", "IsometryEquiv.comp_continuous_iff'"],
 ["checkType", "IsometryEquiv.constSMul_apply"],
 ["checkType", "IsometryEquiv.constVAdd_apply"],
 ["checkType", "IsometryEquiv.constVSub_apply"],
 ["checkType", "IsometryEquiv.constVSub_symm_apply"],
 ["checkType", "IsometryEquiv.constVSub_toFun"],
 ["checkType", "IsometryEquiv.continuous"],
 ["checkType", "IsometryEquiv.diam_image"],
 ["checkType", "IsometryEquiv.diam_preimage"],
 ["checkType", "IsometryEquiv.dimH_image"],
 ["checkType", "IsometryEquiv.dimH_preimage"],
 ["checkType", "IsometryEquiv.dist_eq"],
 ["checkType", "IsometryEquiv.divLeft_apply"],
 ["checkType", "IsometryEquiv.divLeft_symm_apply"],
 ["checkType", "IsometryEquiv.divRight_apply"],
 ["checkType", "IsometryEquiv.ediam_image"],
 ["checkType", "IsometryEquiv.ediam_preimage"],
 ["checkType", "IsometryEquiv.edist_eq"],
 ["checkType", "IsometryEquiv.eq_symm_apply"],
 ["checkType", "IsometryEquiv.ext"],
 ["checkType", "IsometryEquiv.funUnique_apply"],
 ["checkType", "IsometryEquiv.funUnique_symm_apply"],
 ["checkType", "IsometryEquiv.funUnique_toFun"],
 ["checkType", "IsometryEquiv.hausdorffMeasure_image"],
 ["checkType", "IsometryEquiv.hausdorffMeasure_preimage"],
 ["checkType", "IsometryEquiv.image_ball"],
 ["checkType", "IsometryEquiv.image_closedBall"],
 ["checkType", "IsometryEquiv.image_emetric_ball"],
 ["checkType", "IsometryEquiv.image_emetric_closedBall"],
 ["checkType", "IsometryEquiv.image_sphere"],
 ["checkType", "IsometryEquiv.image_symm"],
 ["checkType", "IsometryEquiv.injective"],
 ["checkType", "IsometryEquiv.inv_apply"],
 ["checkType", "IsometryEquiv.inv_apply_self"],
 ["checkType", "IsometryEquiv.isometry"],
 ["checkType", "IsometryEquiv.map_hausdorffMeasure"],
 ["checkType", "IsometryEquiv.map_midpoint"],
 ["checkType", "IsometryEquiv.measurePreserving_hausdorffMeasure"],
 ["checkType", "IsometryEquiv.midpoint_fixed"],
 ["checkType", "IsometryEquiv.mulLeft_apply"],
 ["checkType", "IsometryEquiv.mulRight_apply"],
 ["checkType", "IsometryEquiv.mul_apply"],
 ["checkType", "IsometryEquiv.neg_apply"],
 ["checkType", "IsometryEquiv.nndist_eq"],
 ["checkType", "IsometryEquiv.piFinTwo_apply"],
 ["checkType", "IsometryEquiv.piFinTwo_symm_apply"],
 ["checkType", "IsometryEquiv.piFinTwo_toFun"],
 ["checkType", "IsometryEquiv.preimage_ball"],
 ["checkType", "IsometryEquiv.preimage_closedBall"],
 ["checkType", "IsometryEquiv.preimage_emetric_ball"],
 ["checkType", "IsometryEquiv.preimage_emetric_closedBall"],
 ["checkType", "IsometryEquiv.preimage_sphere"],
 ["checkType", "IsometryEquiv.preimage_symm"],
 ["checkType", "IsometryEquiv.range_eq_univ"],
 ["checkType", "IsometryEquiv.self_comp_symm"],
 ["checkType", "IsometryEquiv.subLeft_apply"],
 ["checkType", "IsometryEquiv.subLeft_symm_apply"],
 ["checkType", "IsometryEquiv.subRight_apply"],
 ["checkType", "IsometryEquiv.surjective"],
 ["checkType", "IsometryEquiv.symm_apply_apply"],
 ["checkType", "IsometryEquiv.symm_apply_eq"],
 ["checkType", "IsometryEquiv.symm_comp_self"],
 ["checkType", "IsometryEquiv.symm_trans_apply"],
 ["checkType", "IsometryEquiv.toRealLinearIsometryEquivOfMapZero"],
 ["checkType", "IsometryEquiv.toRealLinearIsometryEquiv_apply"],
 ["checkType", "IsometryEquiv.toRealLinearIsometryEquiv_symm_apply"],
 ["checkType", "IsometryEquiv.trans_apply"],
 ["checkType", "IsometryEquiv.vaddConst_apply"],
 ["checkType", "IsometryEquiv.vaddConst_symm_apply"],
 ["checkType", "IsometryEquiv.vaddConst_toFun"],
 ["checkType", "JoinedIn.somePath_mem"],
 ["checkType", "LDL.lowerInv_eq_gramSchmidtBasis"],
 ["checkType", "LDL.lowerInv_orthogonal"],
 ["checkType", "LeftInvariantDerivation.coeFnAddMonoidHom_apply"],
 ["checkType", "LeftInvariantDerivation.coe_add"],
 ["checkType", "LeftInvariantDerivation.coe_derivation"],
 ["checkType", "LeftInvariantDerivation.coe_injective"],
 ["checkType", "LeftInvariantDerivation.coe_neg"],
 ["checkType", "LeftInvariantDerivation.coe_smul"],
 ["checkType", "LeftInvariantDerivation.coe_sub"],
 ["checkType", "LeftInvariantDerivation.coe_zero"],
 ["checkType", "LeftInvariantDerivation.commutator_apply"],
 ["checkType", "LeftInvariantDerivation.commutator_coe_derivation"],
 ["checkType", "LeftInvariantDerivation.comp_L"],
 ["checkType", "LeftInvariantDerivation.evalAt_apply"],
 ["checkType", "LeftInvariantDerivation.evalAt_coe"],
 ["checkType", "LeftInvariantDerivation.evalAt_mul"],
 ["checkType", "LeftInvariantDerivation.ext"],
 ["checkType", "LeftInvariantDerivation.left_invariant"],
 ["checkType", "LeftInvariantDerivation.left_invariant'"],
 ["checkType", "LeftInvariantDerivation.left_invariant''"],
 ["checkType", "LeftInvariantDerivation.leibniz"],
 ["checkType", "LeftInvariantDerivation.lift_smul"],
 ["checkType", "LeftInvariantDerivation.map_add"],
 ["checkType", "LeftInvariantDerivation.map_neg"],
 ["checkType", "LeftInvariantDerivation.map_smul"],
 ["checkType", "LeftInvariantDerivation.map_sub"],
 ["checkType", "LeftInvariantDerivation.map_zero"],
 ["checkType", "LeftInvariantDerivation.mk"],
 ["checkType", "LeftInvariantDerivation.rec"],
 ["checkType", "LeftInvariantDerivation.toFun_eq_coe"],
 ["checkType", "LightProfinite.ext"],
 ["checkType", "LightProfinite.instCategoryLightProfinite_comp_apply"],
 ["checkType", "LightProfinite.instCategoryLightProfinite_id_apply"],
 ["checkType", "LineDifferentiableAt.of_comp"],
 ["checkType", "LineDifferentiableWithinAt.congr_mono"],
 ["checkType", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous"],
 ["checkType", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous_symm"],
 ["checkType", "LinearEquiv.coe_isometryOfInner"],
 ["checkType", "LinearEquiv.coe_isometryOfOrthonormal"],
 ["checkType", "LinearEquiv.coe_toContinuousLinearEquiv'"],
 ["checkType", "LinearEquiv.coe_toContinuousLinearEquiv_symm'"],
 ["checkType", "LinearEquiv.continuous_symm"],
 ["checkType", "LinearEquiv.isometryOfInner"],
 ["checkType", "LinearEquiv.isometryOfInner_toLinearEquiv"],
 ["checkType", "LinearEquiv.isometryOfOrthonormal"],
 ["checkType", "LinearEquiv.isometryOfOrthonormal_toLinearEquiv"],
 ["checkType", "LinearEquiv.toContinuousLinearEquivOfBounds"],
 ["checkType", "LinearEquiv.toContinuousLinearEquivOfContinuous"],
 ["checkType", "LinearIsometry.angle_map"],
 ["checkType", "LinearIsometry.antilipschitz"],
 ["checkType", "LinearIsometry.coe_comp"],
 ["checkType", "LinearIsometry.coe_id"],
 ["checkType", "LinearIsometry.coe_injective"],
 ["checkType", "LinearIsometry.coe_mk"],
 ["checkType", "LinearIsometry.coe_mul"],
 ["checkType", "LinearIsometry.coe_one"],
 ["checkType", "LinearIsometry.coe_pow"],
 ["checkType", "LinearIsometry.coe_toAffineIsometry"],
 ["checkType", "LinearIsometry.coe_toContinuousLinearMap"],
 ["checkType", "LinearIsometry.coe_toLinearIsometryEquiv"],
 ["checkType", "LinearIsometry.coe_toLinearMap"],
 ["checkType", "LinearIsometry.comp_continuous_iff"],
 ["checkType", "LinearIsometry.congr_arg"],
 ["checkType", "LinearIsometry.congr_fun"],
 ["checkType", "LinearIsometry.contDiff"],
 ["checkType", "LinearIsometry.continuous"],
 ["checkType", "LinearIsometry.diam_image"],
 ["checkType", "LinearIsometry.diam_range"],
 ["checkType", "LinearIsometry.dist_map"],
 ["checkType", "LinearIsometry.ediam_image"],
 ["checkType", "LinearIsometry.ediam_range"],
 ["checkType", "LinearIsometry.edist_map"],
 ["checkType", "LinearIsometry.equivRange_apply_coe"],
 ["checkType", "LinearIsometry.ext"],
 ["checkType", "LinearIsometry.extend_apply"],
 ["checkType", "LinearIsometry.id_apply"],
 ["checkType", "LinearIsometry.im_apply_eq_im"],
 ["checkType", "LinearIsometry.im_apply_eq_im_or_neg_of_re_apply_eq_re"],
 ["checkType", "LinearIsometry.injective"],
 ["checkType", "LinearIsometry.inner_map_map"],
 ["checkType", "LinearIsometry.integral_comp_comm"],
 ["checkType", "LinearIsometry.isComplete_image_iff"],
 ["checkType", "LinearIsometry.isometry"],
 ["checkType", "LinearIsometry.lipschitz"],
 ["checkType", "LinearIsometry.map_add"],
 ["checkType", "LinearIsometry.map_eq_iff"],
 ["checkType", "LinearIsometry.map_ne"],
 ["checkType", "LinearIsometry.map_neg"],
 ["checkType", "LinearIsometry.map_orthogonalProjection"],
 ["checkType", "LinearIsometry.map_orthogonalProjection'"],
 ["checkType", "LinearIsometry.map_smul"],
 ["checkType", "LinearIsometry.map_smulₛₗ"],
 ["checkType", "LinearIsometry.map_sub"],
 ["checkType", "LinearIsometry.map_zero"],
 ["checkType", "LinearIsometry.mk"],
 ["checkType", "LinearIsometry.nnnorm_map"],
 ["checkType", "LinearIsometry.norm_iteratedFDerivWithin_comp_left"],
 ["checkType", "LinearIsometry.norm_iteratedFDeriv_comp_left"],
 ["checkType", "LinearIsometry.norm_map"],
 ["checkType", "LinearIsometry.norm_map'"],
 ["checkType", "LinearIsometry.orthonormal_comp_iff"],
 ["checkType", "LinearIsometry.preimage_ball"],
 ["checkType", "LinearIsometry.preimage_closedBall"],
 ["checkType", "LinearIsometry.preimage_sphere"],
 ["checkType", "LinearIsometry.re_apply_eq_re"],
 ["checkType", "LinearIsometry.re_apply_eq_re_of_add_conj_eq"],
 ["checkType", "LinearIsometry.rec"],
 ["checkType", "LinearIsometry.toLinearIsometryEquiv_apply"],
 ["checkType", "LinearIsometry.toSpanSingleton_apply"],
 ["checkType", "LinearIsometryEquiv.antilipschitz"],
 ["checkType", "LinearIsometryEquiv.apply_symm_apply"],
 ["checkType", "LinearIsometryEquiv.bijective"],
 ["checkType", "LinearIsometryEquiv.coe_coe"],
 ["checkType", "LinearIsometryEquiv.coe_coe''"],
 ["checkType", "LinearIsometryEquiv.coe_injective"],
 ["checkType", "LinearIsometryEquiv.coe_inv"],
 ["checkType", "LinearIsometryEquiv.coe_mk"],
 ["checkType", "LinearIsometryEquiv.coe_mul"],
 ["checkType", "LinearIsometryEquiv.coe_neg"],
 ["checkType", "LinearIsometryEquiv.coe_ofEq_apply"],
 ["checkType", "LinearIsometryEquiv.coe_ofLinearIsometry"],
 ["checkType", "LinearIsometryEquiv.coe_ofLinearIsometry_symm"],
 ["checkType", "LinearIsometryEquiv.coe_ofSurjective"],
 ["checkType", "LinearIsometryEquiv.coe_one"],
 ["checkType", "LinearIsometryEquiv.coe_prodAssoc"],
 ["checkType", "LinearIsometryEquiv.coe_prodAssoc_symm"],
 ["checkType", "LinearIsometryEquiv.coe_refl"],
 ["checkType", "LinearIsometryEquiv.coe_symm_trans"],
 ["checkType", "LinearIsometryEquiv.coe_toAffineIsometryEquiv"],
 ["checkType", "LinearIsometryEquiv.coe_toContinuousLinearEquiv"],
 ["checkType", "LinearIsometryEquiv.coe_toHomeomorph"],
 ["checkType", "LinearIsometryEquiv.coe_toIsometryEquiv"],
 ["checkType", "LinearIsometryEquiv.coe_toLinearEquiv"],
 ["checkType", "LinearIsometryEquiv.coe_toLinearIsometry"],
 ["checkType", "LinearIsometryEquiv.coe_trans"],
 ["checkType", "LinearIsometryEquiv.comp_continuousOn_iff"],
 ["checkType", "LinearIsometryEquiv.comp_continuous_iff"],
 ["checkType", "LinearIsometryEquiv.comp_differentiableAt_iff"],
 ["checkType", "LinearIsometryEquiv.comp_differentiableOn_iff"],
 ["checkType", "LinearIsometryEquiv.comp_differentiableWithinAt_iff"],
 ["checkType", "LinearIsometryEquiv.comp_differentiable_iff"],
 ["checkType", "LinearIsometryEquiv.comp_fderiv"],
 ["checkType", "LinearIsometryEquiv.comp_fderivWithin"],
 ["checkType", "LinearIsometryEquiv.comp_hasFDerivAt_iff"],
 ["checkType", "LinearIsometryEquiv.comp_hasFDerivAt_iff'"],
 ["checkType", "LinearIsometryEquiv.comp_hasFDerivWithinAt_iff"],
 ["checkType", "LinearIsometryEquiv.comp_hasFDerivWithinAt_iff'"],
 ["checkType", "LinearIsometryEquiv.comp_hasStrictFDerivAt_iff"],
 ["checkType", "LinearIsometryEquiv.congr_arg"],
 ["checkType", "LinearIsometryEquiv.congr_fun"],
 ["checkType", "LinearIsometryEquiv.contDiff"],
 ["checkType", "LinearIsometryEquiv.continuous"],
 ["checkType", "LinearIsometryEquiv.continuousAt"],
 ["checkType", "LinearIsometryEquiv.continuousOn"],
 ["checkType", "LinearIsometryEquiv.continuousWithinAt"],
 ["checkType", "LinearIsometryEquiv.diam_image"],
 ["checkType", "LinearIsometryEquiv.differentiable"],
 ["checkType", "LinearIsometryEquiv.differentiableAt"],
 ["checkType", "LinearIsometryEquiv.differentiableOn"],
 ["checkType", "LinearIsometryEquiv.differentiableWithinAt"],
 ["checkType", "LinearIsometryEquiv.dist_map"],
 ["checkType", "LinearIsometryEquiv.ediam_image"],
 ["checkType", "LinearIsometryEquiv.edist_map"],
 ["checkType", "LinearIsometryEquiv.ext"],
 ["checkType", "LinearIsometryEquiv.fderiv"],
 ["checkType", "LinearIsometryEquiv.fderivWithin"],
 ["checkType", "LinearIsometryEquiv.hasFDerivAt"],
 ["checkType", "LinearIsometryEquiv.hasFDerivWithinAt"],
 ["checkType", "LinearIsometryEquiv.hasStrictFDerivAt"],
 ["checkType", "LinearIsometryEquiv.image_ball"],
 ["checkType", "LinearIsometryEquiv.image_closedBall"],
 ["checkType", "LinearIsometryEquiv.image_eq_preimage"],
 ["checkType", "LinearIsometryEquiv.image_sphere"],
 ["checkType", "LinearIsometryEquiv.injective"],
 ["checkType", "LinearIsometryEquiv.inner_map_map"],
 ["checkType", "LinearIsometryEquiv.isometry"],
 ["checkType", "LinearIsometryEquiv.lipschitz"],
 ["checkType", "LinearIsometryEquiv.map_add"],
 ["checkType", "LinearIsometryEquiv.map_eq_iff"],
 ["checkType", "LinearIsometryEquiv.map_eq_zero_iff"],
 ["checkType", "LinearIsometryEquiv.map_ne"],
 ["checkType", "LinearIsometryEquiv.map_smul"],
 ["checkType", "LinearIsometryEquiv.map_smulₛₗ"],
 ["checkType", "LinearIsometryEquiv.map_sub"],
 ["checkType", "LinearIsometryEquiv.map_zero"],
 ["checkType", "LinearIsometryEquiv.mk"],
 ["checkType", "LinearIsometryEquiv.nnnorm_map"],
 ["checkType", "LinearIsometryEquiv.norm_iteratedFDerivWithin_comp_left"],
 ["checkType", "LinearIsometryEquiv.norm_iteratedFDerivWithin_comp_right"],
 ["checkType", "LinearIsometryEquiv.norm_iteratedFDeriv_comp_left"],
 ["checkType", "LinearIsometryEquiv.norm_iteratedFDeriv_comp_right"],
 ["checkType", "LinearIsometryEquiv.norm_map"],
 ["checkType", "LinearIsometryEquiv.norm_map'"],
 ["checkType", "LinearIsometryEquiv.ofBounds"],
 ["checkType", "LinearIsometryEquiv.ofSurjective"],
 ["checkType", "LinearIsometryEquiv.ofTop_apply"],
 ["checkType", "LinearIsometryEquiv.ofTop_symm_apply_coe"],
 ["checkType", "LinearIsometryEquiv.piLpCongrLeft_apply"],
 ["checkType", "LinearIsometryEquiv.piLpCongrLeft_single"],
 ["checkType", "LinearIsometryEquiv.preimage_ball"],
 ["checkType", "LinearIsometryEquiv.preimage_closedBall"],
 ["checkType", "LinearIsometryEquiv.preimage_sphere"],
 ["checkType", "LinearIsometryEquiv.range_eq_univ"],
 ["checkType", "LinearIsometryEquiv.rec"],
 ["checkType", "LinearIsometryEquiv.reflections_generate_dim_aux"],
 ["checkType", "LinearIsometryEquiv.self_comp_symm"],
 ["checkType", "LinearIsometryEquiv.surjective"],
 ["checkType", "LinearIsometryEquiv.symm_apply_apply"],
 ["checkType", "LinearIsometryEquiv.symm_comp_self"],
 ["checkType", "LinearIsometryEquiv.trans_apply"],
 ["checkType", "LinearMap.adjoint_adjoint"],
 ["checkType", "LinearMap.adjoint_comp"],
 ["checkType", "LinearMap.adjoint_eq_toClm_adjoint"],
 ["checkType", "LinearMap.adjoint_inner_left"],
 ["checkType", "LinearMap.adjoint_inner_right"],
 ["checkType", "LinearMap.adjoint_toContinuousLinearMap"],
 ["checkType", "LinearMap.antilipschitz_of_comap_nhds_le"],
 ["checkType", "LinearMap.bound_of_ball_bound"],
 ["checkType", "LinearMap.bound_of_ball_bound'"],
 ["checkType", "LinearMap.bound_of_shell"],
 ["checkType", "LinearMap.bound_of_sphere_bound"],
 ["checkType", "LinearMap.clmOfExistsBoundedImage"],
 ["checkType", "LinearMap.clmOfExistsBoundedImage_apply"],
 ["checkType", "LinearMap.clmOfExistsBoundedImage_coe"],
 ["checkType", "LinearMap.closedEmbedding_of_injective"],
 ["checkType", "LinearMap.coe_isometryOfInner"],
 ["checkType", "LinearMap.coe_isometryOfOrthonormal"],
 ["checkType", "LinearMap.coe_toContinuousLinearMap"],
 ["checkType", "LinearMap.coe_toContinuousLinearMap'"],
 ["checkType", "LinearMap.coe_toContinuousLinearMap_symm"],
 ["checkType", "LinearMap.coe_toSeminorm"],
 ["checkType", "LinearMap.continuousAt_zero_of_locally_bounded"],
 ["checkType", "LinearMap.continuous_iff_isClosed_ker"],
 ["checkType", "LinearMap.continuous_of_finiteDimensional"],
 ["checkType", "LinearMap.continuous_of_isClosed_graph"],
 ["checkType", "LinearMap.continuous_of_isClosed_ker"],
 ["checkType", "LinearMap.continuous_of_locally_bounded"],
 ["checkType", "LinearMap.continuous_of_nonzero_on_open"],
 ["checkType", "LinearMap.continuous_of_seq_closed_graph"],
 ["checkType", "LinearMap.deriv"],
 ["checkType", "LinearMap.derivWithin"],
 ["checkType", "LinearMap.det_toContinuousLinearMap"],
 ["checkType", "LinearMap.eq_adjoint_iff"],
 ["checkType", "LinearMap.eq_adjoint_iff_basis"],
 ["checkType", "LinearMap.eq_adjoint_iff_basis_left"],
 ["checkType", "LinearMap.eq_adjoint_iff_basis_right"],
 ["checkType", "LinearMap.exists_antilipschitzWith"],
 ["checkType", "LinearMap.exists_map_addHaar_eq_smul_addHaar"],
 ["checkType", "LinearMap.exists_map_addHaar_eq_smul_addHaar'"],
 ["checkType", "LinearMap.extendTo𝕜'_apply"],
 ["checkType", "LinearMap.extendTo𝕜'_apply_re"],
 ["checkType", "LinearMap.extendTo𝕜_apply"],
 ["checkType", "LinearMap.hasDerivAt"],
 ["checkType", "LinearMap.hasDerivAtFilter"],
 ["checkType", "LinearMap.hasDerivWithinAt"],
 ["checkType", "LinearMap.hasStrictDerivAt"],
 ["checkType", "LinearMap.im_inner_adjoint_mul_self_eq_zero"],
 ["checkType", "LinearMap.isAdjointPair_inner"],
 ["checkType", "LinearMap.isOpenMap_of_finiteDimensional"],
 ["checkType", "LinearMap.isSelfAdjoint_iff'"],
 ["checkType", "LinearMap.isSymmetric_adjoint_mul_self"],
 ["checkType", "LinearMap.isSymmetric_iff_inner_map_self_real"],
 ["checkType", "LinearMap.isometryOfInner"],
 ["checkType", "LinearMap.isometryOfInner_toLinearMap"],
 ["checkType", "LinearMap.isometryOfOrthonormal"],
 ["checkType", "LinearMap.isometryOfOrthonormal_toLinearMap"],
 ["checkType", "LinearMap.ker_toContinuousLinearMap"],
 ["checkType", "LinearMap.mkContinuous"],
 ["checkType", "LinearMap.mkContinuousOfExistsBound"],
 ["checkType", "LinearMap.mkContinuousOfExistsBound_apply"],
 ["checkType", "LinearMap.mkContinuousOfExistsBound_coe"],
 ["checkType", "LinearMap.mkContinuousOfExistsBound₂"],
 ["checkType", "LinearMap.mkContinuous_apply"],
 ["checkType", "LinearMap.mkContinuous_coe"],
 ["checkType", "LinearMap.mkContinuous_norm_le"],
 ["checkType", "LinearMap.mkContinuous_norm_le'"],
 ["checkType", "LinearMap.mkContinuous₂"],
 ["checkType", "LinearMap.mkContinuous₂_apply"],
 ["checkType", "LinearMap.mkContinuous₂_norm_le"],
 ["checkType", "LinearMap.mkContinuous₂_norm_le'"],
 ["checkType", "LinearMap.norm_extendTo𝕜'_apply_sq"],
 ["checkType", "LinearMap.norm_mkContinuous₂_aux"],
 ["checkType", "LinearMap.polar_eq_iInter"],
 ["checkType", "LinearMap.polar_gc"],
 ["checkType", "LinearMap.polar_mem"],
 ["checkType", "LinearMap.polar_mem_iff"],
 ["checkType", "LinearMap.range_toContinuousLinearMap"],
 ["checkType", "LinearMap.re_inner_adjoint_mul_self_nonneg"],
 ["checkType", "LinearMap.star_eq_adjoint"],
 ["checkType", "LinearMap.tendsto_birkhoffAverage_of_ker_subset_closure"],
 ["checkType", "LinearMap.toContinuousLinearMap₁_apply"],
 ["checkType", "LinearMap.toLinearIsometry"],
 ["checkType", "LinearMap.toMatrixOrthonormal_apply"],
 ["checkType", "LinearMap.toMatrixOrthonormal_symm_apply"],
 ["checkType", "LinearMap.toMatrix_adjoint"],
 ["checkType", "LinearMap.toSeminormFamily_apply"],
 ["checkType", "LinearMap.toSeminorm_apply"],
 ["checkType", "LinearMap.toSeminorm_ball_zero"],
 ["checkType", "LinearMap.withSeminorms_induced"],
 ["checkType", "LinearOrderedField.coe_inducedOrderRingIso"],
 ["checkType", "LinearOrderedField.inducedOrderRingHom_toFun"],
 ["checkType", "LinearPMap.adjointAux_inner"],
 ["checkType", "LinearPMap.adjointAux_unique"],
 ["checkType", "LinearPMap.adjointDomainMkClmExtend_apply"],
 ["checkType", "LinearPMap.adjointDomainMkClm_apply"],
 ["checkType", "LinearPMap.adjoint_apply_of_dense"],
 ["checkType", "LinearPMap.mem_adjoint_domain_iff"],
 ["checkType", "LipschitzOnWith.approximatesLinearOn"],
 ["checkType", "LipschitzOnWith.comp_boundedVariationOn"],
 ["checkType", "LipschitzOnWith.comp_eVariationOn_le"],
 ["checkType", "LipschitzOnWith.comp_locallyBoundedVariationOn"],
 ["checkType", "LipschitzOnWith.extend_finite_dimension"],
 ["checkType", "LipschitzOnWith.extend_lp_infty"],
 ["checkType", "LipschitzOnWith.extend_pi"],
 ["checkType", "LipschitzOnWith.extend_real"],
 ["checkType", "LipschitzOnWith.isBounded_image2"],
 ["checkType", "LipschitzWith.ae_exists_fderiv_of_countable"],
 ["checkType", "LipschitzWith.coe_toLocallyBoundedMap"],
 ["checkType", "LipschitzWith.hasFderivAt_of_hasLineDerivAt_of_closure"],
 ["checkType", "LipschitzWith.mapsTo_ball"],
 ["checkType", "LipschitzWith.mapsTo_closedBall"],
 ["checkType", "LipschitzWith.properSpace"],
 ["checkType", "Locale.localePointOfSpacePoint_toFun"],
 ["checkType", "Locale.openOfElementHom_toFun"],
 ["checkType", "MDifferentiableOn.eqOn_of_isPreconnected_of_isMaxOn_norm"],
 ["checkType", "MDifferentiableOn.norm_eqOn_of_isPreconnected_of_isMaxOn"],
 ["checkType", "Matrix.coe_toEuclideanClm_eq_toEuclideanLin"],
 ["checkType", "Matrix.cstar_nnnorm_def"],
 ["checkType", "Matrix.cstar_norm_def"],
 ["checkType", "Matrix.frobenius_nnnorm_col"],
 ["checkType", "Matrix.frobenius_nnnorm_diagonal"],
 ["checkType", "Matrix.frobenius_nnnorm_one"],
 ["checkType", "Matrix.frobenius_nnnorm_row"],
 ["checkType", "Matrix.frobenius_norm_col"],
 ["checkType", "Matrix.frobenius_norm_diagonal"],
 ["checkType", "Matrix.frobenius_norm_row"],
 ["checkType", "Matrix.isHermitian_iff_isSymmetric"],
 ["checkType", "Matrix.isHermitian_submatrix_equiv"],
 ["checkType", "Matrix.l2_op_nnnorm_def"],
 ["checkType", "Matrix.l2_op_nnnorm_mulVec"],
 ["checkType", "Matrix.l2_op_norm_def"],
 ["checkType", "Matrix.l2_op_norm_mulVec"],
 ["checkType", "Matrix.linfty_op_nnnorm_eq_op_nnnorm"],
 ["checkType", "Matrix.linfty_op_nnnorm_toMatrix"],
 ["checkType", "Matrix.linfty_op_norm_eq_op_norm"],
 ["checkType", "Matrix.linfty_op_norm_toMatrix"],
 ["checkType", "Matrix.piLp_equiv_toEuclideanClm"],
 ["checkType", "Matrix.piLp_equiv_toEuclideanLin"],
 ["checkType", "Matrix.posSemidef_submatrix_equiv"],
 ["checkType", "Matrix.toEuclideanClm_piLp_equiv_symm"],
 ["checkType", "Matrix.toEuclideanLin_conjTranspose_eq_adjoint"],
 ["checkType", "Matrix.toEuclideanLin_piLp_equiv_symm"],
 ["checkType", "Matrix.toLin_conjTranspose"],
 ["checkType", "Matrix.toLin_finTwoProd_toContinuousLinearMap"],
 ["checkType", "Measurable.apply_continuousLinearMap"],
 ["checkType", "Measurable.im"],
 ["checkType", "Measurable.isGLB_of_mem"],
 ["checkType", "Measurable.isLUB_of_mem"],
 ["checkType", "Measurable.lintegral_kernel"],
 ["checkType", "Measurable.lintegral_kernel_prod_left"],
 ["checkType", "Measurable.lintegral_kernel_prod_left'"],
 ["checkType", "Measurable.lintegral_kernel_prod_right"],
 ["checkType", "Measurable.lintegral_kernel_prod_right'"],
 ["checkType", "Measurable.lintegral_kernel_prod_right''"],
 ["checkType", "Measurable.re"],
 ["checkType", "Measurable.set_lintegral_kernel"],
 ["checkType", "Measurable.set_lintegral_kernel_prod_left"],
 ["checkType", "Measurable.set_lintegral_kernel_prod_right"],
 ["checkType", "MeasurableEquiv.coe_addLeft"],
 ["checkType", "MeasurableEquiv.coe_addRight"],
 ["checkType", "MeasurableEquiv.coe_mulLeft"],
 ["checkType", "MeasurableEquiv.coe_mulLeft₀"],
 ["checkType", "MeasurableEquiv.coe_mulRight"],
 ["checkType", "MeasurableEquiv.coe_mulRight₀"],
 ["checkType", "MeasurableEquiv.coe_smul₀"],
 ["checkType", "MeasurableEquiv.comap_symm"],
 ["checkType", "MeasurableEquiv.gaussianReal_map_symm_apply"],
 ["checkType", "MeasurableEquiv.inv_apply"],
 ["checkType", "MeasurableEquiv.map_ae"],
 ["checkType", "MeasurableEquiv.map_apply"],
 ["checkType", "MeasurableEquiv.map_apply_eq_iff_map_symm_apply_eq"],
 ["checkType", "MeasurableEquiv.map_map_symm"],
 ["checkType", "MeasurableEquiv.map_measurableEquiv_injective"],
 ["checkType", "MeasurableEquiv.map_symm"],
 ["checkType", "MeasurableEquiv.map_symm_map"],
 ["checkType", "MeasurableEquiv.memℒp_map_measure_iff"],
 ["checkType", "MeasurableEquiv.neg_apply"],
 ["checkType", "MeasurableEquiv.quasiMeasurePreserving_symm"],
 ["checkType", "MeasurableEquiv.restrict_map"],
 ["checkType", "MeasurableEquiv.sigmaFinite_map"],
 ["checkType", "MeasurableEquiv.smul_apply"],
 ["checkType", "MeasurableEquiv.vadd_apply"],
 ["checkType",
  "MeasurableEquiv.withDensity_ofReal_map_symm_apply_eq_integral_abs_deriv_mul"],
 ["checkType",
  "MeasurableEquiv.withDensity_ofReal_map_symm_apply_eq_integral_abs_deriv_mul'"],
 ["checkType",
  "MeasurableEquiv.withDensity_ofReal_map_symm_apply_eq_integral_abs_det_fderiv_mul"],
 ["checkType", "MeasurableSet.image_of_continuousOn_injOn"],
 ["checkType", "MeasurableSet.image_of_measurable_injOn"],
 ["checkType", "MeasurePreservingQuotientAddGroup.mk'"],
 ["checkType", "MeasurePreservingQuotientGroup.mk'"],
 ["checkType", "MeasureTheory.LpToLpRestrictCLM_coeFn"],
 ["checkType", "MeasureTheory.aeStronglyMeasurable'_condexpL2"],
 ["checkType", "MeasureTheory.ae_ae_add_linearMap_mem_iff"],
 ["checkType", "MeasureTheory.ae_comp_linearMap_mem_iff"],
 ["checkType", "MeasureTheory.ae_eq_zero_of_forall_dual"],
 ["checkType", "MeasureTheory.ae_eq_zero_of_forall_dual_of_isSeparable"],
 ["checkType", "MeasureTheory.ae_mem_of_ae_add_linearMap_mem"],
 ["checkType", "MeasureTheory.aestronglyMeasurable'_condexpInd"],
 ["checkType", "MeasureTheory.aestronglyMeasurable'_condexpL1Clm"],
 ["checkType", "MeasureTheory.condexpIndSMul_ae_eq_smul"],
 ["checkType", "MeasureTheory.condexpInd_ae_eq_condexpIndSMul"],
 ["checkType", "MeasureTheory.condexpInd_disjoint_union_apply"],
 ["checkType", "MeasureTheory.condexpInd_nonneg"],
 ["checkType", "MeasureTheory.condexpInd_of_measurable"],
 ["checkType", "MeasureTheory.condexpInd_smul'"],
 ["checkType", "MeasureTheory.condexpL1Clm_indicatorConst"],
 ["checkType", "MeasureTheory.condexpL1Clm_indicatorConstLp"],
 ["checkType", "MeasureTheory.condexpL1Clm_lpMeas"],
 ["checkType", "MeasureTheory.condexpL1Clm_of_aestronglyMeasurable'"],
 ["checkType", "MeasureTheory.condexpL1Clm_smul"],
 ["checkType", "MeasureTheory.condexpL1_eq"],
 ["checkType", "MeasureTheory.condexpL2_ae_eq_zero_of_ae_eq_zero"],
 ["checkType", "MeasureTheory.condexpL2_comp_continuousLinearMap"],
 ["checkType", "MeasureTheory.condexpL2_const_inner"],
 ["checkType", "MeasureTheory.condexpL2_indicator_ae_eq_smul"],
 ["checkType", "MeasureTheory.condexpL2_indicator_eq_toSpanSingleton_comp"],
 ["checkType", "MeasureTheory.condexpL2_indicator_nonneg"],
 ["checkType", "MeasureTheory.condexpL2_indicator_of_measurable"],
 ["checkType", "MeasureTheory.condexp_ae_eq_condexpL1Clm"],
 ["checkType", "MeasureTheory.ext_of_forall_lintegral_eq_of_IsFiniteMeasure"],
 ["checkType", "MeasureTheory.hausdorffMeasure_homothety_image"],
 ["checkType", "MeasureTheory.hausdorffMeasure_homothety_preimage"],
 ["checkType", "MeasureTheory.hausdorffMeasure_lineMap_image"],
 ["checkType", "MeasureTheory.hausdorffMeasure_measurePreserving_funUnique"],
 ["checkType", "MeasureTheory.hausdorffMeasure_measurePreserving_piFinTwo"],
 ["checkType", "MeasureTheory.indicatorConstLp_univ"],
 ["checkType", "MeasureTheory.inducedOuterMeasure_preimage"],
 ["checkType", "MeasureTheory.inner_condexpL2_eq_inner_fun"],
 ["checkType", "MeasureTheory.inner_condexpL2_left_eq_right"],
 ["checkType", "MeasureTheory.integrableOn_condexpL2_of_measure_ne_top"],
 ["checkType", "MeasureTheory.integrableOn_congr_fun"],
 ["checkType", "MeasureTheory.integrableOn_iUnion_of_summable_norm_restrict"],
 ["checkType", "MeasureTheory.integrableOn_map_equiv"],
 ["checkType", "MeasureTheory.integrable_condexpL2_indicator"],
 ["checkType", "MeasureTheory.integrable_condexpL2_of_isFiniteMeasure"],
 ["checkType", "MeasureTheory.integrable_map_equiv"],
 ["checkType", "MeasureTheory.integrable_of_summable_norm_restrict"],
 ["checkType",
  "MeasureTheory.integral2_divergence_prod_of_hasFDerivWithinAt_off_countable"],
 ["checkType", "MeasureTheory.integral_condexpL2_eq"],
 ["checkType", "MeasureTheory.integral_condexpL2_eq_of_fin_meas_real"],
 ["checkType",
  "MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable"],
 ["checkType",
  "MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable'"],
 ["checkType",
  "MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_aux₁"],
 ["checkType",
  "MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_aux₂"],
 ["checkType",
  "MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable_of_equiv"],
 ["checkType",
  "MeasureTheory.integral_divergence_prod_Icc_of_hasFDerivWithinAt_off_countable_of_le"],
 ["checkType",
  "MeasureTheory.integral_le_liminf_integral_of_forall_isOpen_measure_le_liminf_measure"],
 ["checkType", "MeasureTheory.integral_map_equiv"],
 ["checkType", "MeasureTheory.isAddLeftInvariant_map"],
 ["checkType", "MeasureTheory.isMulLeftInvariant_map"],
 ["checkType", "MeasureTheory.lintegral_map_equiv"],
 ["checkType", "MeasureTheory.lintegral_nnnorm_condexpL2_indicator_le"],
 ["checkType", "MeasureTheory.lintegral_nnnorm_condexpL2_indicator_le_real"],
 ["checkType", "MeasureTheory.lintegral_nnnorm_condexpL2_le"],
 ["checkType", "MeasureTheory.locallyIntegrable_map_homeomorph"],
 ["checkType", "MeasureTheory.lpMeasToLpTrimLie_symm_indicator"],
 ["checkType", "MeasureTheory.lpMeasToLpTrimLie_symm_toLp"],
 ["checkType", "MeasureTheory.measurePreserving_finTwoArrow"],
 ["checkType", "MeasureTheory.measurePreserving_finTwoArrow_vec"],
 ["checkType", "MeasureTheory.measurePreserving_funUnique"],
 ["checkType", "MeasureTheory.measurePreserving_piCongrLeft"],
 ["checkType", "MeasureTheory.measurePreserving_piEquivPiSubtypeProd"],
 ["checkType", "MeasureTheory.measurePreserving_piFinSuccAbove"],
 ["checkType", "MeasureTheory.measurePreserving_piFinTwo"],
 ["checkType", "MeasureTheory.measurePreserving_piFinsetUnion"],
 ["checkType", "MeasureTheory.measurePreserving_piUnique"],
 ["checkType", "MeasureTheory.measurePreserving_pi_empty"],
 ["checkType", "MeasureTheory.measurePreserving_sumPiEquivProdPi"],
 ["checkType", "MeasureTheory.measurePreserving_sumPiEquivProdPi_symm"],
 ["checkType",
  "MeasureTheory.measure_isClosed_eq_of_forall_lintegral_eq_of_isFiniteMeasure"],
 ["checkType", "MeasureTheory.measure_of_cont_bdd_of_tendsto_filter_indicator"],
 ["checkType", "MeasureTheory.measure_of_cont_bdd_of_tendsto_indicator"],
 ["checkType", "MeasureTheory.memℒp_re_im_iff"],
 ["checkType", "MeasureTheory.norm_condexpInd_apply_le"],
 ["checkType", "MeasureTheory.norm_condexpL2_coe_le"],
 ["checkType", "MeasureTheory.norm_condexpL2_le"],
 ["checkType", "MeasureTheory.norm_condexpL2_le_one"],
 ["checkType", "MeasureTheory.setToFun_const"],
 ["checkType", "MeasureTheory.setToFun_eq"],
 ["checkType", "MeasureTheory.setToFun_indicator_const"],
 ["checkType", "MeasureTheory.setToFun_mono"],
 ["checkType", "MeasureTheory.setToFun_mono_left"],
 ["checkType", "MeasureTheory.setToFun_mono_left'"],
 ["checkType", "MeasureTheory.setToFun_nonneg"],
 ["checkType", "MeasureTheory.setToFun_smul"],
 ["checkType", "MeasureTheory.set_integral_condexpInd"],
 ["checkType", "MeasureTheory.set_integral_condexpL1Clm"],
 ["checkType", "MeasureTheory.set_integral_condexpL1Clm_of_measure_ne_top"],
 ["checkType", "MeasureTheory.set_integral_condexpL2_indicator"],
 ["checkType", "MeasureTheory.set_integral_congr"],
 ["checkType", "MeasureTheory.set_integral_congr₀"],
 ["checkType", "MeasureTheory.set_integral_map_equiv"],
 ["checkType", "MeasureTheory.set_integral_prod"],
 ["checkType", "MeasureTheory.set_integral_prod_mul"],
 ["checkType", "MeasureTheory.set_lintegral_nnnorm_condexpL2_indicator_le"],
 ["checkType", "MeasureTheory.snorm_condexpL2_le"],
 ["checkType",
  "MeasureTheory.tendsto_integral_approxOn_of_measurable_of_range_subset"],
 ["checkType", "MeasureTheory.tendsto_integral_norm_approxOn_sub"],
 ["checkType",
  "MeasureTheory.tendsto_integral_of_forall_integral_le_liminf_integral"],
 ["checkType", "MeasureTheory.tendsto_lintegral_nn_filter_of_le_const"],
 ["checkType",
  "MeasureTheory.tendsto_lintegral_thickenedIndicator_of_isClosed"],
 ["checkType",
  "MeasureTheory.tendsto_setToFun_approxOn_of_measurable_of_range_subset"],
 ["checkType", "MeasureTheory.volume_measurePreserving_piCongrLeft"],
 ["checkType", "MeasureTheory.volume_measurePreserving_sumPiEquivProdPi"],
 ["checkType", "MeasureTheory.volume_measurePreserving_sumPiEquivProdPi_symm"],
 ["checkType", "MeasureTheory.volume_preserving_finTwoArrow"],
 ["checkType", "MeasureTheory.volume_preserving_funUnique"],
 ["checkType", "MeasureTheory.volume_preserving_piEquivPiSubtypeProd"],
 ["checkType", "MeasureTheory.volume_preserving_piFinSuccAbove"],
 ["checkType", "MeasureTheory.volume_preserving_piFinTwo"],
 ["checkType", "MeasureTheory.volume_preserving_piFinsetUnion"],
 ["checkType", "MeasureTheory.volume_preserving_piUnique"],
 ["checkType", "MeasureTheory.volume_preserving_pi_empty"],
 ["checkType", "MeasureTheory.weightedSMul_apply"],
 ["checkType", "MeasureTheory.weightedSMul_nonneg"],
 ["checkType", "MeasureTheory.weightedSMul_smul"],
 ["checkType", "MeasureTheory.withDensitySMulLI_apply"],
 ["checkType", "MellinConvergent.div_const"],
 ["checkType", "Metric.exists_continuous_nNReal_forall_closedBall_subset"],
 ["checkType", "Metric.exists_continuous_real_forall_closedBall_subset"],
 ["checkType", "Metric.exists_smooth_forall_closedBall_subset"],
 ["checkType", "ModP.charP"],
 ["checkType", "ModP.instNontrivialModP"],
 ["checkType", "ModP.preVal_mk"],
 ["checkType", "ModP.v_p_lt_preVal"],
 ["checkType", "ModP.v_p_lt_val"],
 ["checkType", "ModelWithCorners.coe_extChartAt_transDiffeomorph"],
 ["checkType", "ModelWithCorners.coe_extChartAt_transDiffeomorph_symm"],
 ["checkType", "ModelWithCorners.coe_transDiffeomorph"],
 ["checkType", "ModelWithCorners.coe_transDiffeomorph_symm"],
 ["checkType", "ModelWithCorners.extChartAt_transDiffeomorph_target"],
 ["checkType", "ModelWithCorners.range_prod"],
 ["checkType", "ModelWithCorners.rightInvOn"],
 ["checkType", "ModelWithCorners.toHomeomorph_apply"],
 ["checkType", "ModelWithCorners.toHomeomorph_symm_apply"],
 ["checkType", "ModelWithCorners.transDiffeomorph_range"],
 ["checkType", "ModularForm.add_apply"],
 ["checkType", "ModularForm.bdd_at_infty'"],
 ["checkType", "ModularForm.coeHom_apply"],
 ["checkType", "ModularForm.coe_add"],
 ["checkType", "ModularForm.coe_intCast"],
 ["checkType", "ModularForm.coe_natCast"],
 ["checkType", "ModularForm.coe_neg"],
 ["checkType", "ModularForm.coe_smul"],
 ["checkType", "ModularForm.coe_sub"],
 ["checkType", "ModularForm.coe_zero"],
 ["checkType", "ModularForm.const_toFun"],
 ["checkType", "ModularForm.copy"],
 ["checkType", "ModularForm.ext"],
 ["checkType", "ModularForm.holo'"],
 ["checkType", "ModularForm.mk"],
 ["checkType", "ModularForm.mul_coe"],
 ["checkType", "ModularForm.neg_apply"],
 ["checkType", "ModularForm.one_coe_eq_one"],
 ["checkType", "ModularForm.rec"],
 ["checkType", "ModularForm.smul_apply"],
 ["checkType", "ModularForm.sub_apply"],
 ["checkType", "ModularForm.toFun_eq_coe"],
 ["checkType", "ModularForm.toSlashInvariantForm_coe"],
 ["checkType", "ModularForm.zero_apply"],
 ["checkType", "ModularFormClass.bdd_at_infty"],
 ["checkType", "ModularFormClass.holo"],
 ["checkType", "ModularFormClass.mk"],
 ["checkType", "ModularFormClass.rec"],
 ["checkType", "ModularGroup.im_lt_im_S_smul"],
 ["checkType", "ModularGroup.lcRow0Extend_apply"],
 ["checkType", "ModularGroup.lcRow0Extend_symm_apply"],
 ["checkType", "ModularGroup.lcRow0_apply"],
 ["checkType", "ModularGroup.normSq_S_smul_lt_one"],
 ["checkType", "ModularGroup.one_lt_normSq_T_zpow_smul"],
 ["checkType", "ModularGroup.smul_eq_lcRow0_add"],
 ["checkType", "ModularGroup.tendsto_lcRow0"],
 ["checkType", "ModularGroup.tendsto_normSq_coprime_pair"],
 ["checkType", "MonoidHom.isOpenMap_of_sigmaCompact"],
 ["checkType", "MonoidHomClass.antilipschitz_of_bound"],
 ["checkType", "MonoidHomClass.continuous_of_bound"],
 ["checkType", "MonoidHomClass.isometry_iff_norm"],
 ["checkType", "MonoidHomClass.isometry_of_norm"],
 ["checkType", "MonoidHomClass.lipschitz_of_bound"],
 ["checkType", "MonoidHomClass.lipschitz_of_bound_nnnorm"],
 ["checkType", "MonoidHomClass.uniformContinuous_of_bound"],
 ["checkType", "MulEquiv.isHaarMeasure_map"],
 ["checkType", "MulRingSeminorm.apply_one"],
 ["checkType", "MulRingSeminorm.ext"],
 ["checkType", "MulRingSeminorm.toFun_eq_coe"],
 ["checkType", "MulSalemSpencer.image"],
 ["checkType", "MulSalemSpencer.le_mulRothNumber"],
 ["checkType", "MulSalemSpencer.of_image"],
 ["checkType", "MulSalemSpencer.prod"],
 ["checkType", "MulSalemSpencer.roth_number_eq"],
 ["checkType", "MultilinearMap.bound_of_shell"],
 ["checkType", "MultilinearMap.coe_mkContinuous"],
 ["checkType", "MultilinearMap.continuous_of_bound"],
 ["checkType", "MultilinearMap.exists_bound_of_continuous"],
 ["checkType", "MultilinearMap.mkContinuous"],
 ["checkType", "MultilinearMap.mkContinuousLinear"],
 ["checkType", "MultilinearMap.mkContinuousLinear_norm_le"],
 ["checkType", "MultilinearMap.mkContinuousLinear_norm_le'"],
 ["checkType", "MultilinearMap.mkContinuousMultilinear"],
 ["checkType", "MultilinearMap.mkContinuousMultilinear_apply"],
 ["checkType", "MultilinearMap.mkContinuousMultilinear_norm_le"],
 ["checkType", "MultilinearMap.mkContinuousMultilinear_norm_le'"],
 ["checkType", "MultilinearMap.mkContinuous_norm_le"],
 ["checkType", "MultilinearMap.mkContinuous_norm_le'"],
 ["checkType", "MultilinearMap.norm_image_sub_le_of_bound"],
 ["checkType", "MultilinearMap.norm_image_sub_le_of_bound'"],
 ["checkType", "MultilinearMap.restr_norm_le"],
 ["checkType", "NNReal.continuous_sqrt"],
 ["checkType", "NNReal.le_sqrt_iff"],
 ["checkType", "NNReal.mul_self_sqrt"],
 ["checkType", "NNReal.orderIsoRpow_apply"],
 ["checkType", "NNReal.rpowMonoidHom_apply"],
 ["checkType", "NNReal.sq_sqrt"],
 ["checkType", "NNReal.sqrt_div"],
 ["checkType", "NNReal.sqrt_eq_iff_sq_eq"],
 ["checkType", "NNReal.sqrt_eq_rpow"],
 ["checkType", "NNReal.sqrt_eq_zero"],
 ["checkType", "NNReal.sqrt_inv"],
 ["checkType", "NNReal.sqrt_le_iff"],
 ["checkType", "NNReal.sqrt_le_sqrt_iff"],
 ["checkType", "NNReal.sqrt_lt_sqrt_iff"],
 ["checkType", "NNReal.sqrt_mul"],
 ["checkType", "NNReal.sqrt_mul_self"],
 ["checkType", "NNReal.sqrt_one"],
 ["checkType", "NNReal.sqrt_pos"],
 ["checkType", "NNReal.sqrt_pos_of_pos"],
 ["checkType", "NNReal.sqrt_sq"],
 ["checkType", "NNReal.sqrt_zero"],
 ["checkType", "NNReal.strictConcaveOn_sqrt"],
 ["checkType", "NNReal.tendsto_algebraMap_inverse_atTop_nhds_0_nat"],
 ["checkType", "NonUnitalAlgHom.coe_Lmul"],
 ["checkType", "NonUnitalNormedCommRing.induced"],
 ["checkType", "NonUnitalNormedRing.induced"],
 ["checkType", "NormedAddCommGroup.denseRange_toCompl"],
 ["checkType", "NormedAddCommGroup.induced"],
 ["checkType", "NormedAddCommGroup.norm_toCompl"],
 ["checkType", "NormedAddCommGroup.toCompl_apply"],
 ["checkType", "NormedAddGroup.induced"],
 ["checkType", "NormedAddGroupHom.add_apply"],
 ["checkType", "NormedAddGroupHom.antilipschitz_of_norm_ge"],
 ["checkType", "NormedAddGroupHom.bound"],
 ["checkType", "NormedAddGroupHom.bounds_bddBelow"],
 ["checkType", "NormedAddGroupHom.bounds_nonempty"],
 ["checkType", "NormedAddGroupHom.coeAddHom_apply"],
 ["checkType", "NormedAddGroupHom.coe_add"],
 ["checkType", "NormedAddGroupHom.coe_comp"],
 ["checkType", "NormedAddGroupHom.coe_id"],
 ["checkType", "NormedAddGroupHom.coe_inj"],
 ["checkType", "NormedAddGroupHom.coe_inj_iff"],
 ["checkType", "NormedAddGroupHom.coe_ker"],
 ["checkType", "NormedAddGroupHom.coe_mk"],
 ["checkType", "NormedAddGroupHom.coe_mkNormedAddGroupHom"],
 ["checkType", "NormedAddGroupHom.coe_mkNormedAddGroupHom'"],
 ["checkType", "NormedAddGroupHom.coe_neg"],
 ["checkType", "NormedAddGroupHom.coe_nsmul"],
 ["checkType", "NormedAddGroupHom.coe_smul"],
 ["checkType", "NormedAddGroupHom.coe_sub"],
 ["checkType", "NormedAddGroupHom.coe_sum"],
 ["checkType", "NormedAddGroupHom.coe_toAddMonoidHom"],
 ["checkType", "NormedAddGroupHom.coe_zero"],
 ["checkType", "NormedAddGroupHom.coe_zsmul"],
 ["checkType", "NormedAddGroupHom.comp_apply"],
 ["checkType", "NormedAddGroupHom.completion_coe"],
 ["checkType", "NormedAddGroupHom.completion_coe'"],
 ["checkType", "NormedAddGroupHom.completion_coe_to_fun"],
 ["checkType", "NormedAddGroupHom.completion_def"],
 ["checkType", "NormedAddGroupHom.continuous"],
 ["checkType", "NormedAddGroupHom.ext"],
 ["checkType", "NormedAddGroupHom.ext_iff"],
 ["checkType", "NormedAddGroupHom.extension_coe"],
 ["checkType", "NormedAddGroupHom.extension_coe_to_fun"],
 ["checkType", "NormedAddGroupHom.extension_def"],
 ["checkType", "NormedAddGroupHom.extension_unique"],
 ["checkType", "NormedAddGroupHom.id_apply"],
 ["checkType", "NormedAddGroupHom.incl_apply"],
 ["checkType", "NormedAddGroupHom.isometry_comp"],
 ["checkType", "NormedAddGroupHom.isometry_id"],
 ["checkType", "NormedAddGroupHom.le_of_opNorm_le"],
 ["checkType", "NormedAddGroupHom.le_opNorm"],
 ["checkType", "NormedAddGroupHom.le_opNorm_of_le"],
 ["checkType", "NormedAddGroupHom.lift"],
 ["checkType", "NormedAddGroupHom.lift_mk"],
 ["checkType", "NormedAddGroupHom.lift_normNoninc"],
 ["checkType", "NormedAddGroupHom.lift_norm_le"],
 ["checkType", "NormedAddGroupHom.lift_unique"],
 ["checkType", "NormedAddGroupHom.lipschitz"],
 ["checkType", "NormedAddGroupHom.mem_ker"],
 ["checkType", "NormedAddGroupHom.mem_range"],
 ["checkType", "NormedAddGroupHom.mem_range_self"],
 ["checkType", "NormedAddGroupHom.mkNormedAddGroupHom_norm_le"],
 ["checkType", "NormedAddGroupHom.mkNormedAddGroupHom_norm_le'"],
 ["checkType", "NormedAddGroupHom.neg_apply"],
 ["checkType", "NormedAddGroupHom.normNoninc_of_isometry"],
 ["checkType", "NormedAddGroupHom.norm_def"],
 ["checkType", "NormedAddGroupHom.norm_eq_of_isometry"],
 ["checkType", "NormedAddGroupHom.norm_incl"],
 ["checkType", "NormedAddGroupHom.norm_lift_le"],
 ["checkType", "NormedAddGroupHom.nsmul_apply"],
 ["checkType", "NormedAddGroupHom.ofLipschitz"],
 ["checkType", "NormedAddGroupHom.ofLipschitz_norm_le"],
 ["checkType", "NormedAddGroupHom.opNorm_eq_of_bounds"],
 ["checkType", "NormedAddGroupHom.opNorm_le_bound"],
 ["checkType", "NormedAddGroupHom.opNorm_le_of_lipschitz"],
 ["checkType", "NormedAddGroupHom.ratio_le_opNorm"],
 ["checkType", "NormedAddGroupHom.smul_apply"],
 ["checkType", "NormedAddGroupHom.sub_apply"],
 ["checkType", "NormedAddGroupHom.sum_apply"],
 ["checkType", "NormedAddGroupHom.toFun_eq_coe"],
 ["checkType", "NormedAddGroupHom.uniformContinuous"],
 ["checkType", "NormedAddGroupHom.zero_apply"],
 ["checkType", "NormedAddGroupHom.zsmul_apply"],
 ["checkType", "NormedCommGroup.induced"],
 ["checkType", "NormedCommRing.induced"],
 ["checkType", "NormedDivisionRing.induced"],
 ["checkType", "NormedField.induced"],
 ["checkType", "NormedGroup.induced"],
 ["checkType", "NormedRing.algEquivComplexOfComplete_apply"],
 ["checkType", "NormedRing.algEquivComplexOfComplete_symm_apply"],
 ["checkType", "NormedRing.induced"],
 ["checkType", "NormedSpace.algebraMap_exp_comm"],
 ["checkType", "NormedSpace.algebraMap_exp_comm_of_mem_ball"],
 ["checkType", "NormedSpace.double_dual_bound"],
 ["checkType", "NormedSpace.dualPairing_apply"],
 ["checkType", "NormedSpace.dual_def"],
 ["checkType", "NormedSpace.eq_iff_forall_dual_eq"],
 ["checkType", "NormedSpace.eq_zero_iff_forall_dual_eq_zero"],
 ["checkType", "NormedSpace.eq_zero_of_forall_dual_eq_zero"],
 ["checkType", "NormedSpace.equicontinuous_TFAE"],
 ["checkType", "NormedSpace.expSeries_apply_eq"],
 ["checkType", "NormedSpace.expSeries_apply_eq'"],
 ["checkType", "NormedSpace.expSeries_apply_eq_div"],
 ["checkType", "NormedSpace.expSeries_apply_eq_div'"],
 ["checkType", "NormedSpace.expSeries_apply_zero"],
 ["checkType", "NormedSpace.expSeries_eq_expSeries"],
 ["checkType", "NormedSpace.expSeries_hasSum_exp"],
 ["checkType", "NormedSpace.expSeries_hasSum_exp_of_mem_ball"],
 ["checkType", "NormedSpace.expSeries_summable"],
 ["checkType", "NormedSpace.expSeries_summable_of_mem_ball"],
 ["checkType", "NormedSpace.map_exp"],
 ["checkType", "NormedSpace.map_exp_of_mem_ball"],
 ["checkType", "NormedSpace.mem_polar_iff"],
 ["checkType", "NormedSpace.norm_expSeries_summable"],
 ["checkType", "NormedSpace.norm_expSeries_summable_of_mem_ball"],
 ["checkType", "NormedSpace.norm_le_dual_bound"],
 ["checkType", "NormedSpace.smul_mem_polar"],
 ["checkType", "NumberField.canonicalEmbedding_injective"],
 ["checkType", "NumberField.coe_discr"],
 ["checkType", "NumberField.discr_eq_discr"],
 ["checkType",
  "NumberField.exists_ne_zero_mem_ringOfIntegers_of_norm_le_mul_sqrt_discr"],
 ["checkType", "NumberField.isUnit_iff_norm"],
 ["checkType", "NumberField.mixedEmbedding_injective"],
 ["checkType", "NumberField.place_apply"],
 ["checkType", "OneHomClass.bound_of_antilipschitz"],
 ["checkType", "OrderIso.essInf_apply"],
 ["checkType", "OrderIso.essSup_apply"],
 ["checkType", "Orientation.abs_areaForm_le"],
 ["checkType", "Orientation.abs_areaForm_of_orthogonal"],
 ["checkType", "Orientation.abs_kahler"],
 ["checkType", "Orientation.abs_volumeForm_apply_le"],
 ["checkType", "Orientation.abs_volumeForm_apply_of_orthonormal"],
 ["checkType", "Orientation.abs_volumeForm_apply_of_pairwise_orthogonal"],
 ["checkType", "Orientation.areaForm'_apply"],
 ["checkType", "Orientation.areaForm_apply_self"],
 ["checkType", "Orientation.areaForm_comp_linearIsometryEquiv"],
 ["checkType", "Orientation.areaForm_comp_rightAngleRotation"],
 ["checkType", "Orientation.areaForm_def"],
 ["checkType", "Orientation.areaForm_le"],
 ["checkType", "Orientation.areaForm_map"],
 ["checkType", "Orientation.areaForm_map_complex"],
 ["checkType", "Orientation.areaForm_rightAngleRotation_left"],
 ["checkType", "Orientation.areaForm_rightAngleRotation_right"],
 ["checkType", "Orientation.areaForm_swap"],
 ["checkType", "Orientation.areaForm_to_volumeForm"],
 ["checkType", "Orientation.coe_basisRightAngleRotation"],
 ["checkType", "Orientation.det_rotation"],
 ["checkType", "Orientation.eq_rotation_self_iff"],
 ["checkType", "Orientation.eq_rotation_self_iff_angle_eq_zero"],
 ["checkType", "Orientation.eq_zero_or_eq_zero_of_kahler_eq_zero"],
 ["checkType", "Orientation.exists_linearIsometryEquiv_eq_of_det_pos"],
 ["checkType", "Orientation.inner_comp_rightAngleRotation"],
 ["checkType",
  "Orientation.inner_eq_zero_iff_eq_zero_or_eq_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.inner_mul_areaForm_sub"],
 ["checkType", "Orientation.inner_mul_areaForm_sub'"],
 ["checkType", "Orientation.inner_mul_inner_add_areaForm_mul_areaForm"],
 ["checkType", "Orientation.inner_mul_inner_add_areaForm_mul_areaForm'"],
 ["checkType", "Orientation.inner_rightAngleRotationAux₁_left"],
 ["checkType", "Orientation.inner_rightAngleRotationAux₁_right"],
 ["checkType", "Orientation.inner_rightAngleRotation_left"],
 ["checkType", "Orientation.inner_rightAngleRotation_right"],
 ["checkType", "Orientation.inner_rightAngleRotation_self"],
 ["checkType", "Orientation.inner_rightAngleRotation_swap"],
 ["checkType", "Orientation.inner_rightAngleRotation_swap'"],
 ["checkType", "Orientation.inner_rotation_pi_div_two_left"],
 ["checkType", "Orientation.inner_rotation_pi_div_two_left_smul"],
 ["checkType", "Orientation.inner_rotation_pi_div_two_right"],
 ["checkType", "Orientation.inner_rotation_pi_div_two_right_smul"],
 ["checkType", "Orientation.inner_smul_rotation_pi_div_two_left"],
 ["checkType", "Orientation.inner_smul_rotation_pi_div_two_right"],
 ["checkType", "Orientation.inner_smul_rotation_pi_div_two_smul_left"],
 ["checkType", "Orientation.inner_smul_rotation_pi_div_two_smul_right"],
 ["checkType", "Orientation.inner_sq_add_areaForm_sq"],
 ["checkType", "Orientation.kahler_apply_apply"],
 ["checkType", "Orientation.kahler_apply_self"],
 ["checkType", "Orientation.kahler_comp_linearIsometryEquiv"],
 ["checkType", "Orientation.kahler_comp_rightAngleRotation"],
 ["checkType", "Orientation.kahler_comp_rightAngleRotation'"],
 ["checkType", "Orientation.kahler_eq_zero_iff"],
 ["checkType", "Orientation.kahler_map"],
 ["checkType", "Orientation.kahler_map_complex"],
 ["checkType", "Orientation.kahler_mul"],
 ["checkType", "Orientation.kahler_ne_zero"],
 ["checkType", "Orientation.kahler_ne_zero_iff"],
 ["checkType", "Orientation.kahler_neg_orientation"],
 ["checkType", "Orientation.kahler_rightAngleRotation_left"],
 ["checkType", "Orientation.kahler_rightAngleRotation_right"],
 ["checkType", "Orientation.kahler_rotation_left"],
 ["checkType", "Orientation.kahler_rotation_left'"],
 ["checkType", "Orientation.kahler_rotation_right"],
 ["checkType", "Orientation.kahler_swap"],
 ["checkType", "Orientation.linearEquiv_det_rotation"],
 ["checkType", "Orientation.linearIsometryEquiv_comp_rightAngleRotation"],
 ["checkType", "Orientation.linearIsometryEquiv_comp_rightAngleRotation'"],
 ["checkType", "Orientation.measure_orthonormalBasis"],
 ["checkType", "Orientation.neg_rotation"],
 ["checkType", "Orientation.neg_rotation_neg_pi_div_two"],
 ["checkType", "Orientation.neg_rotation_pi_div_two"],
 ["checkType", "Orientation.nonneg_inner_and_areaForm_eq_zero_iff_sameRay"],
 ["checkType", "Orientation.normSq_kahler"],
 ["checkType", "Orientation.norm_kahler"],
 ["checkType", "Orientation.oangle_add_left_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.oangle_add_right_smul_rotation_pi_div_two"],
 ["checkType",
  "Orientation.oangle_eq_iff_eq_norm_div_norm_smul_rotation_of_ne_zero"],
 ["checkType",
  "Orientation.oangle_eq_iff_eq_norm_div_norm_smul_rotation_or_eq_zero"],
 ["checkType", "Orientation.oangle_eq_iff_eq_pos_smul_rotation_of_ne_zero"],
 ["checkType", "Orientation.oangle_eq_iff_eq_pos_smul_rotation_or_eq_zero"],
 ["checkType", "Orientation.oangle_map"],
 ["checkType", "Orientation.oangle_map_complex"],
 ["checkType", "Orientation.oangle_rotation"],
 ["checkType", "Orientation.oangle_rotation_left"],
 ["checkType", "Orientation.oangle_rotation_oangle_left"],
 ["checkType", "Orientation.oangle_rotation_oangle_right"],
 ["checkType", "Orientation.oangle_rotation_right"],
 ["checkType", "Orientation.oangle_rotation_self_left"],
 ["checkType", "Orientation.oangle_rotation_self_right"],
 ["checkType", "Orientation.oangle_sign_smul_add_smul_left"],
 ["checkType", "Orientation.oangle_sign_smul_add_smul_right"],
 ["checkType", "Orientation.oangle_sign_smul_add_smul_smul_add_smul"],
 ["checkType", "Orientation.oangle_sign_smul_left"],
 ["checkType", "Orientation.oangle_sign_smul_right"],
 ["checkType", "Orientation.oangle_sub_left_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.oangle_sub_right_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.rightAngleRotationAux₁_rightAngleRotationAux₁"],
 ["checkType", "Orientation.rightAngleRotation_map"],
 ["checkType", "Orientation.rightAngleRotation_map'"],
 ["checkType", "Orientation.rightAngleRotation_map_complex"],
 ["checkType", "Orientation.rightAngleRotation_neg_orientation"],
 ["checkType", "Orientation.rightAngleRotation_rightAngleRotation"],
 ["checkType", "Orientation.rotationAux_apply"],
 ["checkType", "Orientation.rotation_apply"],
 ["checkType", "Orientation.rotation_eq_matrix_toLin"],
 ["checkType", "Orientation.rotation_eq_self_iff"],
 ["checkType", "Orientation.rotation_eq_self_iff_angle_eq_zero"],
 ["checkType", "Orientation.rotation_map"],
 ["checkType", "Orientation.rotation_map_complex"],
 ["checkType", "Orientation.rotation_oangle_eq_iff_norm_eq"],
 ["checkType", "Orientation.rotation_pi_apply"],
 ["checkType", "Orientation.rotation_rotation"],
 ["checkType", "Orientation.rotation_symm_apply"],
 ["checkType", "Orientation.tan_oangle_add_left_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.tan_oangle_add_right_smul_rotation_pi_div_two"],
 ["checkType", "Orientation.volumeForm_apply_le"],
 ["checkType", "Orientation.volumeForm_comp_linearIsometryEquiv"],
 ["checkType", "Orientation.volumeForm_map"],
 ["checkType", "Orientation.volumeForm_robust'"],
 ["checkType", "Orientation.volumeForm_zero_neg"],
 ["checkType", "Orientation.volumeForm_zero_pos"],
 ["checkType", "OrthogonalFamily.decomposition"],
 ["checkType", "OrthogonalFamily.eq_ite"],
 ["checkType", "OrthogonalFamily.hasSum_linearIsometry"],
 ["checkType", "OrthogonalFamily.independent"],
 ["checkType", "OrthogonalFamily.inner_right_dfinsupp"],
 ["checkType", "OrthogonalFamily.inner_right_fintype"],
 ["checkType", "OrthogonalFamily.inner_sum"],
 ["checkType", "OrthogonalFamily.isInternal_iff"],
 ["checkType", "OrthogonalFamily.isInternal_iff_of_isComplete"],
 ["checkType", "OrthogonalFamily.isOrtho"],
 ["checkType", "OrthogonalFamily.linearIsometry_apply"],
 ["checkType", "OrthogonalFamily.linearIsometry_apply_dfinsupp_sum_single"],
 ["checkType", "OrthogonalFamily.linearIsometry_apply_single"],
 ["checkType", "OrthogonalFamily.norm_sq_diff_sum"],
 ["checkType", "OrthogonalFamily.norm_sum"],
 ["checkType", "OrthogonalFamily.of_pairwise"],
 ["checkType", "OrthogonalFamily.orthonormal_sigma_orthonormal"],
 ["checkType", "OrthogonalFamily.pairwise"],
 ["checkType", "OrthogonalFamily.projection_directSum_coeAddHom"],
 ["checkType", "OrthogonalFamily.sum_projection_of_mem_iSup"],
 ["checkType", "OrthogonalFamily.summable_iff_norm_sq_summable"],
 ["checkType", "OrthogonalFamily.summable_of_lp"],
 ["checkType", "Orthonormal.comp_linearIsometry"],
 ["checkType", "Orthonormal.comp_linearIsometryEquiv"],
 ["checkType", "Orthonormal.equiv"],
 ["checkType", "Orthonormal.equiv_apply"],
 ["checkType", "Orthonormal.equiv_refl"],
 ["checkType", "Orthonormal.equiv_symm"],
 ["checkType", "Orthonormal.equiv_toLinearEquiv"],
 ["checkType", "Orthonormal.equiv_trans"],
 ["checkType", "Orthonormal.exists_hilbertBasis_extension"],
 ["checkType", "Orthonormal.exists_orthonormalBasis_extension"],
 ["checkType", "Orthonormal.exists_orthonormalBasis_extension_of_card_eq"],
 ["checkType", "Orthonormal.inner_finsupp_eq_sum_left"],
 ["checkType", "Orthonormal.inner_finsupp_eq_sum_right"],
 ["checkType", "Orthonormal.inner_finsupp_eq_zero"],
 ["checkType", "Orthonormal.inner_left_finsupp"],
 ["checkType", "Orthonormal.inner_left_fintype"],
 ["checkType", "Orthonormal.inner_left_sum"],
 ["checkType", "Orthonormal.inner_right_finsupp"],
 ["checkType", "Orthonormal.inner_sum"],
 ["checkType", "Orthonormal.linearIsometryEquiv_symm_apply_single_one"],
 ["checkType", "Orthonormal.mapLinearIsometryEquiv"],
 ["checkType", "Orthonormal.map_equiv"],
 ["checkType", "OrthonormalBasis.abs_det_adjustToOrientation"],
 ["checkType", "OrthonormalBasis.adjustToOrientation_apply_eq_or_eq_neg"],
 ["checkType", "OrthonormalBasis.coe_mk"],
 ["checkType", "OrthonormalBasis.coe_ofRepr"],
 ["checkType", "OrthonormalBasis.coe_of_orthogonal_eq_bot_mk"],
 ["checkType", "OrthonormalBasis.coe_reindex"],
 ["checkType", "OrthonormalBasis.coe_toBasis"],
 ["checkType", "OrthonormalBasis.coe_toBasis_repr_apply"],
 ["checkType", "OrthonormalBasis.coe_toHilbertBasis"],
 ["checkType", "OrthonormalBasis.det_to_matrix_orthonormalBasis"],
 ["checkType",
  "OrthonormalBasis.det_to_matrix_orthonormalBasis_of_opposite_orientation"],
 ["checkType",
  "OrthonormalBasis.det_to_matrix_orthonormalBasis_of_same_orientation"],
 ["checkType", "OrthonormalBasis.det_to_matrix_orthonormalBasis_real"],
 ["checkType", "OrthonormalBasis.instFunLike"],
 ["checkType", "OrthonormalBasis.map_apply"],
 ["checkType", "OrthonormalBasis.measurePreserving_measurableEquiv"],
 ["checkType", "OrthonormalBasis.measurePreserving_repr"],
 ["checkType", "OrthonormalBasis.measurePreserving_repr_symm"],
 ["checkType", "OrthonormalBasis.orthogonalProjection_eq_sum"],
 ["checkType", "OrthonormalBasis.orthonormal"],
 ["checkType", "OrthonormalBasis.orthonormal_adjustToOrientation"],
 ["checkType", "OrthonormalBasis.reindex_apply"],
 ["checkType", "OrthonormalBasis.repr_apply_apply"],
 ["checkType", "OrthonormalBasis.repr_reindex"],
 ["checkType", "OrthonormalBasis.repr_self"],
 ["checkType", "OrthonormalBasis.repr_symm_single"],
 ["checkType", "OrthonormalBasis.span_apply"],
 ["checkType", "OrthonormalBasis.sum_inner_mul_inner"],
 ["checkType", "OrthonormalBasis.sum_repr"],
 ["checkType", "OrthonormalBasis.sum_repr_symm"],
 ["checkType", "OrthonormalBasis.toMatrix_orthonormalBasis_mem_orthogonal"],
 ["checkType", "OrthonormalBasis.toMatrix_orthonormalBasis_mem_unitary"],
 ["checkType", "OrthonormalBasis.volume_parallelepiped"],
 ["checkType", "PMF.apply_eq_one_iff"],
 ["checkType", "PMF.apply_eq_zero_iff"],
 ["checkType", "PMF.apply_lt_top"],
 ["checkType", "PMF.apply_ne_top"],
 ["checkType", "PMF.apply_pos_iff"],
 ["checkType", "PMF.bernoulli_apply"],
 ["checkType", "PMF.bindOnSupport_apply"],
 ["checkType", "PMF.bindOnSupport_eq_zero_iff"],
 ["checkType", "PMF.bind_apply"],
 ["checkType", "PMF.binomial_apply"],
 ["checkType", "PMF.binomial_apply_last"],
 ["checkType", "PMF.binomial_apply_self"],
 ["checkType", "PMF.binomial_apply_zero"],
 ["checkType", "PMF.coe_le_one"],
 ["checkType", "PMF.coe_ne_zero"],
 ["checkType", "PMF.ext"],
 ["checkType", "PMF.ext_iff"],
 ["checkType", "PMF.filter_apply"],
 ["checkType", "PMF.filter_apply_eq_zero_iff"],
 ["checkType", "PMF.filter_apply_eq_zero_of_not_mem"],
 ["checkType", "PMF.filter_apply_ne_zero_iff"],
 ["checkType", "PMF.funLike"],
 ["checkType", "PMF.hasSum_coe_one"],
 ["checkType", "PMF.integral_eq_sum"],
 ["checkType", "PMF.integral_eq_tsum"],
 ["checkType", "PMF.map_apply"],
 ["checkType", "PMF.mem_support_iff"],
 ["checkType", "PMF.normalize_apply"],
 ["checkType", "PMF.ofFinset_apply"],
 ["checkType", "PMF.ofFinset_apply_of_not_mem"],
 ["checkType", "PMF.ofFintype_apply"],
 ["checkType", "PMF.ofMultiset_apply"],
 ["checkType", "PMF.ofMultiset_apply_of_not_mem"],
 ["checkType", "PMF.pure_apply"],
 ["checkType", "PMF.pure_apply_of_ne"],
 ["checkType", "PMF.pure_apply_self"],
 ["checkType", "PMF.seq_apply"],
 ["checkType", "PMF.toMeasure_apply"],
 ["checkType", "PMF.toMeasure_apply_finset"],
 ["checkType", "PMF.toMeasure_apply_fintype"],
 ["checkType", "PMF.toMeasure_apply_of_finite"],
 ["checkType", "PMF.toMeasure_apply_singleton"],
 ["checkType", "PMF.toMeasure_bindOnSupport_apply"],
 ["checkType", "PMF.toMeasure_bind_apply"],
 ["checkType", "PMF.toMeasure_ofMultiset_apply"],
 ["checkType", "PMF.toOuterMeasure_apply"],
 ["checkType", "PMF.toOuterMeasure_apply_finset"],
 ["checkType", "PMF.toOuterMeasure_apply_fintype"],
 ["checkType", "PMF.toOuterMeasure_apply_singleton"],
 ["checkType", "PMF.toOuterMeasure_bindOnSupport_apply"],
 ["checkType", "PMF.toOuterMeasure_bind_apply"],
 ["checkType", "PMF.toOuterMeasure_ofMultiset_apply"],
 ["checkType", "PMF.tsum_coe"],
 ["checkType", "PMF.tsum_coe_indicator_ne_top"],
 ["checkType", "PMF.tsum_coe_ne_top"],
 ["checkType", "PMF.uniformOfFinset_apply"],
 ["checkType", "PMF.uniformOfFinset_apply_of_mem"],
 ["checkType", "PMF.uniformOfFinset_apply_of_not_mem"],
 ["checkType", "PMF.uniformOfFintype_apply"],
 ["checkType", "Padic.complete'"],
 ["checkType", "Padic.complete''"],
 ["checkType", "Padic.exi_rat_seq_conv"],
 ["checkType", "Padic.exi_rat_seq_conv_cauchy"],
 ["checkType", "Padic.limSeq"],
 ["checkType", "Padic.rat_dense'"],
 ["checkType", "PadicInt.algebraMap_apply"],
 ["checkType", "PadicInt.cast_toZModPow"],
 ["checkType", "PadicInt.ext_of_toZModPow"],
 ["checkType", "PadicInt.lift_self"],
 ["checkType", "PadicInt.lift_sub_val_mem_span"],
 ["checkType", "PadicInt.toZMod_spec"],
 ["checkType", "PartialHomeomorph.continuousOn_writtenInExtend_iff"],
 ["checkType", "PartialHomeomorph.continuousWithinAt_writtenInExtend_iff"],
 ["checkType", "PartialHomeomorph.mapsTo_extend"],
 ["checkType", "PartitionOfUnity.coe_finsupport"],
 ["checkType", "PartitionOfUnity.continuous_finsum_smul"],
 ["checkType", "PartitionOfUnity.continuous_smul"],
 ["checkType", "PartitionOfUnity.exists_finset_nhd"],
 ["checkType", "PartitionOfUnity.exists_finset_nhd'"],
 ["checkType", "PartitionOfUnity.exists_finset_nhd_support_subset"],
 ["checkType", "PartitionOfUnity.exists_pos"],
 ["checkType", "PartitionOfUnity.finsum_smul_mem_convex"],
 ["checkType",
  "PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["checkType", "PartitionOfUnity.le_one"],
 ["checkType", "PartitionOfUnity.locallyFinite"],
 ["checkType", "PartitionOfUnity.locallyFinite'"],
 ["checkType", "PartitionOfUnity.locallyFinite_tsupport"],
 ["checkType", "PartitionOfUnity.mem_finsupport"],
 ["checkType", "PartitionOfUnity.mk"],
 ["checkType", "PartitionOfUnity.nonneg"],
 ["checkType", "PartitionOfUnity.rec"],
 ["checkType", "PartitionOfUnity.sum_eq_one"],
 ["checkType", "PartitionOfUnity.sum_eq_one'"],
 ["checkType", "PartitionOfUnity.sum_finsupport"],
 ["checkType", "PartitionOfUnity.sum_finsupport'"],
 ["checkType", "PartitionOfUnity.sum_finsupport_smul_eq_finsum"],
 ["checkType", "PartitionOfUnity.sum_le_one"],
 ["checkType", "PartitionOfUnity.sum_le_one'"],
 ["checkType", "PartitionOfUnity.sum_nonneg"],
 ["checkType", "Path.add_apply"],
 ["checkType", "Path.cast_coe"],
 ["checkType", "Path.coe_mk"],
 ["checkType", "Path.coe_mk_mk"],
 ["checkType", "Path.coe_reparam"],
 ["checkType", "Path.coe_toContinuousMap"],
 ["checkType", "Path.continuous"],
 ["checkType", "Path.continuous_eval"],
 ["checkType", "Path.ext"],
 ["checkType", "Path.extend_extends"],
 ["checkType", "Path.extend_extends'"],
 ["checkType", "Path.extend_range"],
 ["checkType", "Path.map'"],
 ["checkType", "Path.map_coe"],
 ["checkType", "Path.mul_apply"],
 ["checkType", "Path.ofLine_mem"],
 ["checkType", "Path.pi_coe"],
 ["checkType", "Path.prod_coe"],
 ["checkType", "Path.range_reparam"],
 ["checkType", "Path.refl_apply"],
 ["checkType", "Path.refl_range"],
 ["checkType", "Path.source"],
 ["checkType", "Path.symm_apply"],
 ["checkType", "Path.symm_range"],
 ["checkType", "Path.target"],
 ["checkType", "Path.toHomotopyConst_apply"],
 ["checkType", "Path.trans_apply"],
 ["checkType", "Path.trans_range"],
 ["checkType", "Path.truncate_continuous_family"],
 ["checkType", "Path.truncate_range"],
 ["checkType", "Path.truncate_zero_one"],
 ["checkType", "PathConnectedSpace.exists_path_through_family"],
 ["checkType", "PathConnectedSpace.exists_path_through_family'"],
 ["checkType", "Perfection.coeff_add_ne_zero"],
 ["checkType", "Perfection.coeff_frobenius"],
 ["checkType", "Perfection.coeff_iterate_frobenius"],
 ["checkType", "Perfection.coeff_iterate_frobenius'"],
 ["checkType", "Perfection.coeff_map"],
 ["checkType", "Perfection.coeff_mk"],
 ["checkType", "Perfection.coeff_ne_zero_of_le"],
 ["checkType", "Perfection.coeff_pow_p"],
 ["checkType", "Perfection.coeff_pow_p'"],
 ["checkType", "Perfection.coeff_pthRoot"],
 ["checkType", "Perfection.ext"],
 ["checkType", "Perfection.hom_ext"],
 ["checkType", "Perfection.lift_apply_apply_coe"],
 ["checkType", "Perfection.lift_symm_apply"],
 ["checkType", "Perfection.map_apply_coe"],
 ["checkType", "PerfectionMap.comp_equiv"],
 ["checkType", "PerfectionMap.comp_symm_equiv"],
 ["checkType", "PerfectionMap.equiv_apply"],
 ["checkType", "PerfectionMap.hom_ext"],
 ["checkType", "PerfectionMap.injective"],
 ["checkType", "PerfectionMap.lift_apply"],
 ["checkType", "PerfectionMap.lift_symm_apply"],
 ["checkType", "PerfectionMap.map_map"],
 ["checkType", "PerfectionMap.mk"],
 ["checkType", "PerfectionMap.mk'"],
 ["checkType", "PerfectionMap.rec"],
 ["checkType", "PerfectionMap.surjective"],
 ["checkType", "PhragmenLindelof.eqOn_horizontal_strip"],
 ["checkType", "PhragmenLindelof.eqOn_quadrant_I"],
 ["checkType", "PhragmenLindelof.eqOn_quadrant_II"],
 ["checkType", "PhragmenLindelof.eqOn_quadrant_III"],
 ["checkType", "PhragmenLindelof.eqOn_quadrant_IV"],
 ["checkType",
  "PhragmenLindelof.eqOn_right_half_plane_of_superexponential_decay"],
 ["checkType", "PhragmenLindelof.eqOn_vertical_strip"],
 ["checkType", "PhragmenLindelof.eq_zero_on_horizontal_strip"],
 ["checkType", "PhragmenLindelof.eq_zero_on_quadrant_I"],
 ["checkType", "PhragmenLindelof.eq_zero_on_quadrant_II"],
 ["checkType", "PhragmenLindelof.eq_zero_on_quadrant_III"],
 ["checkType", "PhragmenLindelof.eq_zero_on_quadrant_IV"],
 ["checkType",
  "PhragmenLindelof.eq_zero_on_right_half_plane_of_superexponential_decay"],
 ["checkType", "PhragmenLindelof.eq_zero_on_vertical_strip"],
 ["checkType", "PhragmenLindelof.horizontal_strip"],
 ["checkType", "PhragmenLindelof.isBigO_sub_exp_rpow"],
 ["checkType", "PhragmenLindelof.quadrant_I"],
 ["checkType", "PhragmenLindelof.quadrant_II"],
 ["checkType", "PhragmenLindelof.quadrant_III"],
 ["checkType", "PhragmenLindelof.quadrant_IV"],
 ["checkType", "PhragmenLindelof.right_half_plane_of_bounded_on_real"],
 ["checkType", "PhragmenLindelof.right_half_plane_of_tendsto_zero_on_real"],
 ["checkType", "PhragmenLindelof.vertical_strip"],
 ["checkType", "PiLp.antilipschitzWith_equiv"],
 ["checkType", "PiLp.antilipschitzWith_equiv_aux"],
 ["checkType", "PiLp.basisFun_apply"],
 ["checkType", "PiLp.basisFun_repr"],
 ["checkType", "PiLp.basis_toMatrix_basisFun_mul"],
 ["checkType", "PiLp.continuousLinearEquiv_apply"],
 ["checkType", "PiLp.continuousLinearEquiv_symm_apply"],
 ["checkType", "PiLp.continuous_equiv"],
 ["checkType", "PiLp.continuous_equiv_symm"],
 ["checkType", "PiLp.dist_equiv_symm_single_same"],
 ["checkType", "PiLp.edist_equiv_symm_single_same"],
 ["checkType", "PiLp.infty_equiv_isometry"],
 ["checkType", "PiLp.lipschitzWith_equiv"],
 ["checkType", "PiLp.lipschitzWith_equiv_aux"],
 ["checkType", "PiLp.nndist_eq_of_L2"],
 ["checkType", "PiLp.nndist_equiv_symm_single_same"],
 ["checkType", "PiLp.nnnorm_eq_of_L2"],
 ["checkType", "PiLp.nnnorm_equiv"],
 ["checkType", "PiLp.nnnorm_equiv_symm"],
 ["checkType", "PiLp.nnnorm_equiv_symm_const"],
 ["checkType", "PiLp.nnnorm_equiv_symm_const'"],
 ["checkType", "PiLp.nnnorm_equiv_symm_one"],
 ["checkType", "PiLp.nnnorm_equiv_symm_single"],
 ["checkType", "PiLp.norm_equiv"],
 ["checkType", "PiLp.norm_equiv_symm"],
 ["checkType", "PiLp.norm_equiv_symm_const"],
 ["checkType", "PiLp.norm_equiv_symm_const'"],
 ["checkType", "PiLp.norm_equiv_symm_one"],
 ["checkType", "PiLp.norm_equiv_symm_single"],
 ["checkType", "PiLp.uniformContinuous_equiv"],
 ["checkType", "PiLp.uniformContinuous_equiv_symm"],
 ["checkType", "PiLp.volume_preserving_equiv"],
 ["checkType", "PiLp.volume_preserving_equiv_symm"],
 ["checkType", "PicardLindelof.continuousOn"],
 ["checkType", "PointedCone.coe_comap"],
 ["checkType", "PointedCone.coe_map"],
 ["checkType", "PointedCone.mem_comap"],
 ["checkType", "PointedCone.mem_map"],
 ["checkType", "PointedSmoothMap.funLike"],
 ["checkType", "PointedSmoothMap.smul_def"],
 ["checkType", "Polynomial.X_pow_sub_one_eq_prod"],
 ["checkType", "Polynomial.X_pow_sub_one_splits"],
 ["checkType", "Polynomial.aeval_continuousMap_apply"],
 ["checkType", "Polynomial.cardPowDegree_anti_archimedean"],
 ["checkType", "Polynomial.card_rootSet_le_derivative"],
 ["checkType", "Polynomial.card_roots_le_derivative"],
 ["checkType",
  "Polynomial.card_roots_toFinset_le_card_roots_derivative_diff_roots_succ"],
 ["checkType", "Polynomial.card_roots_toFinset_le_derivative"],
 ["checkType", "Polynomial.continuousAt_aeval"],
 ["checkType", "Polynomial.continuousOn_aeval"],
 ["checkType", "Polynomial.continuousWithinAt_aeval"],
 ["checkType", "Polynomial.continuous_aeval"],
 ["checkType", "Polynomial.coprime_of_root_cyclotomic"],
 ["checkType", "Polynomial.cyclotomic_eq_prod_X_pow_sub_one_pow_moebius"],
 ["checkType", "Polynomial.cyclotomic_eq_prod_X_sub_primitiveRoots"],
 ["checkType", "Polynomial.cyclotomic_expand_eq_cyclotomic"],
 ["checkType", "Polynomial.cyclotomic_expand_eq_cyclotomic_mul"],
 ["checkType", "Polynomial.deriv"],
 ["checkType", "Polynomial.derivWithin"],
 ["checkType", "Polynomial.derivWithin_aeval"],
 ["checkType", "Polynomial.deriv_aeval"],
 ["checkType", "Polynomial.deriv_gaussian_eq_hermite_mul_gaussian"],
 ["checkType", "Polynomial.differentiableAt_aeval"],
 ["checkType", "Polynomial.differentiableOn_aeval"],
 ["checkType", "Polynomial.differentiableWithinAt_aeval"],
 ["checkType", "Polynomial.differentiable_aeval"],
 ["checkType", "Polynomial.exists_approx_polynomial"],
 ["checkType", "Polynomial.exists_partition_polynomial"],
 ["checkType", "Polynomial.exists_partition_polynomial_aux"],
 ["checkType", "Polynomial.fderiv"],
 ["checkType", "Polynomial.fderivWithin"],
 ["checkType", "Polynomial.fderivWithin_aeval"],
 ["checkType", "Polynomial.fderiv_aeval"],
 ["checkType", "Polynomial.hasDerivAt"],
 ["checkType", "Polynomial.hasDerivAt_aeval"],
 ["checkType", "Polynomial.hasDerivWithinAt"],
 ["checkType", "Polynomial.hasDerivWithinAt_aeval"],
 ["checkType", "Polynomial.hasFDerivAt"],
 ["checkType", "Polynomial.hasFDerivAt_aeval"],
 ["checkType", "Polynomial.hasFDerivWithinAt"],
 ["checkType", "Polynomial.hasFDerivWithinAt_aeval"],
 ["checkType", "Polynomial.hasStrictDerivAt"],
 ["checkType", "Polynomial.hasStrictDerivAt_aeval"],
 ["checkType", "Polynomial.hermite_eq_deriv_gaussian"],
 ["checkType", "Polynomial.hermite_eq_deriv_gaussian'"],
 ["checkType", "Polynomial.ofReal_eval"],
 ["checkType", "Polynomial.orderOf_root_cyclotomic_dvd"],
 ["checkType", "Polynomial.tendsto_abv_aeval_atTop"],
 ["checkType", "Polynomial.tendsto_abv_eval₂_atTop"],
 ["checkType", "Polynomial.toContinuousMapAlgHom_apply"],
 ["checkType", "Polynomial.toContinuousMapOnAlgHom_apply"],
 ["checkType", "Polynomial.toContinuousMapOn_apply"],
 ["checkType", "Polynomial.toContinuousMap_apply"],
 ["checkType", "Polynomial.trinomial_def"],
 ["checkType", "PontryaginDual.map_apply"],
 ["checkType", "PreTilt.coeff_nat_find_add_ne_zero"],
 ["checkType",
  "PreTilt.instCharPPreTiltToAddMonoidWithOneToAddGroupWithOneToRingInstCommRingPreTilt"],
 ["checkType", "PreTilt.instCommRingPreTilt"],
 ["checkType",
  "PreTilt.instIsDomainPreTiltToSemiringToCommSemiringInstCommRingPreTilt"],
 ["checkType", "PreTilt.map_eq_zero"],
 ["checkType", "PreTilt.val"],
 ["checkType", "PreTilt.valAux"],
 ["checkType", "PreTilt.valAux_add"],
 ["checkType", "PreTilt.valAux_eq"],
 ["checkType", "PreTilt.valAux_mul"],
 ["checkType", "PreTilt.valAux_one"],
 ["checkType", "PreTilt.valAux_zero"],
 ["checkType", "Pretrivialization.coe_linearMapAt"],
 ["checkType", "Pretrivialization.coe_linearMapAt_of_mem"],
 ["checkType", "Pretrivialization.continuousLinearMapCoordChange_apply"],
 ["checkType", "Pretrivialization.linearEquivAt_apply"],
 ["checkType", "Pretrivialization.linearEquivAt_symm_apply"],
 ["checkType", "Pretrivialization.linearMapAt_apply"],
 ["checkType", "Pretrivialization.linearMapAt_symmₗ"],
 ["checkType", "Pretrivialization.symmₗ_apply"],
 ["checkType", "Pretrivialization.symmₗ_linearMapAt"],
 ["checkType", "ProbabilityTheory.ae_condKernelReal_eq_one"],
 ["checkType", "ProbabilityTheory.aestronglyMeasurable'_integral_condDistrib"],
 ["checkType",
  "ProbabilityTheory.aestronglyMeasurable'_integral_condexpKernel"],
 ["checkType", "ProbabilityTheory.condDistrib_ae_eq_condexp"],
 ["checkType", "ProbabilityTheory.condDistrib_ae_eq_of_measure_eq_compProd"],
 ["checkType", "ProbabilityTheory.condKernelReal_Iic"],
 ["checkType", "ProbabilityTheory.condexpKernel_ae_eq_condexp"],
 ["checkType", "ProbabilityTheory.condexpKernel_ae_eq_condexp'"],
 ["checkType", "ProbabilityTheory.condexpKernel_ae_eq_trim_condexp"],
 ["checkType", "ProbabilityTheory.condexpKernel_apply_eq_condDistrib"],
 ["checkType", "ProbabilityTheory.condexp_ae_eq_integral_condDistrib"],
 ["checkType", "ProbabilityTheory.condexp_ae_eq_integral_condDistrib'"],
 ["checkType", "ProbabilityTheory.condexp_ae_eq_integral_condDistrib_id"],
 ["checkType", "ProbabilityTheory.condexp_ae_eq_integral_condexpKernel"],
 ["checkType", "ProbabilityTheory.condexp_ae_eq_integral_condexpKernel'"],
 ["checkType", "ProbabilityTheory.condexp_prod_ae_eq_integral_condDistrib"],
 ["checkType", "ProbabilityTheory.condexp_prod_ae_eq_integral_condDistrib'"],
 ["checkType", "ProbabilityTheory.condexp_prod_ae_eq_integral_condDistrib₀"],
 ["checkType", "ProbabilityTheory.eq_condKernel_of_measure_eq_compProd"],
 ["checkType", "ProbabilityTheory.eq_condKernel_of_measure_eq_compProd'"],
 ["checkType", "ProbabilityTheory.eq_condKernel_of_measure_eq_compProd_real"],
 ["checkType", "ProbabilityTheory.hasFiniteIntegral_compProd_iff"],
 ["checkType", "ProbabilityTheory.hasFiniteIntegral_compProd_iff'"],
 ["checkType", "ProbabilityTheory.hasFiniteIntegral_prod_mk_left"],
 ["checkType",
  "ProbabilityTheory.instFunLikeSubtypeForAllMeasureMemAddSubmonoidAddZeroClassToAddZeroClassToAddMonoidInstAddCommMonoidInstMembershipInstSetLikeAddSubmonoidKernel"],
 ["checkType", "ProbabilityTheory.integrable_compProd_iff"],
 ["checkType", "ProbabilityTheory.integrable_kernel_prod_mk_left"],
 ["checkType", "ProbabilityTheory.integrable_toReal_condDistrib"],
 ["checkType", "ProbabilityTheory.integrable_toReal_condexpKernel"],
 ["checkType", "ProbabilityTheory.integral_compProd"],
 ["checkType", "ProbabilityTheory.integral_condCDF"],
 ["checkType", "ProbabilityTheory.integral_condKernel"],
 ["checkType", "ProbabilityTheory.lintegral_condCDF"],
 ["checkType", "ProbabilityTheory.lintegral_condKernel"],
 ["checkType", "ProbabilityTheory.lintegral_condKernelReal"],
 ["checkType", "ProbabilityTheory.lintegral_condKernelReal_mem"],
 ["checkType", "ProbabilityTheory.lintegral_condKernelReal_univ"],
 ["checkType", "ProbabilityTheory.lintegral_condKernel_mem"],
 ["checkType", "ProbabilityTheory.measurableSet_kernel_integrable"],
 ["checkType", "ProbabilityTheory.measurable_condDistrib"],
 ["checkType", "ProbabilityTheory.measurable_condexpKernel"],
 ["checkType", "ProbabilityTheory.set_integral_compProd"],
 ["checkType", "ProbabilityTheory.set_integral_compProd_univ_left"],
 ["checkType", "ProbabilityTheory.set_integral_compProd_univ_right"],
 ["checkType", "ProbabilityTheory.set_integral_condCDF"],
 ["checkType", "ProbabilityTheory.set_integral_condKernel"],
 ["checkType", "ProbabilityTheory.set_integral_condKernel_univ_left"],
 ["checkType", "ProbabilityTheory.set_integral_condKernel_univ_right"],
 ["checkType", "ProbabilityTheory.set_lintegral_condCDF"],
 ["checkType", "ProbabilityTheory.set_lintegral_condCDF_rat"],
 ["checkType", "ProbabilityTheory.set_lintegral_condDistrib_of_measurableSet"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernel"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernelReal_Iic"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernelReal_prod"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernelReal_univ"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernel_eq_measure_prod"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernel_univ_left"],
 ["checkType", "ProbabilityTheory.set_lintegral_condKernel_univ_right"],
 ["checkType", "ProbabilityTheory.set_lintegral_preimage_condDistrib"],
 ["checkType", "ProbabilityTheory.stronglyMeasurable_condexpKernel"],
 ["checkType", "Profinite.coe_comp"],
 ["checkType", "Profinite.effectiveEpiFamily_of_jointly_surjective"],
 ["checkType", "Profinite.effectiveEpiFamily_tfae"],
 ["checkType", "Profinite.effectiveEpi_tfae"],
 ["checkType", "Profinite.epi_iff_surjective"],
 ["checkType", "Profinite.exists_isClopen_of_cofiltered"],
 ["checkType", "Profinite.exists_locallyConstant"],
 ["checkType", "Profinite.exists_locallyConstant_fin_two"],
 ["checkType", "Profinite.exists_locallyConstant_finite_aux"],
 ["checkType", "Profinite.exists_locallyConstant_finite_nonempty"],
 ["checkType", "Profinite.homeoOfIso_apply"],
 ["checkType", "Profinite.homeoOfIso_symm_apply"],
 ["checkType", "Profinite.isClosedMap"],
 ["checkType", "Profinite.isIso_of_bijective"],
 ["checkType", "Profinite.isoEquivHomeo_apply_apply"],
 ["checkType", "Profinite.isoEquivHomeo_apply_symm_apply"],
 ["checkType", "Profinite.isoEquivHomeo_symm_apply_hom_apply"],
 ["checkType", "Profinite.isoEquivHomeo_symm_apply_inv"],
 ["checkType", "Profinite.isoOfBijective"],
 ["checkType", "Profinite.isoOfHomeo_hom"],
 ["checkType", "Profinite.isoOfHomeo_inv"],
 ["checkType", "Profinite.mono_iff_injective"],
 ["checkType", "Profinite.struct"],
 ["checkType", "ProperCone.coe_comap"],
 ["checkType", "ProperCone.hyperplane_separation"],
 ["checkType", "ProperCone.hyperplane_separation_of_nmem"],
 ["checkType", "ProperCone.mem_comap"],
 ["checkType", "QuadraticForm.complex_equivalent"],
 ["checkType", "QuadraticForm.equivalent_one_neg_one_weighted_sum_squared"],
 ["checkType", "QuadraticForm.equivalent_sum_squares"],
 ["checkType", "Quaternion.coe_ofComplex"],
 ["checkType", "Quaternion.continuous_normSq"],
 ["checkType", "Quaternion.expSeries_even_of_imaginary"],
 ["checkType", "Quaternion.expSeries_odd_of_imaginary"],
 ["checkType", "Quaternion.hasSum_expSeries_of_imaginary"],
 ["checkType", "Quaternion.inner_self"],
 ["checkType", "Quaternion.linearIsometryEquivTuple_apply"],
 ["checkType", "Quaternion.linearIsometryEquivTuple_symm_apply"],
 ["checkType", "Quaternion.normSq_eq_norm_mul_self"],
 ["checkType", "Quaternion.normSq_exp"],
 ["checkType", "Quaternion.norm_piLp_equiv_symm_equivTuple"],
 ["checkType", "QuotientAddGroup.norm_lift_apply_le"],
 ["checkType", "Real.coe_comp_expOrderIso"],
 ["checkType", "Real.coe_expOrderIso_apply"],
 ["checkType", "Real.coe_sinOrderIso_apply"],
 ["checkType", "Real.coe_sqrt"],
 ["checkType", "Real.continuous_fourierChar"],
 ["checkType", "Real.exists_extension_norm_eq"],
 ["checkType", "Real.fourierChar_apply"],
 ["checkType", "Real.fourierCoeff_tsum_comp_add"],
 ["checkType", "Real.fourierIntegral_def"],
 ["checkType", "Real.integrable_of_summable_norm_Icc"],
 ["checkType", "Real.log_of_ne_zero"],
 ["checkType", "Real.log_of_pos"],
 ["checkType", "Real.map_linearMap_volume_pi_eq_smul_volume_pi"],
 ["checkType", "Real.map_matrix_volume_pi_eq_smul_volume_pi"],
 ["checkType", "Real.nndist_eq"],
 ["checkType", "Real.nndist_eq'"],
 ["checkType", "Real.sinOrderIso_apply"],
 ["checkType", "Real.sinhEquiv_apply"],
 ["checkType", "Real.sinhEquiv_symm_apply"],
 ["checkType", "Real.sinhHomeomorph_apply"],
 ["checkType", "Real.sinhHomeomorph_symm_apply"],
 ["checkType", "Real.sinhOrderIso_apply"],
 ["checkType", "Real.sinhOrderIso_symm_apply"],
 ["checkType", "Real.smul_map_diagonal_volume_pi"],
 ["checkType", "Real.tendsto_integral_exp_smul_cocompact"],
 ["checkType", "Real.tsum_eq_tsum_fourierIntegral"],
 ["checkType", "Real.tsum_eq_tsum_fourierIntegral_of_rpow_decay"],
 ["checkType", "Real.tsum_eq_tsum_fourierIntegral_of_rpow_decay_of_summable"],
 ["checkType", "Real.vector_fourierIntegral_eq_integral_exp_smul"],
 ["checkType", "Real.volume_preserving_transvectionStruct"],
 ["checkType", "RegularNormedAlgebra.isometry_mul'"],
 ["checkType", "RegularNormedAlgebra.mk"],
 ["checkType", "RegularNormedAlgebra.rec"],
 ["checkType", "RingHomIsometric.is_iso"],
 ["checkType", "RingHomIsometric.mk"],
 ["checkType", "RingHomIsometric.rec"],
 ["checkType", "RingSeminorm.apply_one"],
 ["checkType", "RingSeminorm.eq_zero_iff"],
 ["checkType", "RingSeminorm.ext"],
 ["checkType", "RingSeminorm.ne_zero_iff"],
 ["checkType", "RingSeminorm.seminorm_one_eq_one_iff_ne_zero"],
 ["checkType", "RingSeminorm.toFun_eq_coe"],
 ["checkType", "SchwartzMap.add_apply"],
 ["checkType", "SchwartzMap.bounds_bddBelow"],
 ["checkType", "SchwartzMap.bounds_nonempty"],
 ["checkType", "SchwartzMap.coeFn_zero"],
 ["checkType", "SchwartzMap.coeHom_injective"],
 ["checkType", "SchwartzMap.coe_coeHom"],
 ["checkType", "SchwartzMap.coe_zero"],
 ["checkType", "SchwartzMap.continuous"],
 ["checkType", "SchwartzMap.decay"],
 ["checkType", "SchwartzMap.decay_add_le_aux"],
 ["checkType", "SchwartzMap.decay_neg_aux"],
 ["checkType", "SchwartzMap.decay_smul_aux"],
 ["checkType", "SchwartzMap.delta_apply"],
 ["checkType", "SchwartzMap.derivCLM_apply"],
 ["checkType", "SchwartzMap.differentiable"],
 ["checkType", "SchwartzMap.differentiableAt"],
 ["checkType", "SchwartzMap.ext"],
 ["checkType", "SchwartzMap.fderivCLM_apply"],
 ["checkType", "SchwartzMap.instFunLike"],
 ["checkType", "SchwartzMap.isBigO_cocompact_rpow"],
 ["checkType", "SchwartzMap.isBigO_cocompact_zpow"],
 ["checkType", "SchwartzMap.isBigO_cocompact_zpow_neg_nat"],
 ["checkType", "SchwartzMap.iteratedPDeriv_one"],
 ["checkType", "SchwartzMap.iteratedPDeriv_succ_left"],
 ["checkType", "SchwartzMap.iteratedPDeriv_succ_right"],
 ["checkType", "SchwartzMap.iteratedPDeriv_zero"],
 ["checkType", "SchwartzMap.le_seminorm"],
 ["checkType", "SchwartzMap.le_seminorm'"],
 ["checkType", "SchwartzMap.le_seminormAux"],
 ["checkType", "SchwartzMap.mkCLM"],
 ["checkType", "SchwartzMap.mkLM"],
 ["checkType", "SchwartzMap.norm_iteratedFDeriv_le_seminorm"],
 ["checkType", "SchwartzMap.norm_le_seminorm"],
 ["checkType", "SchwartzMap.norm_pow_mul_le_seminorm"],
 ["checkType", "SchwartzMap.one_add_le_sup_seminorm_apply"],
 ["checkType", "SchwartzMap.pderivCLM_apply"],
 ["checkType", "SchwartzMap.seminormAux_le_bound"],
 ["checkType", "SchwartzMap.seminorm_le_bound"],
 ["checkType", "SchwartzMap.seminorm_le_bound'"],
 ["checkType", "SchwartzMap.smooth"],
 ["checkType", "SchwartzMap.smul_apply"],
 ["checkType", "SchwartzMap.sub_apply"],
 ["checkType", "SchwartzMap.toBoundedContinuousFunctionCLM_apply"],
 ["checkType", "SchwartzMap.toBoundedContinuousFunctionLM_apply"],
 ["checkType", "SchwartzMap.toBoundedContinuousFunction_apply"],
 ["checkType", "SchwartzMap.tsum_eq_tsum_fourierIntegral"],
 ["checkType", "SchwartzMap.zero_apply"],
 ["checkType", "SemiNormedGroupCat.coe_comp"],
 ["checkType", "SemiNormedGroupCat.coe_id"],
 ["checkType", "SemiNormedGroupCat.explicitCokernelπ_apply_dom_eq_zero"],
 ["checkType", "SemiNormedGroupCat.explicitCokernelπ_desc_apply"],
 ["checkType", "SemiNormedGroupCat.explicitCokernelπ_surjective"],
 ["checkType", "SemiNormedGroupCat.ext"],
 ["checkType", "SemiNormedGroupCat.iso_isometry_of_normNoninc"],
 ["checkType", "SemiNormedGroupCat.zero_apply"],
 ["checkType", "SemiNormedGroupCat₁.coe_comp"],
 ["checkType", "SemiNormedGroupCat₁.coe_id"],
 ["checkType", "SemiNormedGroupCat₁.hom_ext"],
 ["checkType", "SemiNormedGroupCat₁.instFunLike"],
 ["checkType", "SemiNormedGroupCat₁.iso_isometry"],
 ["checkType", "SemiNormedGroupCat₁.mkHom_apply"],
 ["checkType", "SemiNormedGroupCat₁.zero_apply"],
 ["checkType", "SemilinearIsometryClass.antilipschitz"],
 ["checkType", "SemilinearIsometryClass.continuous"],
 ["checkType", "SemilinearIsometryClass.diam_image"],
 ["checkType", "SemilinearIsometryClass.diam_range"],
 ["checkType", "SemilinearIsometryClass.ediam_image"],
 ["checkType", "SemilinearIsometryClass.ediam_range"],
 ["checkType", "SemilinearIsometryClass.isometry"],
 ["checkType", "SemilinearIsometryClass.lipschitz"],
 ["checkType", "SemilinearIsometryClass.mk"],
 ["checkType", "SemilinearIsometryClass.nnnorm_map"],
 ["checkType", "SemilinearIsometryClass.norm_map"],
 ["checkType", "SemilinearIsometryClass.rec"],
 ["checkType", "SemilinearIsometryEquivClass.mk"],
 ["checkType", "SemilinearIsometryEquivClass.norm_map"],
 ["checkType", "SemilinearIsometryEquivClass.rec"],
 ["checkType", "SemilinearMapClass.bound_of_continuous"],
 ["checkType", "SemilinearMapClass.bound_of_shell_semi_normed"],
 ["checkType", "Seminorm.absorbent_ball"],
 ["checkType", "Seminorm.absorbent_closedBall"],
 ["checkType", "Seminorm.add_apply"],
 ["checkType", "Seminorm.ball_comp"],
 ["checkType", "Seminorm.ball_mem_nhds"],
 ["checkType", "Seminorm.ball_zero_eq"],
 ["checkType", "Seminorm.ball_zero_eq_preimage_ball"],
 ["checkType", "Seminorm.bddAbove_iff"],
 ["checkType", "Seminorm.bddAbove_of_absorbent"],
 ["checkType", "Seminorm.bddAbove_range_iff"],
 ["checkType", "Seminorm.bddBelow_range_add"],
 ["checkType", "Seminorm.bound_of_continuous"],
 ["checkType", "Seminorm.bound_of_continuous_normedSpace"],
 ["checkType", "Seminorm.bound_of_shell"],
 ["checkType", "Seminorm.bound_of_shell_smul"],
 ["checkType", "Seminorm.bound_of_shell_sup"],
 ["checkType", "Seminorm.closedBall_comp"],
 ["checkType", "Seminorm.closedBall_zero_eq"],
 ["checkType", "Seminorm.closedBall_zero_eq_preimage_closedBall"],
 ["checkType", "Seminorm.coeFnAddMonoidHom_apply"],
 ["checkType", "Seminorm.coeFnAddMonoidHom_injective"],
 ["checkType", "Seminorm.coe_add"],
 ["checkType", "Seminorm.coe_bot"],
 ["checkType", "Seminorm.coe_comp"],
 ["checkType", "Seminorm.coe_iSup_eq"],
 ["checkType", "Seminorm.coe_le_coe"],
 ["checkType", "Seminorm.coe_lt_coe"],
 ["checkType", "Seminorm.coe_restrictScalars"],
 ["checkType", "Seminorm.coe_sSup_eq"],
 ["checkType", "Seminorm.coe_sSup_eq'"],
 ["checkType", "Seminorm.coe_smul"],
 ["checkType", "Seminorm.coe_sup"],
 ["checkType", "Seminorm.coe_zero"],
 ["checkType", "Seminorm.comp_apply"],
 ["checkType", "Seminorm.comp_smul_apply"],
 ["checkType", "Seminorm.cont_normedSpace_to_withSeminorms"],
 ["checkType", "Seminorm.cont_withSeminorms_normedSpace"],
 ["checkType", "Seminorm.continuous"],
 ["checkType", "Seminorm.continuous'"],
 ["checkType", "Seminorm.continuousAt_zero"],
 ["checkType", "Seminorm.continuousAt_zero'"],
 ["checkType", "Seminorm.continuousAt_zero_of_forall"],
 ["checkType", "Seminorm.continuousAt_zero_of_forall'"],
 ["checkType", "Seminorm.continuous_from_bounded"],
 ["checkType", "Seminorm.continuous_iSup"],
 ["checkType", "Seminorm.continuous_iff_continuous_comp"],
 ["checkType", "Seminorm.continuous_of_continuousAt_zero"],
 ["checkType", "Seminorm.continuous_of_continuous_comp"],
 ["checkType", "Seminorm.continuous_of_forall"],
 ["checkType", "Seminorm.continuous_of_forall'"],
 ["checkType", "Seminorm.continuous_of_le"],
 ["checkType", "Seminorm.continuous_of_lowerSemicontinuous"],
 ["checkType", "Seminorm.convexOn"],
 ["checkType", "Seminorm.exists_apply_eq_finset_sup"],
 ["checkType", "Seminorm.ext"],
 ["checkType", "Seminorm.finset_sup_apply"],
 ["checkType", "Seminorm.finset_sup_apply_le"],
 ["checkType", "Seminorm.finset_sup_apply_lt"],
 ["checkType", "Seminorm.gauge_ball"],
 ["checkType", "Seminorm.iSup_apply"],
 ["checkType", "Seminorm.inf_apply"],
 ["checkType", "Seminorm.isBounded_const"],
 ["checkType", "Seminorm.isBounded_sup"],
 ["checkType", "Seminorm.le_def"],
 ["checkType", "Seminorm.le_finset_sup_apply"],
 ["checkType", "Seminorm.lt_def"],
 ["checkType", "Seminorm.map_eq_zero_of_norm_zero"],
 ["checkType", "Seminorm.mem_ball"],
 ["checkType", "Seminorm.mem_ball_zero"],
 ["checkType", "Seminorm.mem_closedBall"],
 ["checkType", "Seminorm.mem_closedBall_zero"],
 ["checkType", "Seminorm.norm_sub_map_le_sub"],
 ["checkType", "Seminorm.preimage_metric_ball"],
 ["checkType", "Seminorm.preimage_metric_closedBall"],
 ["checkType", "Seminorm.pullback_apply"],
 ["checkType", "Seminorm.rescale_to_shell"],
 ["checkType", "Seminorm.rescale_to_shell_zpow"],
 ["checkType", "Seminorm.sSup_apply"],
 ["checkType", "Seminorm.sSup_empty"],
 ["checkType", "Seminorm.smul_apply"],
 ["checkType", "Seminorm.sup_apply"],
 ["checkType", "Seminorm.uniformContinuous"],
 ["checkType", "Seminorm.uniformContinuous'"],
 ["checkType", "Seminorm.uniformContinuous_of_continuousAt_zero"],
 ["checkType", "Seminorm.uniformContinuous_of_forall"],
 ["checkType", "Seminorm.uniformContinuous_of_forall'"],
 ["checkType", "Seminorm.uniformity_eq_of_hasBasis"],
 ["checkType", "Seminorm.zero_apply"],
 ["checkType", "Seminorm.zero_or_exists_apply_eq_finset_sup"],
 ["checkType", "SeminormClass.map_smul_eq_mul"],
 ["checkType", "SeminormClass.mk"],
 ["checkType", "SeminormClass.rec"],
 ["checkType", "SeminormFamily.basisSets_iff"],
 ["checkType", "SeminormFamily.basisSets_mem"],
 ["checkType", "SeminormFamily.filter_eq_iInf"],
 ["checkType", "SeminormFamily.finset_sup_comp"],
 ["checkType", "SeminormFamily.withSeminorms_iff_nhds_eq_iInf"],
 ["checkType", "SeparatingDual.dualMap_surjective_iff"],
 ["checkType", "SeparatingDual.exists_continuousLinearEquiv_apply_eq"],
 ["checkType", "SeparatingDual.exists_eq_one"],
 ["checkType", "SeparatingDual.exists_eq_one_ne_zero_of_ne_zero_pair"],
 ["checkType", "SeparatingDual.exists_ne_zero"],
 ["checkType", "SeparatingDual.exists_ne_zero'"],
 ["checkType", "SeparatingDual.exists_separating_of_ne"],
 ["checkType", "SeparatingDual.mk"],
 ["checkType", "SeparatingDual.rec"],
 ["checkType", "Set.infsep_of_fintype"],
 ["checkType", "SimplexCategory.coe_toTopMap"],
 ["checkType", "SimplexCategory.toTop_map_apply"],
 ["checkType", "SlashInvariantForm.add_apply"],
 ["checkType", "SlashInvariantForm.coeHom_injective"],
 ["checkType", "SlashInvariantForm.coe_add"],
 ["checkType", "SlashInvariantForm.coe_intCast"],
 ["checkType", "SlashInvariantForm.coe_mk"],
 ["checkType", "SlashInvariantForm.coe_mul"],
 ["checkType", "SlashInvariantForm.coe_natCast"],
 ["checkType", "SlashInvariantForm.coe_neg"],
 ["checkType", "SlashInvariantForm.coe_smul"],
 ["checkType", "SlashInvariantForm.coe_sub"],
 ["checkType", "SlashInvariantForm.coe_zero"],
 ["checkType", "SlashInvariantForm.const_toFun"],
 ["checkType", "SlashInvariantForm.copy"],
 ["checkType", "SlashInvariantForm.ext"],
 ["checkType", "SlashInvariantForm.neg_apply"],
 ["checkType", "SlashInvariantForm.one_coe_eq_one"],
 ["checkType", "SlashInvariantForm.slash_action_eqn"],
 ["checkType", "SlashInvariantForm.slash_action_eqn'"],
 ["checkType", "SlashInvariantForm.smul_apply"],
 ["checkType", "SlashInvariantForm.sub_apply"],
 ["checkType", "SlashInvariantForm.toFun_eq_coe"],
 ["checkType", "SlashInvariantFormClass.mk"],
 ["checkType", "SlashInvariantFormClass.rec"],
 ["checkType", "SlashInvariantFormClass.slash_action_eq"],
 ["checkType", "SmoothBumpCovering.comp_embeddingPiTangent_mfderiv"],
 ["checkType", "SmoothBumpCovering.embeddingPiTangent_coe"],
 ["checkType", "SmoothBumpCovering.embeddingPiTangent_injOn"],
 ["checkType", "SmoothBumpCovering.embeddingPiTangent_injective"],
 ["checkType", "SmoothBumpCovering.embeddingPiTangent_injective_mfderiv"],
 ["checkType", "SmoothBumpCovering.embeddingPiTangent_ker_mfderiv"],
 ["checkType",
  "SmoothBumpCovering.exists_finset_toSmoothPartitionOfUnity_eventuallyEq"],
 ["checkType", "SmoothBumpCovering.exists_immersion_euclidean"],
 ["checkType", "SmoothBumpCovering.sum_toSmoothPartitionOfUnity_eq"],
 ["checkType", "SmoothBumpCovering.support_toSmoothPartitionOfUnity_subset"],
 ["checkType", "SmoothBumpCovering.toSmoothPartitionOfUnity_apply"],
 ["checkType", "SmoothBumpCovering.toSmoothPartitionOfUnity_eq_mul_prod"],
 ["checkType", "SmoothBumpCovering.toSmoothPartitionOfUnity_zero_of_zero"],
 ["checkType", "SmoothBumpFunction.eqOn_source"],
 ["checkType", "SmoothFiberwiseLinear.locality_aux₁"],
 ["checkType", "SmoothFiberwiseLinear.locality_aux₂"],
 ["checkType", "SmoothMap.coeFnAddMonoidHom_apply"],
 ["checkType", "SmoothMap.coeFnAlgHom_apply"],
 ["checkType", "SmoothMap.coeFnLinearMap_apply"],
 ["checkType", "SmoothMap.coeFnMonoidHom_apply"],
 ["checkType", "SmoothMap.coeFnRingHom_apply"],
 ["checkType", "SmoothMap.coe_add"],
 ["checkType", "SmoothMap.coe_div"],
 ["checkType", "SmoothMap.coe_inv"],
 ["checkType", "SmoothMap.coe_mul"],
 ["checkType", "SmoothMap.coe_neg"],
 ["checkType", "SmoothMap.coe_nsmul"],
 ["checkType", "SmoothMap.coe_one"],
 ["checkType", "SmoothMap.coe_pow"],
 ["checkType", "SmoothMap.coe_smul"],
 ["checkType", "SmoothMap.coe_sub"],
 ["checkType", "SmoothMap.coe_zero"],
 ["checkType", "SmoothMap.compLeftAddMonoidHom"],
 ["checkType", "SmoothMap.compLeftMonoidHom"],
 ["checkType", "SmoothMap.compLeftRingHom"],
 ["checkType", "SmoothOn.coordChange"],
 ["checkType", "SmoothOn.coordChangeL"],
 ["checkType", "SmoothOn.prod_map"],
 ["checkType", "SmoothPartitionOfUnity.contMDiff_finsum_smul"],
 ["checkType", "SmoothPartitionOfUnity.contMDiff_smul"],
 ["checkType", "SmoothPartitionOfUnity.exists_pos_of_mem"],
 ["checkType", "SmoothPartitionOfUnity.finsum_smul_mem_convex"],
 ["checkType",
  "SmoothPartitionOfUnity.instFunLikeSmoothPartitionOfUnityContMDiffMapRealToNontriviallyNormedFieldDenselyNormedFieldNormedAddCommGroupToNormedSpaceIsROrCInnerProductSpaceToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupModelWithCornersSelfPseudoMetricSpaceChartedSpaceSelfTopENatInstENatTop"],
 ["checkType", "SmoothPartitionOfUnity.le_one"],
 ["checkType", "SmoothPartitionOfUnity.locallyFinite"],
 ["checkType", "SmoothPartitionOfUnity.locallyFinite'"],
 ["checkType", "SmoothPartitionOfUnity.mk"],
 ["checkType", "SmoothPartitionOfUnity.nonneg"],
 ["checkType", "SmoothPartitionOfUnity.nonneg'"],
 ["checkType", "SmoothPartitionOfUnity.rec"],
 ["checkType", "SmoothPartitionOfUnity.smooth_finsum_smul"],
 ["checkType", "SmoothPartitionOfUnity.smooth_smul"],
 ["checkType", "SmoothPartitionOfUnity.smooth_sum"],
 ["checkType", "SmoothPartitionOfUnity.sum_eq_one"],
 ["checkType", "SmoothPartitionOfUnity.sum_eq_one'"],
 ["checkType", "SmoothPartitionOfUnity.sum_le_one"],
 ["checkType", "SmoothPartitionOfUnity.sum_le_one'"],
 ["checkType", "SmoothPartitionOfUnity.sum_nonneg"],
 ["checkType", "SmoothVectorBundle.pullback"],
 ["checkType", "SmoothWithinAt.comp"],
 ["checkType", "SmoothWithinAt.prod_map"],
 ["checkType", "StarAlgHom.nnnorm_apply_le"],
 ["checkType", "StarAlgHom.norm_apply_le"],
 ["checkType", "Stonean.HasPullbackOpenEmbedding"],
 ["checkType", "Stonean.createsPullbacksOfOpenEmbedding"],
 ["checkType", "Stonean.effectiveEpiFamily_of_jointly_surjective"],
 ["checkType", "Stonean.effectiveEpiFamily_tfae"],
 ["checkType", "Stonean.effectiveEpi_tfae"],
 ["checkType", "Stonean.epi_iff_surjective"],
 ["checkType", "Stonean.homeoOfIso_apply"],
 ["checkType", "Stonean.homeoOfIso_symm_apply"],
 ["checkType",
  "Stonean.instFunLikeHomStoneanToQuiverToCategoryStructInstLargeCategoryStoneanCoeTypeInstCoeSortStoneanType"],
 ["checkType", "Stonean.isoEquivHomeo_apply_apply"],
 ["checkType", "Stonean.isoEquivHomeo_apply_symm_apply"],
 ["checkType", "Stonean.isoEquivHomeo_symm_apply_hom_apply"],
 ["checkType", "Stonean.isoEquivHomeo_symm_apply_inv"],
 ["checkType", "Stonean.isoOfHomeo_hom"],
 ["checkType", "Stonean.isoOfHomeo_inv"],
 ["checkType", "Stonean.mono_iff_injective"],
 ["checkType", "Stonean.pullback"],
 ["checkType", "Stonean.pullbackIsoPullback"],
 ["checkType", "Stonean.pullbackIsoPullback_hom"],
 ["checkType", "Stonean.pullbackIsoPullback_inv"],
 ["checkType", "Stonean.struct"],
 ["checkType", "StrictConcaveOn.congr"],
 ["checkType", "StrictConvexOn.congr"],
 ["checkType", "StronglyMeasurable.apply_continuousLinearMap"],
 ["checkType", "Submodule.adjoint_orthogonalProjection"],
 ["checkType", "Submodule.adjoint_subtypeL"],
 ["checkType", "Submodule.coe_continuous_linearProjOfClosedCompl'"],
 ["checkType", "Submodule.coe_prodEquivOfClosedCompl"],
 ["checkType", "Submodule.coe_prodEquivOfClosedCompl_symm"],
 ["checkType", "Submodule.coe_subtypeₗᵢ"],
 ["checkType", "Submodule.isHilbertSumOrthogonal"],
 ["checkType", "Submodule.norm_subtypeL"],
 ["checkType", "Submodule.norm_subtypeL_le"],
 ["checkType", "Submodule.orthogonalFamily_self"],
 ["checkType", "Submodule.orthogonal_eq_inter"],
 ["checkType", "Submodule.subtypeₗᵢ_toContinuousLinearMap"],
 ["checkType", "Summable.norm_lt_one"],
 ["checkType", "TangentBundle.trivializationAt_apply"],
 ["checkType", "TangentBundle.trivializationAt_target"],
 ["checkType", "TendstoLocallyUniformlyOn.deriv"],
 ["checkType", "TendstoLocallyUniformlyOn.differentiableOn"],
 ["checkType", "Tilt.instFieldTilt"],
 ["checkType", "TrivSqZeroExt.fst_expSeries"],
 ["checkType", "TrivSqZeroExt.hasSum_expSeries_of_smul_comm"],
 ["checkType", "TrivSqZeroExt.hasSum_snd_expSeries_of_smul_comm"],
 ["checkType", "TrivSqZeroExt.snd_expSeries_of_smul_comm"],
 ["checkType", "Trivialization.apply_eq_prod_continuousLinearEquivAt"],
 ["checkType", "Trivialization.apply_symm_apply_eq_coordChangeL"],
 ["checkType", "Trivialization.coe_continuousLinearEquivAt_eq"],
 ["checkType", "Trivialization.coe_coordChangeL"],
 ["checkType", "Trivialization.coe_linearMapAt"],
 ["checkType", "Trivialization.coe_linearMapAt_of_mem"],
 ["checkType", "Trivialization.coe_symmₗ"],
 ["checkType", "Trivialization.contMDiffOn_iff"],
 ["checkType", "Trivialization.continuousLinearEquivAt_apply"],
 ["checkType", "Trivialization.continuousLinearEquivAt_apply'"],
 ["checkType", "Trivialization.continuousLinearEquivAt_symm_apply"],
 ["checkType", "Trivialization.continuousLinearMapAt_apply"],
 ["checkType", "Trivialization.continuousLinearMapAt_symmL"],
 ["checkType", "Trivialization.coordChangeL_apply"],
 ["checkType", "Trivialization.coordChangeL_apply'"],
 ["checkType", "Trivialization.coordChangeL_symm_apply"],
 ["checkType", "Trivialization.linearEquivAt_apply"],
 ["checkType", "Trivialization.linearEquivAt_symm_apply"],
 ["checkType", "Trivialization.linearMapAt_apply"],
 ["checkType", "Trivialization.linearMapAt_symmₗ"],
 ["checkType", "Trivialization.mk_coordChangeL"],
 ["checkType", "Trivialization.prod_apply"],
 ["checkType", "Trivialization.pullback_linear"],
 ["checkType", "Trivialization.smoothOn_iff"],
 ["checkType", "Trivialization.symmL_apply"],
 ["checkType", "Trivialization.symmL_continuousLinearMapAt"],
 ["checkType", "Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symm"],
 ["checkType", "Trivialization.symm_continuousLinearEquivAt_eq"],
 ["checkType", "Trivialization.symmₗ_linearMapAt"],
 ["checkType", "TruncatedWittVector.commutes'"],
 ["checkType", "TruncatedWittVector.commutes_symm'"],
 ["checkType", "TruncatedWittVector.zmodEquivTrunc_apply"],
 ["checkType", "UniformFun.hasBasis_nhds_one_of_basis"],
 ["checkType", "UniformFun.hasBasis_nhds_zero_of_basis"],
 ["checkType", "UniformFun.ofFun_add"],
 ["checkType", "UniformFun.ofFun_div"],
 ["checkType", "UniformFun.ofFun_inv"],
 ["checkType", "UniformFun.ofFun_mul"],
 ["checkType", "UniformFun.ofFun_neg"],
 ["checkType", "UniformFun.ofFun_one"],
 ["checkType", "UniformFun.ofFun_smul"],
 ["checkType", "UniformFun.ofFun_sub"],
 ["checkType", "UniformFun.ofFun_zero"],
 ["checkType", "UniformFun.toFun_add"],
 ["checkType", "UniformFun.toFun_div"],
 ["checkType", "UniformFun.toFun_inv"],
 ["checkType", "UniformFun.toFun_mul"],
 ["checkType", "UniformFun.toFun_neg"],
 ["checkType", "UniformFun.toFun_one"],
 ["checkType", "UniformFun.toFun_smul"],
 ["checkType", "UniformFun.toFun_sub"],
 ["checkType", "UniformFun.toFun_zero"],
 ["checkType", "UniformOnFun.continuousSMul_induced_of_image_bounded"],
 ["checkType", "UniformOnFun.hasBasis_nhds_one_of_basis"],
 ["checkType", "UniformOnFun.hasBasis_nhds_zero_of_basis"],
 ["checkType", "UniformOnFun.ofFun_add"],
 ["checkType", "UniformOnFun.ofFun_div"],
 ["checkType", "UniformOnFun.ofFun_inv"],
 ["checkType", "UniformOnFun.ofFun_mul"],
 ["checkType", "UniformOnFun.ofFun_neg"],
 ["checkType", "UniformOnFun.ofFun_smul"],
 ["checkType", "UniformOnFun.ofFun_sub"],
 ["checkType", "UniformOnFun.one_apply"],
 ["checkType", "UniformOnFun.toFun_add"],
 ["checkType", "UniformOnFun.toFun_div"],
 ["checkType", "UniformOnFun.toFun_inv"],
 ["checkType", "UniformOnFun.toFun_mul"],
 ["checkType", "UniformOnFun.toFun_neg"],
 ["checkType", "UniformOnFun.toFun_one"],
 ["checkType", "UniformOnFun.toFun_smul"],
 ["checkType", "UniformOnFun.toFun_sub"],
 ["checkType", "UniformOnFun.toFun_zero"],
 ["checkType", "UniformOnFun.zero_apply"],
 ["checkType", "UniqueDiffOn.image"],
 ["checkType", "UniqueDiffOn.prod"],
 ["checkType", "UniqueDiffWithinAt.prod"],
 ["checkType", "UniqueMDiffOn.image_denseRange"],
 ["checkType", "UniqueMDiffOn.image_denseRange'"],
 ["checkType", "UniqueMDiffOn.prod"],
 ["checkType", "UniqueMDiffWithinAt.image_denseRange"],
 ["checkType", "UniqueMDiffWithinAt.prod"],
 ["checkType", "Unitization.antilipschitzWith_addEquiv"],
 ["checkType", "Unitization.cobounded_eq_aux"],
 ["checkType", "Unitization.lipschitzWith_addEquiv"],
 ["checkType", "Unitization.nnnorm_def"],
 ["checkType", "Unitization.nnnorm_eq_sup"],
 ["checkType", "Unitization.norm_def"],
 ["checkType", "Unitization.norm_eq_sup"],
 ["checkType", "Unitization.norm_splitMul_snd_sq"],
 ["checkType", "Unitization.splitMul_apply"],
 ["checkType", "Unitization.splitMul_injective"],
 ["checkType", "Unitization.splitMul_injective_of_clm_mul_injective"],
 ["checkType", "Unitization.uniformEmbedding_addEquiv"],
 ["checkType", "Unitization.uniformity_eq_aux"],
 ["checkType", "UpperHalfPlane.bounded_mem"],
 ["checkType", "UpperHalfPlane.c_mul_im_sq_le_normSq_denom"],
 ["checkType", "UpperHalfPlane.cosh_half_dist"],
 ["checkType", "UpperHalfPlane.exp_half_dist"],
 ["checkType", "UpperHalfPlane.im_smul_eq_div_normSq"],
 ["checkType",
  "UpperHalfPlane.instSmoothManifoldWithCornersComplexToNontriviallyNormedFieldInstDenselyNormedFieldComplexInstNormedAddCommGroupComplexToNormedSpaceToNormedFieldToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupModelWithCornersSelfUpperHalfPlaneInstTopologicalSpaceUpperHalfPlaneInstChartedSpaceComplexToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexUpperHalfPlaneInstTopologicalSpaceUpperHalfPlane"],
 ["checkType", "UpperHalfPlane.mdifferentiable_coe"],
 ["checkType", "UpperHalfPlane.normSq_denom_ne_zero"],
 ["checkType", "UpperHalfPlane.normSq_denom_pos"],
 ["checkType", "UpperHalfPlane.normSq_ne_zero"],
 ["checkType", "UpperHalfPlane.normSq_pos"],
 ["checkType", "UpperHalfPlane.sinh_half_dist_add_dist"],
 ["checkType", "UpperHalfPlane.smooth_coe"],
 ["checkType", "UpperHalfPlane.smulAux'_im"],
 ["checkType", "UpperHalfPlane.specialLinearGroup_apply"],
 ["checkType", "UpperHalfPlane.tanh_half_dist"],
 ["checkType", "UpperHalfPlane.zero_at_im_infty"],
 ["checkType", "VectorBundle.pullback"],
 ["checkType", "VectorBundleCore.coe_coordChange"],
 ["checkType", "VectorBundleCore.coordChange_comp"],
 ["checkType", "VectorBundleCore.coordChange_self"],
 ["checkType", "VectorBundleCore.localTriv_apply"],
 ["checkType", "VectorBundleCore.localTriv_coordChange_eq"],
 ["checkType", "VectorBundleCore.localTriv_symm_apply"],
 ["checkType", "VectorBundleCore.localTriv_symm_fst"],
 ["checkType", "VectorBundleCore.mk"],
 ["checkType", "VectorBundleCore.rec"],
 ["checkType", "VectorBundleCore.toFiberBundleCore_coordChange"],
 ["checkType", "VectorBundleCore.trivializationAt_coordChange_eq"],
 ["checkType", "VectorFourier.fourierIntegral_add"],
 ["checkType", "VectorFourier.fourierIntegral_comp_add_right"],
 ["checkType", "VectorFourier.fourierIntegral_continuous"],
 ["checkType", "VectorFourier.fourier_integral_convergent_iff"],
 ["checkType", "VectorPrebundle.coordChange_apply"],
 ["checkType", "VectorPrebundle.exists_coordChange"],
 ["checkType", "VectorPrebundle.mk"],
 ["checkType", "VectorPrebundle.mk_coordChange"],
 ["checkType", "VectorPrebundle.mk_smoothCoordChange"],
 ["checkType", "VectorPrebundle.rec"],
 ["checkType", "VectorPrebundle.smoothCoordChange_apply"],
 ["checkType", "WStarAlgebra.exists_predual"],
 ["checkType", "WStarAlgebra.mk"],
 ["checkType", "WStarAlgebra.rec"],
 ["checkType", "WeakDual.coe_toNormedDual"],
 ["checkType", "WeakDual.isClosed_closedBall"],
 ["checkType", "WeakDual.isClosed_image_coe_of_bounded_of_closed"],
 ["checkType", "WeakDual.isClosed_image_polar_of_mem_nhds"],
 ["checkType", "WeakDual.isCompact_closedBall"],
 ["checkType", "WeakDual.isCompact_of_bounded_of_closed"],
 ["checkType", "WeakDual.polar_def"],
 ["checkType", "WeakDual.toNormedDual_apply"],
 ["checkType", "WeakDual.toNormedDual_eq_iff"],
 ["checkType", "WithLp.dist_equiv_symm_fst"],
 ["checkType", "WithLp.dist_equiv_symm_snd"],
 ["checkType", "WithLp.edist_equiv_symm_fst"],
 ["checkType", "WithLp.edist_equiv_symm_snd"],
 ["checkType", "WithLp.equiv_fst"],
 ["checkType", "WithLp.equiv_pi_apply"],
 ["checkType", "WithLp.equiv_single"],
 ["checkType", "WithLp.equiv_snd"],
 ["checkType", "WithLp.equiv_symm_fst"],
 ["checkType", "WithLp.equiv_symm_pi_apply"],
 ["checkType", "WithLp.equiv_symm_single"],
 ["checkType", "WithLp.equiv_symm_snd"],
 ["checkType", "WithLp.nndist_equiv_symm_fst"],
 ["checkType", "WithLp.nndist_equiv_symm_snd"],
 ["checkType", "WithLp.nnnorm_equiv_symm_fst"],
 ["checkType", "WithLp.nnnorm_equiv_symm_snd"],
 ["checkType", "WithLp.norm_equiv_symm_fst"],
 ["checkType", "WithLp.norm_equiv_symm_snd"],
 ["checkType", "WithLp.prodContinuousLinearEquiv_apply"],
 ["checkType", "WithLp.prodContinuousLinearEquiv_symm_apply"],
 ["checkType", "WithLp.prod_antilipschitzWith_equiv"],
 ["checkType", "WithLp.prod_antilipschitzWith_equiv_aux"],
 ["checkType", "WithLp.prod_continuous_equiv"],
 ["checkType", "WithLp.prod_continuous_equiv_symm"],
 ["checkType", "WithLp.prod_infty_equiv_isometry"],
 ["checkType", "WithLp.prod_lipschitzWith_equiv"],
 ["checkType", "WithLp.prod_lipschitzWith_equiv_aux"],
 ["checkType", "WithLp.prod_nndist_eq_of_L2"],
 ["checkType", "WithLp.prod_nnnorm_eq_of_L2"],
 ["checkType", "WithLp.prod_nnnorm_equiv"],
 ["checkType", "WithLp.prod_nnnorm_equiv_symm"],
 ["checkType", "WithLp.prod_norm_equiv"],
 ["checkType", "WithLp.prod_norm_equiv_symm"],
 ["checkType", "WithLp.prod_uniformContinuous_equiv"],
 ["checkType", "WithLp.prod_uniformContinuous_equiv_symm"],
 ["checkType", "WithSeminorms.T1_of_separating"],
 ["checkType", "WithSeminorms.banach_steinhaus"],
 ["checkType", "WithSeminorms.congr_equiv"],
 ["checkType", "WithSeminorms.continuousLinearMapOfTendsto"],
 ["checkType", "WithSeminorms.continuous_seminorm"],
 ["checkType", "WithSeminorms.equicontinuous_TFAE"],
 ["checkType", "WithSeminorms.finset_sups"],
 ["checkType", "WithSeminorms.hasBasis_ball"],
 ["checkType", "WithSeminorms.hasBasis_zero_ball"],
 ["checkType", "WithSeminorms.image_isVonNBounded_iff_finset_seminorm_bounded"],
 ["checkType", "WithSeminorms.image_isVonNBounded_iff_seminorm_bounded"],
 ["checkType", "WithSeminorms.isOpen_iff_mem_balls"],
 ["checkType", "WithSeminorms.isVonNBounded_iff_finset_seminorm_bounded"],
 ["checkType", "WithSeminorms.isVonNBounded_iff_seminorm_bounded"],
 ["checkType", "WithSeminorms.mem_nhds_iff"],
 ["checkType", "WithSeminorms.partial_sups"],
 ["checkType", "WithSeminorms.separating_iff_T1"],
 ["checkType", "WithSeminorms.separating_of_T1"],
 ["checkType", "WithSeminorms.tendsto_nhds"],
 ["checkType", "WithSeminorms.tendsto_nhds'"],
 ["checkType", "WithSeminorms.tendsto_nhds_atTop"],
 ["checkType",
  "WithSeminorms.uniformEquicontinuous_iff_bddAbove_and_continuous_iSup"],
 ["checkType",
  "WithSeminorms.uniformEquicontinuous_iff_exists_continuous_seminorm"],
 ["checkType", "WittVector.fromPadicInt_comp_toPadicInt_ext"],
 ["checkType", "WittVector.toPadicInt_comp_fromPadicInt_ext"],
 ["checkType", "ZeroAtInftyContinuousMap.add_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.bounded"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_add"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_comp_to_continuous_fun"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_copy"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_mul"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_neg"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_nsmulRec"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_smul"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_star"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_sub"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_toContinuousMap"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_zero"],
 ["checkType", "ZeroAtInftyContinuousMap.coe_zsmulRec"],
 ["checkType", "ZeroAtInftyContinuousMap.copy"],
 ["checkType", "ZeroAtInftyContinuousMap.copy_eq"],
 ["checkType", "ZeroAtInftyContinuousMap.ext"],
 ["checkType", "ZeroAtInftyContinuousMap.instCstarRing"],
 ["checkType", "ZeroAtInftyContinuousMap.instNormedStarGroup"],
 ["checkType", "ZeroAtInftyContinuousMap.isBounded_image"],
 ["checkType", "ZeroAtInftyContinuousMap.isBounded_range"],
 ["checkType", "ZeroAtInftyContinuousMap.mul_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.neg_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.smul_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.star_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.sub_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.tendsto_iff_tendstoUniformly"],
 ["checkType", "ZeroAtInftyContinuousMap.toBCF_apply"],
 ["checkType", "ZeroAtInftyContinuousMap.toBCF_toFun"],
 ["checkType", "ZeroAtInftyContinuousMap.uniformContinuous"],
 ["checkType", "ZeroAtInftyContinuousMap.zero_apply"],
 ["checkType", "ZeroAtInftyContinuousMapClass.mk"],
 ["checkType", "ZeroAtInftyContinuousMapClass.rec"],
 ["checkType", "ZeroAtInftyContinuousMapClass.zero_at_infty"],
 ["checkType", "ZeroHomClass.bound_of_antilipschitz"],
 ["checkType", "Zspan.ceil"],
 ["checkType", "Zspan.ceil_eq_self_of_mem"],
 ["checkType", "Zspan.coe_floor_self"],
 ["checkType", "Zspan.discreteTopology_pi_basisFun"],
 ["checkType", "Zspan.exist_unique_vadd_mem_fundamentalDomain"],
 ["checkType", "Zspan.floor"],
 ["checkType", "Zspan.floor_eq_self_of_mem"],
 ["checkType", "Zspan.fract_add_zspan"],
 ["checkType", "Zspan.fract_apply"],
 ["checkType", "Zspan.fract_eq_fract"],
 ["checkType", "Zspan.fract_zspan_add"],
 ["checkType",
  "Zspan.instDiscreteTopologySubtypeMemSubmoduleIntInstSemiringIntToAddCommMonoidToAddCommGroupIntModuleInstMembershipSetLikeSpanRangeCoeBasisRealSemiringToModuleNormedFieldToSeminormedAddCommGroupFunLikeInstTopologicalSpaceSubtypeToTopologicalSpaceToUniformSpaceToPseudoMetricSpace"],
 ["checkType", "Zspan.isAddFundamentalDomain"],
 ["checkType", "Zspan.map_fundamentalDomain"],
 ["checkType", "Zspan.measure_fundamentalDomain"],
 ["checkType", "Zspan.mem_fundamentalDomain"],
 ["checkType", "Zspan.norm_fract_le"],
 ["checkType", "Zspan.quotientEquiv"],
 ["checkType", "Zspan.quotientEquiv_apply_mk"],
 ["checkType", "Zspan.repr_ceil_apply"],
 ["checkType", "Zspan.repr_floor_apply"],
 ["checkType", "Zspan.repr_fract_apply"],
 ["checkType", "Zspan.vadd_mem_fundamentalDomain"],
 ["checkType", "Zspan.volume_fundamentalDomain"],
 ["checkType", "Zsqrtd.toReal_apply"],
 ["checkType", "Zsqrtd.toReal_injective"],
 ["checkType", "bernstein.probability"],
 ["checkType", "bernstein.variance"],
 ["checkType", "bernsteinApproximation.apply"],
 ["checkType", "bernsteinApproximation.lt_of_mem_S"],
 ["checkType", "circle.argEquiv_apply_coe"],
 ["checkType", "circle.argEquiv_symm_apply"],
 ["checkType", "circle.argPartialEquiv_symm_apply"],
 ["checkType", "circle.ofConjDivSelf_coe"],
 ["checkType", "circle.toUnits_apply"],
 ["checkType", "circleIntegral.integral_congr"],
 ["checkType", "circleIntegral.integral_const_mul"],
 ["checkType", "circleIntegral.integral_smul_const"],
 ["checkType", "circleIntegral.integral_sub_center_inv"],
 ["checkType", "circleIntegral.integral_sub_inv_of_mem_ball"],
 ["checkType", "circleIntegral.integral_sub_zpow_of_ne"],
 ["checkType", "circleIntegral.integral_sub_zpow_of_undef"],
 ["checkType", "derivWithin.comp"],
 ["checkType", "derivWithin.scomp"],
 ["checkType", "eVariationOn.comp_le_of_antitoneOn"],
 ["checkType", "eVariationOn.comp_le_of_monotoneOn"],
 ["checkType", "eVariationOn.comp_ofDual"],
 ["checkType", "eVariationOn.eq_of_eqOn"],
 ["checkType", "elementalStarAlgebra.characterSpaceToSpectrum_coe"],
 ["checkType", "expNegInvGlue.hasDerivAt_polynomial_eval_inv_mul"],
 ["checkType", "fderiv.comp_deriv"],
 ["checkType", "fderivWithin.comp"],
 ["checkType", "fderivWithin.comp_derivWithin"],
 ["checkType", "fderivWithin.comp₃"],
 ["checkType", "fourierCoeff.const_mul"],
 ["checkType", "fourierCoeffOn.const_mul"],
 ["checkType", "intervalIntegral.hasDerivAt_integral_of_dominated_loc_of_lip"],
 ["checkType", "intervalIntegral.hasFDerivAt_integral_of_dominated_loc_of_lip"],
 ["checkType", "intervalIntegral.hasSum_intervalIntegral_of_summable_norm"],
 ["checkType", "intervalIntegral.integral_congr"],
 ["checkType", "intervalIntegral.integral_ofReal"],
 ["checkType", "intervalIntegral.tsum_intervalIntegral_eq_of_summable_norm"],
 ["checkType", "jacobiSym.at_neg_one"],
 ["checkType", "jacobiSym.at_neg_two"],
 ["checkType", "jacobiSym.at_two"],
 ["checkType", "jacobiSym.neg"],
 ["checkType", "jacobiSym.value_at"],
 ["checkType", "legendreSym.at_neg_two"],
 ["checkType", "legendreSym.at_two"],
 ["checkType", "padicNormE.add_eq_max_of_ne'"],
 ["checkType", "padicNormE.defn"],
 ["checkType", "padicNormE.eq_padic_norm'"],
 ["checkType", "padicNormE.image'"],
 ["checkType", "padicNormE.is_norm"],
 ["checkType", "padicNormE.nonarchimedean'"],
 ["checkType", "polynomialFunctions.eq_adjoin_X"],
 ["checkType", "polynomialFunctions.le_equalizer"],
 ["checkType", "polynomialFunctions.starClosure_eq_adjoin_X"],
 ["checkType", "polynomialFunctions.starClosure_le_equalizer"],
 ["checkType", "polynomialFunctions.starClosure_topologicalClosure"],
 ["checkType", "skewAdjoint.I_smul_neg_I"],
 ["checkType", "skewAdjoint.negISMul_apply_coe"],
 ["checkType", "smoothSheaf.ι_evalHom_apply"],
 ["checkType", "smoothSheafAddCommGroup.compLeft"],
 ["checkType", "smoothSheafCommGroup.compLeft"],
 ["checkType", "smoothSheafCommRing.evalHom_germ"],
 ["checkType", "smoothSheafCommRing.eval_germ"],
 ["checkType", "smoothSheafCommRing.eval_surjective"],
 ["checkType", "smoothSheafCommRing.forgetStalk_hom_comp_evalHom_apply"],
 ["checkType", "smoothSheafCommRing.forgetStalk_inv_comp_eval"],
 ["checkType", "smoothSheafCommRing.forgetStalk_inv_comp_eval_apply"],
 ["checkType", "smoothSheafCommRing.forgetStalk_inv_comp_eval_assoc"],
 ["checkType", "smoothSheafCommRing.ι_evalHom_apply"],
 ["checkType", "smoothSheafCommRing.ι_forgetStalk_hom"],
 ["checkType", "smoothSheafCommRing.ι_forgetStalk_hom_apply"],
 ["checkType", "smoothSheafCommRing.ι_forgetStalk_hom_assoc"],
 ["checkType", "smoothSheafCommRing.ι_forgetStalk_inv_apply"],
 ["checkType", "solvableByRad.induction"],
 ["checkType", "solvableByRad.isSolvable'"],
 ["checkType", "spectrum.algebraMap_eq_of_mem"],
 ["checkType", "spectrum.gelfandTransform_eq"],
 ["checkType", "spectrum.map_polynomial_aeval"],
 ["checkType", "thickenedIndicator.coeFn_eq_comp"],
 ["checkType", "AddChar.IsPrimitive.zmod_char_eq_one_iff"],
 ["checkType", "AddCommGroupCat.enough_injectives_aux_proofs.divBy_self"],
 ["checkType",
  "AddCommGroupCat.enough_injectives_aux_proofs.eq_zero_of_toRatCircle_apply_self"],
 ["checkType",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_apply"],
 ["checkType",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_apply_self"],
 ["checkType",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_symm_apply_coe"],
 ["checkType", "AddCommGroupCat.enough_injectives_aux_proofs.toNext_apply"],
 ["checkType", "AddCommGroupCat.enough_injectives_aux_proofs.toNext_inj"],
 ["checkType",
  "AddCommGroupCat.enough_injectives_aux_proofs.toRatCircle_apply"],
 ["checkType", "AddSubgroup.normedMk.apply"],
 ["checkType",
  "Affine.Simplex.centroid_eq_affineCombination_of_pointsWithCircumcenter"],
 ["checkType",
  "Affine.Simplex.circumcenter_eq_affineCombination_of_pointsWithCircumcenter"],
 ["checkType",
  "Affine.Simplex.coe_orthogonalProjection_vadd_smul_vsub_orthogonalProjection"],
 ["checkType", "Affine.Simplex.dist_circumcenter_sq_eq_sq_sub_circumradius"],
 ["checkType",
  "Affine.Simplex.dist_sq_eq_dist_orthogonalProjection_sq_add_dist_orthogonalProjection_sq"],
 ["checkType",
  "Affine.Simplex.mongePoint_eq_affineCombination_of_pointsWithCircumcenter"],
 ["checkType",
  "Affine.Simplex.mongePoint_vsub_face_centroid_eq_weightedVSub_of_pointsWithCircumcenter"],
 ["checkType", "Affine.Simplex.orthogonalProjection_circumcenter"],
 ["checkType",
  "Affine.Simplex.orthogonalProjection_eq_circumcenter_of_dist_eq"],
 ["checkType",
  "Affine.Simplex.orthogonalProjection_eq_circumcenter_of_exists_dist_eq"],
 ["checkType",
  "Affine.Simplex.orthogonalProjection_vadd_smul_vsub_orthogonalProjection"],
 ["checkType",
  "Affine.Simplex.point_eq_affineCombination_of_pointsWithCircumcenter"],
 ["checkType",
  "Affine.Simplex.reflection_circumcenter_eq_affineCombination_of_pointsWithCircumcenter"],
 ["checkType", "Affine.Triangle.circumsphere_eq_of_dist_of_oangle"],
 ["checkType", "Affine.Triangle.dist_orthocenter_reflection_circumcenter"],
 ["checkType",
  "Affine.Triangle.dist_orthocenter_reflection_circumcenter_finset"],
 ["checkType",
  "Affine.Triangle.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_circumcenter"],
 ["checkType", "AffineSubspace.WOppSide.map"],
 ["checkType", "AffineSubspace.WSameSide.map"],
 ["checkType", "AffineSubspace.isometryEquivMap.apply_symm_apply"],
 ["checkType", "AffineSubspace.isometryEquivMap.coe_apply"],
 ["checkType", "AffineSubspace.isometryEquivMap.toAffineMap_eq"],
 ["checkType", "Asymptotics.IsBigO.continuousMultilinearMap_apply_eq_zero"],
 ["checkType", "Bornology.IsVonNBounded.image"],
 ["checkType", "BoundedContinuousFunction.NNReal.upper_bound"],
 ["checkType", "BoxIntegral.Box.Icc_def"],
 ["checkType", "BoxIntegral.Box.Icc_eq_pi"],
 ["checkType", "BoxIntegral.Box.Ioo_ae_eq_Icc"],
 ["checkType", "BoxIntegral.Box.Ioo_subset_Icc"],
 ["checkType", "BoxIntegral.Box.Ioo_subset_coe"],
 ["checkType", "BoxIntegral.Box.coe_ae_eq_Icc"],
 ["checkType", "BoxIntegral.Box.coe_subset_Icc"],
 ["checkType", "BoxIntegral.Box.continuousOn_face_Icc"],
 ["checkType", "BoxIntegral.Box.diam_Icc_le_of_distortion_le"],
 ["checkType", "BoxIntegral.Box.exists_seq_mono_tendsto"],
 ["checkType", "BoxIntegral.Box.iUnion_Ioo_of_tendsto"],
 ["checkType", "BoxIntegral.Box.isCompact_Icc"],
 ["checkType", "BoxIntegral.Box.le_iff_Icc"],
 ["checkType", "BoxIntegral.Box.lower_mem_Icc"],
 ["checkType", "BoxIntegral.Box.mapsTo_insertNth_face_Icc"],
 ["checkType", "BoxIntegral.Box.measurableSet_Icc"],
 ["checkType", "BoxIntegral.Box.measurableSet_Ioo"],
 ["checkType", "BoxIntegral.Box.measure_Icc_lt_top"],
 ["checkType", "BoxIntegral.Box.splitCenterBoxEmb_apply"],
 ["checkType", "BoxIntegral.Box.subbox_induction_on"],
 ["checkType", "BoxIntegral.Box.subbox_induction_on'"],
 ["checkType", "BoxIntegral.Box.upper_mem_Icc"],
 ["checkType", "BoxIntegral.Box.volume_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.coe_inj"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.coe_injective"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.coe_mk"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.instFunLikeBoxAdditiveMapBox"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.instZeroBoxAdditiveMap_zero_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.map_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.map_split_add"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.restrict_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.sum_boxes_congr"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.sum_partition_boxes"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.toSMul_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.upperSubLower"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.upperSubLower_apply"],
 ["checkType", "BoxIntegral.BoxAdditiveMap.volume_apply"],
 ["checkType", "BoxIntegral.HasIntegral.mcShane_of_forall_isLittleO"],
 ["checkType",
  "BoxIntegral.HasIntegral.of_bRiemann_eq_false_of_forall_isLittleO"],
 ["checkType", "BoxIntegral.HasIntegral.of_le_Henstock_of_forall_isLittleO"],
 ["checkType", "BoxIntegral.Integrable.toBoxAdditive_apply"],
 ["checkType",
  "BoxIntegral.IntegrationParams.tendsto_embedBox_toFilteriUnion_top"],
 ["checkType", "BoxIntegral.Prepartition.card_filter_mem_Icc_le"],
 ["checkType", "BoxIntegral.Prepartition.injOn_setOf_mem_Icc_setOf_lower_eq"],
 ["checkType", "BoxIntegral.TaggedPrepartition.distortion_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.forall_mem_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.iUnion_mk"],
 ["checkType", "BoxIntegral.TaggedPrepartition.iUnion_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.isHenstock_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.isHenstock_single_iff"],
 ["checkType", "BoxIntegral.TaggedPrepartition.isPartition_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.isPartition_single_iff"],
 ["checkType", "BoxIntegral.TaggedPrepartition.isSubordinate_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.mem_mk"],
 ["checkType", "BoxIntegral.TaggedPrepartition.mem_single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.mk"],
 ["checkType", "BoxIntegral.TaggedPrepartition.rec"],
 ["checkType", "BoxIntegral.TaggedPrepartition.single"],
 ["checkType", "BoxIntegral.TaggedPrepartition.single_boxes_val"],
 ["checkType", "BoxIntegral.TaggedPrepartition.single_tag"],
 ["checkType", "BoxIntegral.TaggedPrepartition.tag_mem_Icc"],
 ["checkType", "BumpCovering.IsSubordinate.toSmoothPartitionOfUnity"],
 ["checkType", "CompHaus.finiteCoproduct.ι_desc_apply"],
 ["checkType", "CompHaus.finiteCoproduct.ι_injective"],
 ["checkType", "CompHaus.finiteCoproduct.ι_jointly_surjective"],
 ["checkType", "Complex.AbsTheory.abs_conj"],
 ["checkType", "Complex.IsExpCmpFilter.isLittleO_log_abs_re"],
 ["checkType", "Complex.IsExpCmpFilter.isTheta_cpow_exp_re_mul_log"],
 ["checkType", "Complex.IsExpCmpFilter.tendsto_abs"],
 ["checkType", "Complex.UnitDisc.abs_lt_one"],
 ["checkType", "Complex.UnitDisc.abs_ne_one"],
 ["checkType", "Complex.UnitDisc.coe_conj"],
 ["checkType", "Complex.UnitDisc.coe_mk"],
 ["checkType", "Complex.UnitDisc.mk"],
 ["checkType", "Complex.UnitDisc.mk_coe"],
 ["checkType", "Complex.UnitDisc.mk_neg"],
 ["checkType", "Complex.UnitDisc.normSq_lt_one"],
 ["checkType", "ContinuousLinearMap.IsPositive.adjoint_conj"],
 ["checkType", "ContinuousLinearMap.IsPositive.conj_adjoint"],
 ["checkType", "ContinuousLinearMap.IsPositive.inner_nonneg_left"],
 ["checkType", "ContinuousLinearMap.IsPositive.inner_nonneg_right"],
 ["checkType", "ContinuousLinearMap.IsPositive.orthogonalProjection_comp"],
 ["checkType", "ContinuousLinearMap.NonlinearRightInverse.mk"],
 ["checkType", "ContinuousLinearMap.NonlinearRightInverse.rec"],
 ["checkType", "ContinuousLinearMap.NonlinearRightInverse.right_inv"],
 ["checkType", "ContinuousLinearMap.NonlinearRightInverse.right_inv'"],
 ["checkType", "ContinuousLinearMap.strongTopology.embedding_coeFn"],
 ["checkType", "ContinuousLinearMap.strongTopology.hasBasis_nhds_zero"],
 ["checkType",
  "ContinuousLinearMap.strongTopology.hasBasis_nhds_zero_of_basis"],
 ["checkType", "ContinuousLinearMap.strongUniformity.uniformEmbedding_coeFn"],
 ["checkType", "ContinuousMap.Homotopy.apply_one"],
 ["checkType", "ContinuousMap.Homotopy.apply_one_path"],
 ["checkType", "ContinuousMap.Homotopy.apply_zero"],
 ["checkType", "ContinuousMap.Homotopy.apply_zero_path"],
 ["checkType", "ContinuousMap.Homotopy.cast_apply"],
 ["checkType", "ContinuousMap.Homotopy.coe_toContinuousMap"],
 ["checkType", "ContinuousMap.Homotopy.compContinuousMap_apply"],
 ["checkType", "ContinuousMap.Homotopy.congr_arg"],
 ["checkType", "ContinuousMap.Homotopy.congr_fun"],
 ["checkType", "ContinuousMap.Homotopy.continuous"],
 ["checkType", "ContinuousMap.Homotopy.curry_apply"],
 ["checkType", "ContinuousMap.Homotopy.diagonalPath"],
 ["checkType", "ContinuousMap.Homotopy.diagonalPath'"],
 ["checkType", "ContinuousMap.Homotopy.eq_diag_path"],
 ["checkType", "ContinuousMap.Homotopy.eq_path_of_eq_image"],
 ["checkType", "ContinuousMap.Homotopy.evalAt"],
 ["checkType", "ContinuousMap.Homotopy.evalAt_eq"],
 ["checkType", "ContinuousMap.Homotopy.ext"],
 ["checkType", "ContinuousMap.Homotopy.extend_apply_coe"],
 ["checkType", "ContinuousMap.Homotopy.extend_apply_of_le_zero"],
 ["checkType", "ContinuousMap.Homotopy.extend_apply_of_mem_I"],
 ["checkType", "ContinuousMap.Homotopy.extend_apply_of_one_le"],
 ["checkType", "ContinuousMap.Homotopy.hcomp_apply"],
 ["checkType", "ContinuousMap.Homotopy.heq_path_of_eq_image"],
 ["checkType", "ContinuousMap.Homotopy.map_one_left"],
 ["checkType", "ContinuousMap.Homotopy.map_zero_left"],
 ["checkType", "ContinuousMap.Homotopy.mk"],
 ["checkType", "ContinuousMap.Homotopy.prod_apply"],
 ["checkType", "ContinuousMap.Homotopy.rec"],
 ["checkType", "ContinuousMap.Homotopy.refl_apply"],
 ["checkType", "ContinuousMap.Homotopy.symm_apply"],
 ["checkType", "ContinuousMap.Homotopy.trans_apply"],
 ["checkType", "ContinuousMap.Homotopy.ulift_apply"],
 ["checkType", "ContinuousMap.HomotopyEquiv.coe_invFun"],
 ["checkType", "ContinuousMap.HomotopyEquiv.toFun_eq_coe"],
 ["checkType", "ContinuousMap.HomotopyLike.map_one_left"],
 ["checkType", "ContinuousMap.HomotopyLike.map_zero_left"],
 ["checkType", "ContinuousMap.HomotopyLike.mk"],
 ["checkType", "ContinuousMap.HomotopyLike.rec"],
 ["checkType", "ContinuousMap.HomotopyRel.cast_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.cast_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.compContinuousMap_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.compContinuousMap_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.eq_fst"],
 ["checkType", "ContinuousMap.HomotopyRel.eq_snd"],
 ["checkType", "ContinuousMap.HomotopyRel.fst_eq_snd"],
 ["checkType", "ContinuousMap.HomotopyRel.pi_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.pi_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.prod_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.prod_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.refl_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.refl_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.symm_apply"],
 ["checkType", "ContinuousMap.HomotopyRel.symm_toFun"],
 ["checkType", "ContinuousMap.HomotopyRel.trans_apply"],
 ["checkType", "ContinuousMap.HomotopyWith.apply_one"],
 ["checkType", "ContinuousMap.HomotopyWith.apply_zero"],
 ["checkType", "ContinuousMap.HomotopyWith.cast_apply"],
 ["checkType", "ContinuousMap.HomotopyWith.cast_toFun"],
 ["checkType", "ContinuousMap.HomotopyWith.coeFn_injective"],
 ["checkType", "ContinuousMap.HomotopyWith.coe_toContinuousMap"],
 ["checkType", "ContinuousMap.HomotopyWith.coe_toHomotopy"],
 ["checkType", "ContinuousMap.HomotopyWith.continuous"],
 ["checkType", "ContinuousMap.HomotopyWith.ext"],
 ["checkType", "ContinuousMap.HomotopyWith.extendProp"],
 ["checkType", "ContinuousMap.HomotopyWith.prop"],
 ["checkType", "ContinuousMap.HomotopyWith.refl_apply"],
 ["checkType", "ContinuousMap.HomotopyWith.refl_toFun"],
 ["checkType", "ContinuousMap.HomotopyWith.symm_apply"],
 ["checkType", "ContinuousMap.HomotopyWith.symm_toFun"],
 ["checkType", "ContinuousMap.HomotopyWith.trans_apply"],
 ["checkType", "DirectSum.IsInternal.collectedBasis_orthonormal"],
 ["checkType", "DirectSum.IsInternal.collectedOrthonormalBasis"],
 ["checkType", "DirectSum.IsInternal.collectedOrthonormalBasis_mem"],
 ["checkType", "DirectSum.IsInternal.isometryL2OfOrthogonalFamily"],
 ["checkType", "DirectSum.IsInternal.isometryL2OfOrthogonalFamily_symm_apply"],
 ["checkType", "DirectSum.IsInternal.sigmaOrthonormalBasisIndexEquiv"],
 ["checkType", "DirectSum.IsInternal.sigmaOrthonormalBasisIndexEquiv_def"],
 ["checkType", "DirectSum.IsInternal.subordinateOrthonormalBasis"],
 ["checkType", "DirectSum.IsInternal.subordinateOrthonormalBasisIndex"],
 ["checkType", "DirectSum.IsInternal.subordinateOrthonormalBasisIndex_def"],
 ["checkType", "DirectSum.IsInternal.subordinateOrthonormalBasis_def"],
 ["checkType", "DirectSum.IsInternal.subordinateOrthonormalBasis_subordinate"],
 ["checkType",
  "EuclideanGeometry.Sphere.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center"],
 ["checkType", "EuclideanGeometry.Sphere.secondInter_eq_lineMap"],
 ["checkType",
  "EuclideanGeometry.Sphere.tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center"],
 ["checkType", "Filter.EventuallyEq.hasFDerivAtFilter_iff"],
 ["checkType", "Filter.EventuallyEq.hasStrictFDerivAt_iff"],
 ["checkType", "Filter.Tendsto.lineMap"],
 ["checkType", "Frm.Iso.mk_hom_toFun"],
 ["checkType", "Frm.Iso.mk_inv_toFun"],
 ["checkType", "Function.Injective.sOppSide_map_iff"],
 ["checkType", "Function.Injective.sSameSide_map_iff"],
 ["checkType", "Function.Injective.wOppSide_map_iff"],
 ["checkType", "Function.Injective.wSameSide_map_iff"],
 ["checkType", "Ideal.Quotient.norm_mk_le"],
 ["checkType", "Ideal.Quotient.norm_mk_lt"],
 ["checkType", "InnerProductGeometry.ConformalAt.preserves_angle"],
 ["checkType", "InnerProductGeometry.IsConformalMap.preserves_angle"],
 ["checkType", "InnerProductSpace.Core.conj_symm"],
 ["checkType", "InnerProductSpace.Core.inner_conj_symm"],
 ["checkType", "InnerProductSpace.Core.inner_im_symm"],
 ["checkType", "InnerProductSpace.Core.inner_mul_inner_self_le"],
 ["checkType", "InnerProductSpace.Core.inner_mul_symm_re_eq_norm"],
 ["checkType", "InnerProductSpace.Core.inner_re_symm"],
 ["checkType", "InnerProductSpace.Core.inner_self_eq_norm_mul_norm"],
 ["checkType", "InnerProductSpace.Core.inner_self_im"],
 ["checkType", "InnerProductSpace.Core.inner_self_nonneg"],
 ["checkType", "InnerProductSpace.Core.inner_self_ofReal_re"],
 ["checkType", "InnerProductSpace.Core.inner_smul_left"],
 ["checkType", "InnerProductSpace.Core.mk"],
 ["checkType", "InnerProductSpace.Core.nonneg_re"],
 ["checkType", "InnerProductSpace.Core.norm_eq_sqrt_inner"],
 ["checkType", "InnerProductSpace.Core.rec"],
 ["checkType", "InnerProductSpace.Core.smul_left"],
 ["checkType", "InnerProductSpaceable.inner_.conj_symm"],
 ["checkType", "InnerProductSpaceable.inner_.norm_sq"],
 ["checkType", "IsCyclotomicExtension.Rat.discr_odd_prime'"],
 ["checkType", "IsCyclotomicExtension.Rat.discr_prime_pow'"],
 ["checkType", "IsCyclotomicExtension.Rat.discr_prime_pow_eq_unit_mul_pow'"],
 ["checkType", "IsCyclotomicExtension.Rat.discr_prime_pow_ne_two'"],
 ["checkType", "IsSolvableByRad.below.base"],
 ["checkType", "IsSolvableByRad.below.rec"],
 ["checkType", "LinearMap.IsSymmetric.apply_clm"],
 ["checkType", "LinearMap.IsSymmetric.apply_eigenvectorBasis"],
 ["checkType", "LinearMap.IsSymmetric.coe_reApplyInnerSelf_apply"],
 ["checkType", "LinearMap.IsSymmetric.conj_eigenvalue_eq_self"],
 ["checkType", "LinearMap.IsSymmetric.conj_inner_sym"],
 ["checkType", "LinearMap.IsSymmetric.continuous"],
 ["checkType", "LinearMap.IsSymmetric.diagonalization_apply_self_apply"],
 ["checkType", "LinearMap.IsSymmetric.diagonalization_symm_apply"],
 ["checkType", "LinearMap.IsSymmetric.directSum_decompose_apply"],
 ["checkType", "LinearMap.IsSymmetric.eigenvalues_def"],
 ["checkType", "LinearMap.IsSymmetric.eigenvectorBasis_apply_self_apply"],
 ["checkType", "LinearMap.IsSymmetric.hasEigenvalue_iInf_of_finiteDimensional"],
 ["checkType", "LinearMap.IsSymmetric.hasEigenvalue_iSup_of_finiteDimensional"],
 ["checkType", "LinearMap.IsSymmetric.hasEigenvector_eigenvectorBasis"],
 ["checkType", "LinearMap.IsSymmetric.hasStrictFDerivAt_reApplyInnerSelf"],
 ["checkType", "LinearMap.IsSymmetric.inner_map_polarization"],
 ["checkType", "LinearMap.IsSymmetric.inner_map_self_eq_zero"],
 ["checkType",
  "LinearMap.IsSymmetric.invariant_orthogonalComplement_eigenspace"],
 ["checkType", "LinearMap.IsSymmetric.orthogonalComplement_iSup_eigenspaces"],
 ["checkType",
  "LinearMap.IsSymmetric.orthogonalComplement_iSup_eigenspaces_invariant"],
 ["checkType", "LinearMap.IsSymmetric.orthogonalFamily_eigenspaces"],
 ["checkType", "LinearMap.IsSymmetric.orthogonalFamily_eigenspaces'"],
 ["checkType", "LinearMap.IsSymmetric.restrict_invariant"],
 ["checkType", "LinearMap.IsSymmetric.toSelfAdjoint_apply"],
 ["checkType", "Locale.PT.isOpen_iff"],
 ["checkType", "Matrix.IsHermitian.coe_re_apply_self"],
 ["checkType", "Matrix.IsHermitian.coe_re_diag"],
 ["checkType", "Matrix.IsHermitian.eigenvalues_eq"],
 ["checkType", "Matrix.IsHermitian.eigenvectorMatrixInv_apply"],
 ["checkType", "Matrix.IsHermitian.eigenvectorMatrix_apply"],
 ["checkType", "Matrix.IsHermitian.mulVec_eigenvectorBasis"],
 ["checkType", "Matrix.IsHermitian.transpose_eigenvectorMatrix_apply"],
 ["checkType", "Matrix.PosDef.re_dotProduct_pos"],
 ["checkType", "Matrix.PosSemidef.re_dotProduct_nonneg"],
 ["checkType", "Matrix.PosSemidef.toLinearMap₂'_zero_iff"],
 ["checkType", "MeasureTheory.AEEqFun.toGermAddMonoidHom_apply"],
 ["checkType", "MeasureTheory.AEEqFun.toGermMonoidHom_apply"],
 ["checkType",
  "MeasureTheory.AEStronglyMeasurable.ae_integrable_condDistrib_map_iff"],
 ["checkType",
  "MeasureTheory.AEStronglyMeasurable.ae_integrable_condKernel_iff"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.apply_continuousLinearMap"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.compProd_mk_left"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.convolution_integrand"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.convolution_integrand'"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.convolution_integrand_snd"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.convolution_integrand_snd'"],
 ["checkType",
  "MeasureTheory.AEStronglyMeasurable.convolution_integrand_swap_snd"],
 ["checkType",
  "MeasureTheory.AEStronglyMeasurable.convolution_integrand_swap_snd'"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.im"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.integral_condDistrib"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.integral_condDistrib_map"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.integral_condKernel"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.integral_condexpKernel"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.integral_kernel_compProd"],
 ["checkType", "MeasureTheory.AEStronglyMeasurable.re"],
 ["checkType", "MeasureTheory.BoundedContinuousFunction.inner_toLp"],
 ["checkType", "MeasureTheory.ComplexMeasure.absolutelyContinuous_ennreal_iff"],
 ["checkType", "MeasureTheory.ComplexMeasure.equivSignedMeasure_apply"],
 ["checkType", "MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply"],
 ["checkType", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply"],
 ["checkType", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply"],
 ["checkType", "MeasureTheory.ComplexMeasure.im_apply"],
 ["checkType", "MeasureTheory.ComplexMeasure.re_apply"],
 ["checkType",
  "MeasureTheory.ComplexMeasure.singularPart_add_withDensity_rnDeriv_eq"],
 ["checkType",
  "MeasureTheory.ComplexMeasure.toComplexMeasure_to_signedMeasure"],
 ["checkType", "MeasureTheory.Content.innerContent_comap"],
 ["checkType", "MeasureTheory.Content.is_add_left_invariant_innerContent"],
 ["checkType", "MeasureTheory.Content.is_mul_left_invariant_innerContent"],
 ["checkType", "MeasureTheory.Content.outerMeasure_preimage"],
 ["checkType", "MeasureTheory.ContinuousMap.inner_toLp"],
 ["checkType", "MeasureTheory.FiniteMeasure.coe_toWeakDualBCNN"],
 ["checkType", "MeasureTheory.FiniteMeasure.ext_of_forall_lintegral_eq"],
 ["checkType", "MeasureTheory.FiniteMeasure.prod_prod"],
 ["checkType",
  "MeasureTheory.FiniteMeasure.tendsto_iff_forall_integral_tendsto"],
 ["checkType",
  "MeasureTheory.FiniteMeasure.tendsto_iff_forall_lintegral_tendsto"],
 ["checkType",
  "MeasureTheory.FiniteMeasure.tendsto_iff_forall_toWeakDualBCNN_tendsto"],
 ["checkType", "MeasureTheory.FiniteMeasure.tendsto_lintegral_nn_of_le_const"],
 ["checkType",
  "MeasureTheory.FiniteMeasure.tendsto_of_forall_integral_tendsto"],
 ["checkType",
  "MeasureTheory.FiniteMeasure.tendsto_testAgainstNN_filter_of_le_const"],
 ["checkType", "MeasureTheory.FiniteMeasure.tendsto_testAgainstNN_of_le_const"],
 ["checkType", "MeasureTheory.FiniteMeasure.testAgainstNN_coe_eq"],
 ["checkType", "MeasureTheory.FiniteMeasure.testAgainstNN_mono"],
 ["checkType", "MeasureTheory.FiniteMeasure.toMeasureAddMonoidHom_apply"],
 ["checkType", "MeasureTheory.FiniteMeasure.toWeakDualBCNN_apply"],
 ["checkType", "MeasureTheory.Integrable.apply_continuousLinearMap"],
 ["checkType", "MeasureTheory.Integrable.compProd_mk_left_ae"],
 ["checkType", "MeasureTheory.Integrable.condDistrib_ae"],
 ["checkType", "MeasureTheory.Integrable.condDistrib_ae_map"],
 ["checkType", "MeasureTheory.Integrable.condKernel_ae"],
 ["checkType", "MeasureTheory.Integrable.condexpKernel_ae"],
 ["checkType", "MeasureTheory.Integrable.convolution_integrand"],
 ["checkType",
  "MeasureTheory.Integrable.exists_boundedContinuous_integral_sub_le"],
 ["checkType",
  "MeasureTheory.Integrable.exists_boundedContinuous_lintegral_sub_le"],
 ["checkType", "MeasureTheory.Integrable.im"],
 ["checkType", "MeasureTheory.Integrable.integral_compProd"],
 ["checkType", "MeasureTheory.Integrable.integral_condDistrib"],
 ["checkType", "MeasureTheory.Integrable.integral_condDistrib_map"],
 ["checkType", "MeasureTheory.Integrable.integral_condKernel"],
 ["checkType", "MeasureTheory.Integrable.integral_condexpKernel"],
 ["checkType", "MeasureTheory.Integrable.integral_norm_compProd"],
 ["checkType", "MeasureTheory.Integrable.integral_norm_condDistrib"],
 ["checkType", "MeasureTheory.Integrable.integral_norm_condDistrib_map"],
 ["checkType", "MeasureTheory.Integrable.integral_norm_condKernel"],
 ["checkType", "MeasureTheory.Integrable.integral_norm_condexpKernel"],
 ["checkType", "MeasureTheory.Integrable.norm_integral_condDistrib"],
 ["checkType", "MeasureTheory.Integrable.norm_integral_condDistrib_map"],
 ["checkType", "MeasureTheory.Integrable.norm_integral_condKernel"],
 ["checkType", "MeasureTheory.Integrable.norm_integral_condexpKernel"],
 ["checkType", "MeasureTheory.Integrable.re"],
 ["checkType", "MeasureTheory.Integrable.re_im_iff"],
 ["checkType", "MeasureTheory.IntegrableOn.congr_fun"],
 ["checkType", "MeasureTheory.IsAddFundamentalDomain.image_of_equiv"],
 ["checkType", "MeasureTheory.IsAddFundamentalDomain.isAddLeftInvariant_map"],
 ["checkType", "MeasureTheory.IsAddFundamentalDomain.map_restrict_quotient"],
 ["checkType", "MeasureTheory.IsFundamentalDomain.image_of_equiv"],
 ["checkType", "MeasureTheory.IsFundamentalDomain.isMulLeftInvariant_map"],
 ["checkType", "MeasureTheory.IsFundamentalDomain.map_restrict_quotient"],
 ["checkType", "MeasureTheory.L1.integral_def"],
 ["checkType", "MeasureTheory.L1.integral_eq"],
 ["checkType", "MeasureTheory.L1.integral_eq_setToL1"],
 ["checkType", "MeasureTheory.L1.norm_setToL1_le_mul_norm"],
 ["checkType", "MeasureTheory.L1.norm_setToL1_le_mul_norm'"],
 ["checkType", "MeasureTheory.L1.norm_setToL1_le_norm_setToL1SCLM"],
 ["checkType", "MeasureTheory.L1.setToFun_eq_setToL1"],
 ["checkType", "MeasureTheory.L1.setToL1'"],
 ["checkType", "MeasureTheory.L1.setToL1_add_left"],
 ["checkType", "MeasureTheory.L1.setToL1_add_left'"],
 ["checkType", "MeasureTheory.L1.setToL1_congr_left"],
 ["checkType", "MeasureTheory.L1.setToL1_congr_left'"],
 ["checkType", "MeasureTheory.L1.setToL1_const"],
 ["checkType", "MeasureTheory.L1.setToL1_eq_setToL1'"],
 ["checkType", "MeasureTheory.L1.setToL1_eq_setToL1SCLM"],
 ["checkType", "MeasureTheory.L1.setToL1_indicatorConstLp"],
 ["checkType", "MeasureTheory.L1.setToL1_lipschitz"],
 ["checkType", "MeasureTheory.L1.setToL1_mono"],
 ["checkType", "MeasureTheory.L1.setToL1_mono_left"],
 ["checkType", "MeasureTheory.L1.setToL1_mono_left'"],
 ["checkType", "MeasureTheory.L1.setToL1_nonneg"],
 ["checkType", "MeasureTheory.L1.setToL1_simpleFunc_indicatorConst"],
 ["checkType", "MeasureTheory.L1.setToL1_smul"],
 ["checkType", "MeasureTheory.L1.setToL1_smul_left"],
 ["checkType", "MeasureTheory.L1.setToL1_smul_left'"],
 ["checkType", "MeasureTheory.L1.setToL1_zero_left"],
 ["checkType", "MeasureTheory.L1.setToL1_zero_left'"],
 ["checkType", "MeasureTheory.L1.tendsto_setToL1"],
 ["checkType", "MeasureTheory.Lp.coeFn_compMeasurePreserving"],
 ["checkType", "MeasureTheory.Lp.coeFn_const"],
 ["checkType", "MeasureTheory.Lp.compMeasurePreserving_val"],
 ["checkType", "MeasureTheory.Lp.compMeasurePreservingₗ_apply"],
 ["checkType", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_apply_coe"],
 ["checkType", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_toFun_coe"],
 ["checkType", "MeasureTheory.Lp.constL_apply"],
 ["checkType", "MeasureTheory.Lp.const_val"],
 ["checkType", "MeasureTheory.Lp.constₗ_apply"],
 ["checkType", "MeasureTheory.Lp.norm_compMeasurePreserving"],
 ["checkType", "MeasureTheory.Lp.norm_const"],
 ["checkType", "MeasureTheory.Lp.norm_const'"],
 ["checkType", "MeasureTheory.Lp.norm_const_le"],
 ["checkType", "MeasureTheory.MeasurableEquiv.measurePreserving_symm"],
 ["checkType", "MeasureTheory.Measure.IicSnd_apply"],
 ["checkType", "MeasureTheory.Measure.IicSnd_univ"],
 ["checkType", "MeasureTheory.Measure.addHaar_image_continuousLinearEquiv"],
 ["checkType", "MeasureTheory.Measure.addHaar_image_continuousLinearMap"],
 ["checkType", "MeasureTheory.Measure.addHaar_image_homothety"],
 ["checkType", "MeasureTheory.Measure.addHaar_image_linearMap"],
 ["checkType", "MeasureTheory.Measure.addHaar_parallelepiped"],
 ["checkType", "MeasureTheory.Measure.addHaar_preimage_continuousLinearEquiv"],
 ["checkType", "MeasureTheory.Measure.addHaar_preimage_continuousLinearMap"],
 ["checkType", "MeasureTheory.Measure.addHaar_preimage_linearEquiv"],
 ["checkType", "MeasureTheory.Measure.addHaar_preimage_linearMap"],
 ["checkType", "MeasureTheory.Measure.comapₗ_apply"],
 ["checkType", "MeasureTheory.Measure.comapₗ_eq_comap"],
 ["checkType", "MeasureTheory.Measure.compProd_apply"],
 ["checkType", "MeasureTheory.Measure.compProd_congr"],
 ["checkType", "MeasureTheory.Measure.dirac_compProd_apply"],
 ["checkType", "MeasureTheory.Measure.dirac_unit_compProd"],
 ["checkType", "MeasureTheory.Measure.eqOn_Icc_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.eqOn_Ico_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.eqOn_Ioc_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.eqOn_Ioo_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.eqOn_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.eqOn_open_of_ae_eq"],
 ["checkType", "MeasureTheory.Measure.integrable_compProd_iff"],
 ["checkType", "MeasureTheory.Measure.integral_compProd"],
 ["checkType", "MeasureTheory.Measure.isAddHaarMeasure_map"],
 ["checkType", "MeasureTheory.Measure.isAddHaarMeasure_map_of_isFiniteMeasure"],
 ["checkType", "MeasureTheory.Measure.isHaarMeasure_map"],
 ["checkType", "MeasureTheory.Measure.isHaarMeasure_map_of_isFiniteMeasure"],
 ["checkType", "MeasureTheory.Measure.le_liftLinear_apply"],
 ["checkType", "MeasureTheory.Measure.liftLinear"],
 ["checkType", "MeasureTheory.Measure.liftLinear_apply"],
 ["checkType", "MeasureTheory.Measure.liftLinear_apply₀"],
 ["checkType", "MeasureTheory.Measure.lintegral_compProd"],
 ["checkType", "MeasureTheory.Measure.map_def"],
 ["checkType", "MeasureTheory.Measure.map_linearMap_addHaar_eq_smul_addHaar"],
 ["checkType",
  "MeasureTheory.Measure.map_linearMap_addHaar_pi_eq_smul_addHaar"],
 ["checkType", "MeasureTheory.Measure.map_toOuterMeasure"],
 ["checkType", "MeasureTheory.Measure.mapₗ_apply_of_measurable"],
 ["checkType", "MeasureTheory.Measure.mapₗ_congr"],
 ["checkType", "MeasureTheory.Measure.mapₗ_eq_zero_iff"],
 ["checkType", "MeasureTheory.Measure.mapₗ_mk_apply_of_aemeasurable"],
 ["checkType", "MeasureTheory.Measure.mapₗ_ne_zero_iff"],
 ["checkType",
  "MeasureTheory.Measure.measurePreserving_homeomorphUnitSphereProd"],
 ["checkType", "MeasureTheory.Measure.measure_prod_compl_eq_zero"],
 ["checkType", "MeasureTheory.Measure.nullMeasurableSet_prod"],
 ["checkType", "MeasureTheory.Measure.nullMeasurableSet_prod_of_ne_zero"],
 ["checkType", "MeasureTheory.Measure.prodAssoc_prod"],
 ["checkType", "MeasureTheory.Measure.prod_eq"],
 ["checkType", "MeasureTheory.Measure.prod_eq_generateFrom"],
 ["checkType", "MeasureTheory.Measure.prod_prod"],
 ["checkType", "MeasureTheory.Measure.prod_restrict"],
 ["checkType", "MeasureTheory.Measure.restrict_prod_eq_prod_univ"],
 ["checkType",
  "MeasureTheory.Measure.restrict_toOuterMeasure_eq_toOuterMeasure_restrict"],
 ["checkType", "MeasureTheory.Measure.restrictₗ_apply"],
 ["checkType", "MeasureTheory.Measure.set_integral_compProd"],
 ["checkType", "MeasureTheory.Measure.set_lintegral_compProd"],
 ["checkType", "MeasureTheory.Measure.set_prod_ae_eq"],
 ["checkType", "MeasureTheory.Measure.sum_comp_equiv"],
 ["checkType", "MeasureTheory.Measure.toBoxAdditive_apply"],
 ["checkType", "MeasureTheory.Measure.toPMF_apply"],
 ["checkType", "MeasureTheory.Measure.toSphere_apply_aux"],
 ["checkType", "MeasureTheory.MeasurePreserving.comp_left_iff"],
 ["checkType", "MeasureTheory.MeasurePreserving.comp_right_iff"],
 ["checkType", "MeasureTheory.MeasurePreserving.ergodic_conjugate_iff"],
 ["checkType", "MeasureTheory.MeasurePreserving.integral_comp'"],
 ["checkType", "MeasureTheory.MeasurePreserving.lintegral_map_equiv"],
 ["checkType", "MeasureTheory.MeasurePreserving.preErgodic_conjugate_iff"],
 ["checkType", "MeasureTheory.MeasurePreserving.symm"],
 ["checkType", "MeasureTheory.MeasurePreserving.trans"],
 ["checkType",
  "MeasureTheory.Memℒp.exists_boundedContinuous_integral_rpow_sub_le"],
 ["checkType", "MeasureTheory.Memℒp.exists_boundedContinuous_snorm_sub_le"],
 ["checkType", "MeasureTheory.Memℒp.im"],
 ["checkType", "MeasureTheory.Memℒp.re"],
 ["checkType", "MeasureTheory.Memℒp.toLp_const"],
 ["checkType", "MeasureTheory.NullMeasurableSet.left_of_prod"],
 ["checkType", "MeasureTheory.NullMeasurableSet.prod"],
 ["checkType", "MeasureTheory.NullMeasurableSet.right_of_prod"],
 ["checkType", "MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_apply"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_boundedBy"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_iInf"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_iSup"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_map"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_mono"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_ofFunction"],
 ["checkType", "MeasureTheory.OuterMeasure.comap_top"],
 ["checkType", "MeasureTheory.OuterMeasure.isometryEquiv_comap_mkMetric"],
 ["checkType", "MeasureTheory.OuterMeasure.isometryEquiv_map_mkMetric"],
 ["checkType", "MeasureTheory.OuterMeasure.isometry_comap_mkMetric"],
 ["checkType", "MeasureTheory.OuterMeasure.isometry_map_mkMetric"],
 ["checkType", "MeasureTheory.OuterMeasure.le_comap_map"],
 ["checkType", "MeasureTheory.OuterMeasure.map_apply"],
 ["checkType", "MeasureTheory.OuterMeasure.map_biInf_comap"],
 ["checkType", "MeasureTheory.OuterMeasure.map_comap"],
 ["checkType", "MeasureTheory.OuterMeasure.map_comap_le"],
 ["checkType", "MeasureTheory.OuterMeasure.map_comap_of_surjective"],
 ["checkType", "MeasureTheory.OuterMeasure.map_iInf"],
 ["checkType", "MeasureTheory.OuterMeasure.map_iInf_comap"],
 ["checkType", "MeasureTheory.OuterMeasure.map_iInf_le"],
 ["checkType", "MeasureTheory.OuterMeasure.map_iSup"],
 ["checkType", "MeasureTheory.OuterMeasure.map_id"],
 ["checkType", "MeasureTheory.OuterMeasure.map_le_restrict_range"],
 ["checkType", "MeasureTheory.OuterMeasure.map_map"],
 ["checkType", "MeasureTheory.OuterMeasure.map_mono"],
 ["checkType", "MeasureTheory.OuterMeasure.map_ofFunction"],
 ["checkType", "MeasureTheory.OuterMeasure.map_ofFunction_le"],
 ["checkType", "MeasureTheory.OuterMeasure.map_sup"],
 ["checkType", "MeasureTheory.OuterMeasure.map_top"],
 ["checkType", "MeasureTheory.OuterMeasure.map_top_of_surjective"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_apply"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_biInf"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_empty"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_iInf"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_iInf_restrict"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_iSup"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_le_self"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_mono"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_ofFunction"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_sInf_eq_sInf_restrict"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_trim"],
 ["checkType", "MeasureTheory.OuterMeasure.restrict_univ"],
 ["checkType", "MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN"],
 ["checkType", "MeasureTheory.ProbabilityMeasure.prod_prod"],
 ["checkType",
  "MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_integral_tendsto"],
 ["checkType",
  "MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_lintegral_tendsto"],
 ["checkType", "MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply"],
 ["checkType", "MeasureTheory.SignedMeasure.im_toComplexMeasure"],
 ["checkType", "MeasureTheory.SignedMeasure.re_toComplexMeasure"],
 ["checkType", "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_apply"],
 ["checkType",
  "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_symm_apply"],
 ["checkType", "MeasureTheory.SimpleFunc.integrable_approxOn_range"],
 ["checkType", "MeasureTheory.SimpleFunc.map_setToSimpleFunc"],
 ["checkType", "MeasureTheory.SimpleFunc.memℒp_approxOn_range"],
 ["checkType", "MeasureTheory.SimpleFunc.pair_preimage"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_const"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_const'"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_eq_sum_filter"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_indicator"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_mono"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_mono_left"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_mono_left'"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_nonneg"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_nonneg'"],
 ["checkType", "MeasureTheory.SimpleFunc.setToSimpleFunc_smul"],
 ["checkType", "MeasureTheory.SimpleFunc.tendsto_approxOn_range_L1_nnnorm"],
 ["checkType", "MeasureTheory.SimpleFunc.tendsto_approxOn_range_Lp"],
 ["checkType", "MeasureTheory.SimpleFunc.tendsto_approxOn_range_Lp_snorm"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_left"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_left'"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_left''"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_right"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_right'"],
 ["checkType", "MeasureTheory.StronglyMeasurable.integral_kernel_prod_right''"],
 ["checkType", "MeasureTheory.VectorMeasure.coeFnAddMonoidHom_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.equivMeasure_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.equivMeasure_symm_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.mapGm_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRange"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRangeHom"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRange_add"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRange_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRange_id"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRange_zero"],
 ["checkType", "MeasureTheory.VectorMeasure.mapRangeₗ"],
 ["checkType", "MeasureTheory.VectorMeasure.mapₗ_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.restrictGm_apply"],
 ["checkType", "MeasureTheory.VectorMeasure.restrictₗ_apply"],
 ["checkType", "MulChar.IsQuadratic.gaussSum_frob"],
 ["checkType", "MulChar.IsQuadratic.gaussSum_frob_iter"],
 ["checkType", "NNReal.ContinuousMap.canLift"],
 ["checkType",
  "Nat.ArithmeticFunction.LSeriesSummable_of_bounded_of_one_lt_re"],
 ["checkType",
  "Nat.ArithmeticFunction.LSeriesSummable_of_bounded_of_one_lt_real"],
 ["checkType", "Nat.ArithmeticFunction.log_apply"],
 ["checkType", "Nat.ArithmeticFunction.sum_moebius_mul_log_eq"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_apply"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_apply_one"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_apply_pow"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_apply_prime"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_eq_zero_iff"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_le_log"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_ne_zero_iff"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_nonneg"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_pos_iff"],
 ["checkType", "Nat.ArithmeticFunction.vonMangoldt_sum"],
 ["checkType", "NormedAddGroupHom.Equalizer.liftEquiv_apply"],
 ["checkType", "NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe"],
 ["checkType", "NormedAddGroupHom.Equalizer.lift_apply_coe"],
 ["checkType", "NormedAddGroupHom.Equalizer.map_id"],
 ["checkType", "NormedAddGroupHom.IsQuotient.mk"],
 ["checkType", "NormedAddGroupHom.IsQuotient.norm"],
 ["checkType", "NormedAddGroupHom.IsQuotient.norm_le"],
 ["checkType", "NormedAddGroupHom.IsQuotient.norm_lift"],
 ["checkType", "NormedAddGroupHom.IsQuotient.rec"],
 ["checkType", "NormedAddGroupHom.IsQuotient.surjective"],
 ["checkType", "NormedAddGroupHom.SurjectiveOnWith.surjOn"],
 ["checkType", "NormedAddGroupHom.ker.lift_apply_coe"],
 ["checkType", "NormedSpace.Dual.coe_toWeakDual"],
 ["checkType", "NormedSpace.Dual.isClosed_image_polar_of_mem_nhds"],
 ["checkType", "NormedSpace.Dual.toWeakDual_continuous"],
 ["checkType", "NormedSpace.Dual.toWeakDual_eq_iff"],
 ["checkType", "NumberField.ComplexEmbedding.conjugate_coe_eq"],
 ["checkType", "NumberField.Embeddings.coeff_bdd_of_norm_le"],
 ["checkType", "NumberField.Embeddings.finite_of_norm_le"],
 ["checkType", "NumberField.Embeddings.pow_eq_one_of_norm_eq_one"],
 ["checkType", "NumberField.Embeddings.range_eval_eq_rootSet_minpoly"],
 ["checkType", "NumberField.InfinitePlace.apply"],
 ["checkType", "NumberField.InfinitePlace.embedding_of_isReal_apply"],
 ["checkType", "NumberField.InfinitePlace.eq_iff_eq"],
 ["checkType", "NumberField.InfinitePlace.instFunLikeInfinitePlaceReal"],
 ["checkType",
  "NumberField.InfinitePlace.instMulActionAlgEquivToCommSemiringToSemifieldToSemiringToDivisionSemiringToSemifieldInfinitePlaceToMonoidToDivInvMonoidAut_smul_coe_apply"],
 ["checkType", "NumberField.InfinitePlace.le_iff_le"],
 ["checkType", "NumberField.InfinitePlace.mkReal_coe"],
 ["checkType", "NumberField.InfinitePlace.norm_embedding_eq"],
 ["checkType", "NumberField.InfinitePlace.orbitRelEquiv_apply_mk''"],
 ["checkType", "NumberField.InfinitePlace.pos_iff"],
 ["checkType", "NumberField.InfinitePlace.prod_eq_abs_norm"],
 ["checkType", "NumberField.InfinitePlace.smul_apply"],
 ["checkType", "NumberField.Units.fun_eq_repr"],
 ["checkType", "NumberField.Units.mem_torsion"],
 ["checkType", "NumberField.canonicalEmbedding.apply_at"],
 ["checkType", "NumberField.canonicalEmbedding.conj_apply"],
 ["checkType", "NumberField.canonicalEmbedding.latticeBasis"],
 ["checkType", "NumberField.canonicalEmbedding.latticeBasis_apply"],
 ["checkType", "NumberField.canonicalEmbedding.mem_span_latticeBasis"],
 ["checkType", "NumberField.canonicalEmbedding.nnnorm_eq"],
 ["checkType", "NumberField.canonicalEmbedding.norm_le_iff"],
 ["checkType", "NumberField.mixedEmbedding.commMap_apply_of_isComplex"],
 ["checkType", "NumberField.mixedEmbedding.commMap_apply_of_isReal"],
 ["checkType", "NumberField.mixedEmbedding.commMap_canonical_eq_mixed"],
 ["checkType", "NumberField.mixedEmbedding.convexBodyLT_mem"],
 ["checkType", "NumberField.mixedEmbedding.convexBodyLT_volume"],
 ["checkType", "NumberField.mixedEmbedding.convexBodySum_mem"],
 ["checkType", "NumberField.mixedEmbedding.convexBodySum_volume"],
 ["checkType",
  "NumberField.mixedEmbedding.convexBodySum_volume_eq_zero_of_le_zero"],
 ["checkType", "NumberField.mixedEmbedding.disjoint_span_commMap_ker"],
 ["checkType",
  "NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_lt"],
 ["checkType",
  "NumberField.mixedEmbedding.exists_ne_zero_mem_ringOfIntegers_of_norm_le"],
 ["checkType", "NumberField.mixedEmbedding.fundamentalDomain_stdBasis"],
 ["checkType", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst"],
 ["checkType", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd"],
 ["checkType", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal"],
 ["checkType",
  "NumberField.mixedEmbedding.instIsAddHaarMeasureProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexInstAddGroupAddGroupInstAddGroupRealToAddGroupToNormedAddGroupInstNormedAddCommGroupComplexInstTopologicalSpaceProdTopologicalSpaceToTopologicalSpaceToUniformSpacePseudoMetricSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingInstNormedFieldComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume"],
 ["checkType",
  "NumberField.mixedEmbedding.instNoAtomsProdForAllSubtypeInfinitePlaceIsRealRealForAllIsComplexComplexToMeasurableSpaceMeasureSpacePiFintypePropDecidableFintypeMeasureSpaceMeasureSpaceOfInnerProductSpaceInstNormedAddCommGroupComplexComplexToRealInnerProductSpaceInstIsROrCComplexInstFiniteDimensionalRealComplexInstDivisionRingRealAddCommGroupInstModuleToSemiringToDivisionSemiringToModuleMeasurableSpaceBorelSpaceVolume"],
 ["checkType", "NumberField.mixedEmbedding.latticeBasis_apply"],
 ["checkType", "NumberField.mixedEmbedding.mem_span_latticeBasis"],
 ["checkType", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst"],
 ["checkType", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd"],
 ["checkType", "NumberField.mixedEmbedding.stdBasis_apply_ofIsReal"],
 ["checkType",
  "NumberField.mixedEmbedding.stdBasis_repr_eq_matrixToStdBasis_mul"],
 ["checkType",
  "NumberField.mixedEmbedding.volume_fundamentalDomain_latticeBasis"],
 ["checkType", "NumberField.mixedEmbedding.volume_fundamentalDomain_stdBasis"],
 ["checkType", "Padic.addValuation.apply"],
 ["checkType", "PartialHomeomorph.MDifferentiable.mfderiv_bijective"],
 ["checkType", "PartialHomeomorph.MDifferentiable.mfderiv_injective"],
 ["checkType", "PartialHomeomorph.MDifferentiable.mfderiv_surjective"],
 ["checkType", "PartialHomeomorph.MDifferentiable.range_mfderiv_eq_univ"],
 ["checkType", "PartitionOfUnity.IsSubordinate.continuous_finsum_smul"],
 ["checkType", "Path.Homotopic.hpath_hext"],
 ["checkType", "Path.Homotopic.map"],
 ["checkType", "Path.Homotopic.map_lift"],
 ["checkType", "Path.Homotopy.cast_apply"],
 ["checkType", "Path.Homotopy.cast_toFun"],
 ["checkType", "Path.Homotopy.coeFn_injective"],
 ["checkType", "Path.Homotopy.hcomp_apply"],
 ["checkType", "Path.Homotopy.hcomp_half"],
 ["checkType", "Path.Homotopy.map"],
 ["checkType", "Path.Homotopy.map_apply"],
 ["checkType", "Path.Homotopy.map_toFun"],
 ["checkType", "Path.Homotopy.refl_apply"],
 ["checkType", "Path.Homotopy.refl_toFun"],
 ["checkType", "Path.Homotopy.source"],
 ["checkType", "Path.Homotopy.symm_apply"],
 ["checkType", "Path.Homotopy.symm_toFun"],
 ["checkType", "Path.Homotopy.symm₂_apply"],
 ["checkType", "Path.Homotopy.symm₂_toFun"],
 ["checkType", "Path.Homotopy.target"],
 ["checkType", "Path.Homotopy.trans_apply"],
 ["checkType", "PicardLindelof.FunSpace.range_toContinuousMap"],
 ["checkType", "PicardLindelof.FunSpace.uniformInducing_toContinuousMap"],
 ["checkType", "Polynomial.Chebyshev.aeval_T"],
 ["checkType", "Polynomial.Chebyshev.aeval_U"],
 ["checkType", "Polynomial.Chebyshev.algebraMap_eval_T"],
 ["checkType", "Polynomial.Chebyshev.algebraMap_eval_U"],
 ["checkType",
  "Polynomial.Gal.card_complex_roots_eq_card_real_add_card_not_gal_inv"],
 ["checkType", "Polynomial.Gal.ext"],
 ["checkType", "Polynomial.Gal.galActionHom_bijective_of_prime_degree"],
 ["checkType", "Polynomial.Gal.galActionHom_bijective_of_prime_degree'"],
 ["checkType", "Polynomial.Gal.galActionHom_injective"],
 ["checkType", "Polynomial.Gal.galActionHom_restrict"],
 ["checkType", "Polynomial.Gal.restrictComp_surjective"],
 ["checkType", "Polynomial.Gal.restrictDvd_surjective"],
 ["checkType", "Polynomial.Gal.restrictProd_injective"],
 ["checkType", "Polynomial.Gal.restrict_smul"],
 ["checkType", "Polynomial.Gal.restrict_surjective"],
 ["checkType", "Polynomial.Gal.smul_def"],
 ["checkType", "Polynomial.Gal.uniqueGalC"],
 ["checkType", "Polynomial.Gal.uniqueGalXSubC"],
 ["checkType", "Polynomial.IsUnitTrinomial.irreducible_aux1"],
 ["checkType", "Polynomial.IsUnitTrinomial.irreducible_of_coprime'"],
 ["checkType", "Polynomial.cyclotomic.eval_apply"],
 ["checkType", "ProbabilityTheory.IsFiniteKernel.exists_univ_le"],
 ["checkType", "ProbabilityTheory.IsFiniteKernel.isFiniteMeasure"],
 ["checkType", "ProbabilityTheory.IsFiniteKernel.mk"],
 ["checkType", "ProbabilityTheory.IsFiniteKernel.rec"],
 ["checkType", "ProbabilityTheory.IsMarkovKernel.isProbabilityMeasure"],
 ["checkType", "ProbabilityTheory.IsMarkovKernel.is_probability_measure'"],
 ["checkType", "ProbabilityTheory.IsMarkovKernel.mk"],
 ["checkType", "ProbabilityTheory.IsMarkovKernel.rec"],
 ["checkType", "ProbabilityTheory.kernel.ae_ae_of_ae_compProd"],
 ["checkType", "ProbabilityTheory.kernel.ae_kernel_lt_top"],
 ["checkType", "ProbabilityTheory.kernel.ae_null_of_compProd_null"],
 ["checkType", "ProbabilityTheory.kernel.bind_add"],
 ["checkType", "ProbabilityTheory.kernel.bind_smul"],
 ["checkType", "ProbabilityTheory.kernel.coeFn_add"],
 ["checkType", "ProbabilityTheory.kernel.coeFn_zero"],
 ["checkType", "ProbabilityTheory.kernel.coe_finset_sum"],
 ["checkType", "ProbabilityTheory.kernel.comapRight_apply"],
 ["checkType", "ProbabilityTheory.kernel.comapRight_apply'"],
 ["checkType", "ProbabilityTheory.kernel.comap_apply"],
 ["checkType", "ProbabilityTheory.kernel.comap_apply'"],
 ["checkType", "ProbabilityTheory.kernel.compProd_apply"],
 ["checkType", "ProbabilityTheory.kernel.compProd_apply_eq_compProdFun"],
 ["checkType", "ProbabilityTheory.kernel.compProd_apply_univ_le"],
 ["checkType", "ProbabilityTheory.kernel.compProd_eq_tsum_compProd"],
 ["checkType", "ProbabilityTheory.kernel.compProd_null"],
 ["checkType", "ProbabilityTheory.kernel.compProd_restrict"],
 ["checkType", "ProbabilityTheory.kernel.compProd_restrict_left"],
 ["checkType", "ProbabilityTheory.kernel.compProd_restrict_right"],
 ["checkType", "ProbabilityTheory.kernel.comp_apply"],
 ["checkType", "ProbabilityTheory.kernel.comp_apply'"],
 ["checkType", "ProbabilityTheory.kernel.comp_const_apply_eq_bind"],
 ["checkType", "ProbabilityTheory.kernel.const_apply"],
 ["checkType", "ProbabilityTheory.kernel.const_bind_eq_comp_const"],
 ["checkType", "ProbabilityTheory.kernel.continuous_integral_integral"],
 ["checkType", "ProbabilityTheory.kernel.deterministic_apply"],
 ["checkType", "ProbabilityTheory.kernel.deterministic_apply'"],
 ["checkType", "ProbabilityTheory.kernel.ext"],
 ["checkType", "ProbabilityTheory.kernel.ext_fun"],
 ["checkType", "ProbabilityTheory.kernel.ext_fun_iff"],
 ["checkType", "ProbabilityTheory.kernel.ext_iff"],
 ["checkType", "ProbabilityTheory.kernel.ext_iff'"],
 ["checkType", "ProbabilityTheory.kernel.finset_sum_apply"],
 ["checkType", "ProbabilityTheory.kernel.finset_sum_apply'"],
 ["checkType", "ProbabilityTheory.kernel.fst_apply"],
 ["checkType", "ProbabilityTheory.kernel.fst_apply'"],
 ["checkType",
  "ProbabilityTheory.kernel.iIndepFun_iff_measure_inter_preimage_eq_mul"],
 ["checkType", "ProbabilityTheory.kernel.iIndepSet_iff_meas_biInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndepSets_singleton_iff"],
 ["checkType",
  "ProbabilityTheory.kernel.indepFun_iff_measure_inter_preimage_eq_mul"],
 ["checkType", "ProbabilityTheory.kernel.indepSet_iff_measure_inter_eq_mul"],
 ["checkType", "ProbabilityTheory.kernel.indepSets_singleton_iff"],
 ["checkType", "ProbabilityTheory.kernel.integral_const"],
 ["checkType", "ProbabilityTheory.kernel.integral_deterministic"],
 ["checkType", "ProbabilityTheory.kernel.integral_deterministic'"],
 ["checkType", "ProbabilityTheory.kernel.integral_fn_integral_add"],
 ["checkType", "ProbabilityTheory.kernel.integral_fn_integral_sub"],
 ["checkType", "ProbabilityTheory.kernel.integral_integral_add"],
 ["checkType", "ProbabilityTheory.kernel.integral_integral_add'"],
 ["checkType", "ProbabilityTheory.kernel.integral_integral_sub"],
 ["checkType", "ProbabilityTheory.kernel.integral_integral_sub'"],
 ["checkType", "ProbabilityTheory.kernel.integral_piecewise"],
 ["checkType", "ProbabilityTheory.kernel.integral_withDensity"],
 ["checkType", "ProbabilityTheory.kernel.le_compProd_apply"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_comap"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_comp"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_compProd"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_compProd'"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_compProd₀"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_const"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_deterministic"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_deterministic'"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_fn_integral_sub"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_fst"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_map"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_piecewise"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_prod"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_prodMkLeft"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_prodMkRight"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_restrict"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_snd"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_swapLeft"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_swapRight"],
 ["checkType", "ProbabilityTheory.kernel.lintegral_withDensity"],
 ["checkType", "ProbabilityTheory.kernel.map_apply"],
 ["checkType", "ProbabilityTheory.kernel.map_apply'"],
 ["checkType", "ProbabilityTheory.kernel.measurable"],
 ["checkType", "ProbabilityTheory.kernel.measurable_coe"],
 ["checkType", "ProbabilityTheory.kernel.measurable_kernel_prod_mk_left"],
 ["checkType", "ProbabilityTheory.kernel.measurable_kernel_prod_mk_left'"],
 ["checkType",
  "ProbabilityTheory.kernel.measurable_kernel_prod_mk_left_of_finite"],
 ["checkType", "ProbabilityTheory.kernel.measurable_kernel_prod_mk_right"],
 ["checkType", "ProbabilityTheory.kernel.measurable_lintegral_indicator_const"],
 ["checkType",
  "ProbabilityTheory.kernel.measure_eq_zero_or_one_of_indepSet_self"],
 ["checkType",
  "ProbabilityTheory.kernel.measure_eq_zero_or_one_or_top_of_indepSet_self"],
 ["checkType", "ProbabilityTheory.kernel.measure_le_bound"],
 ["checkType", "ProbabilityTheory.kernel.measure_sum_seq"],
 ["checkType",
  "ProbabilityTheory.kernel.measure_zero_or_one_of_measurableSet_limsup"],
 ["checkType",
  "ProbabilityTheory.kernel.measure_zero_or_one_of_measurableSet_limsup_atBot"],
 ["checkType",
  "ProbabilityTheory.kernel.measure_zero_or_one_of_measurableSet_limsup_atTop"],
 ["checkType", "ProbabilityTheory.kernel.piecewise_apply"],
 ["checkType", "ProbabilityTheory.kernel.piecewise_apply'"],
 ["checkType", "ProbabilityTheory.kernel.prodMkLeft_apply"],
 ["checkType", "ProbabilityTheory.kernel.prodMkLeft_apply'"],
 ["checkType", "ProbabilityTheory.kernel.prodMkRight_apply"],
 ["checkType", "ProbabilityTheory.kernel.prodMkRight_apply'"],
 ["checkType", "ProbabilityTheory.kernel.prod_apply"],
 ["checkType", "ProbabilityTheory.kernel.prod_apply'"],
 ["checkType", "ProbabilityTheory.kernel.restrict_apply"],
 ["checkType", "ProbabilityTheory.kernel.restrict_apply'"],
 ["checkType", "ProbabilityTheory.kernel.set_integral_const"],
 ["checkType", "ProbabilityTheory.kernel.set_integral_deterministic"],
 ["checkType", "ProbabilityTheory.kernel.set_integral_deterministic'"],
 ["checkType", "ProbabilityTheory.kernel.set_integral_piecewise"],
 ["checkType", "ProbabilityTheory.kernel.set_integral_restrict"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_compProd"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_compProd_univ_left"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_compProd_univ_right"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_const"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_deterministic"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_deterministic'"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_piecewise"],
 ["checkType", "ProbabilityTheory.kernel.set_lintegral_restrict"],
 ["checkType", "ProbabilityTheory.kernel.snd_apply"],
 ["checkType", "ProbabilityTheory.kernel.snd_apply'"],
 ["checkType", "ProbabilityTheory.kernel.sum_apply"],
 ["checkType", "ProbabilityTheory.kernel.sum_apply'"],
 ["checkType", "ProbabilityTheory.kernel.swapLeft_apply"],
 ["checkType", "ProbabilityTheory.kernel.swapLeft_apply'"],
 ["checkType", "ProbabilityTheory.kernel.swapRight_apply"],
 ["checkType", "ProbabilityTheory.kernel.swapRight_apply'"],
 ["checkType", "ProbabilityTheory.kernel.withDensity_apply"],
 ["checkType", "ProbabilityTheory.kernel.withDensity_apply'"],
 ["checkType", "ProbabilityTheory.kernel.zero_apply"],
 ["checkType", "Profinite.IndexFunctor.eq_of_forall_π_app_eq"],
 ["checkType", "Profinite.IndexFunctor.map_comp_π_app"],
 ["checkType", "Profinite.IndexFunctor.surjective_π_app"],
 ["checkType", "Profinite.NobelingProof.CC_comp_zero"],
 ["checkType", "Profinite.NobelingProof.CC_exact"],
 ["checkType", "Profinite.NobelingProof.coe_πs"],
 ["checkType", "Profinite.NobelingProof.coe_πs'"],
 ["checkType", "Profinite.NobelingProof.eval_eq_πJ"],
 ["checkType", "Profinite.NobelingProof.factors_prod_eq_basis_of_eq"],
 ["checkType", "Profinite.NobelingProof.factors_prod_eq_basis_of_ne"],
 ["checkType", "Profinite.NobelingProof.injective_πs"],
 ["checkType", "Profinite.NobelingProof.injective_πs'"],
 ["checkType", "Profinite.NobelingProof.iso_map_bijective"],
 ["checkType", "Profinite.NobelingProof.list_prod_apply"],
 ["checkType", "Profinite.NobelingProof.succ_exact"],
 ["checkType", "Profinite.NobelingProof.πs'_apply"],
 ["checkType", "Profinite.NobelingProof.πs_apply"],
 ["checkType", "Profinite.finiteCoproduct.ι_desc_apply"],
 ["checkType", "Profinite.finiteCoproduct.ι_injective"],
 ["checkType", "Profinite.finiteCoproduct.ι_jointly_surjective"],
 ["checkType", "Real.Angle.coe_coeHom"],
 ["checkType", "Real.Angle.expMapCircle_coe"],
 ["checkType", "Real.Angle.sign_toReal"],
 ["checkType", "SemiNormedGroupCat.completion.incl_apply"],
 ["checkType", "SemiNormedGroupCat.completion.norm_incl_eq"],
 ["checkType", "Set.EqOn.iteratedFDerivWithin"],
 ["checkType", "Set.Finite.infsep"],
 ["checkType", "Set.Finite.infsep_of_nontrivial"],
 ["checkType", "Set.Finite.isClosed_convexHull"],
 ["checkType", "Set.Finite.isCompact_convexHull"],
 ["checkType", "Set.Nontrivial.infsep_of_fintype"],
 ["checkType", "SlashInvariantForm.SlashInvariantFormClass.coe_coe"],
 ["checkType", "SmoothPartitionOfUnity.IsSubordinate.contMDiff_finsum_smul"],
 ["checkType", "SmoothPartitionOfUnity.IsSubordinate.smooth_finsum_smul"],
 ["checkType", "Stonean.Sigma.openEmbedding_ι"],
 ["checkType", "Stonean.finiteCoproduct.openEmbedding_ι"],
 ["checkType", "Stonean.pullback.condition"],
 ["checkType", "Stonean.pullback.cone"],
 ["checkType", "Stonean.pullback.cone_pt"],
 ["checkType", "Stonean.pullback.cone_π"],
 ["checkType", "Stonean.pullback.fst"],
 ["checkType", "Stonean.pullback.hom_ext"],
 ["checkType", "Stonean.pullback.isLimit"],
 ["checkType", "Stonean.pullback.lift"],
 ["checkType", "Stonean.pullback.lift_fst"],
 ["checkType", "Stonean.pullback.lift_fst_assoc"],
 ["checkType", "Stonean.pullback.lift_snd"],
 ["checkType", "Stonean.pullback.lift_snd_assoc"],
 ["checkType", "Stonean.pullback.snd"],
 ["checkType", "UniformSpace.Completion.coe_toComplL"],
 ["checkType", "UniformSpace.Completion.coe_toComplₗᵢ"],
 ["checkType", "UpperHalfPlane.SpecialLinearGroup.im_smul_eq_div_normSq"],
 ["checkType", "VectorPrebundle.IsSmooth.exists_smoothCoordChange"],
 ["checkType", "VectorPrebundle.IsSmooth.mk"],
 ["checkType", "VectorPrebundle.IsSmooth.rec"],
 ["checkType", "WeakDual.CharacterSpace.compContinuousMap_apply"],
 ["checkType", "WeakDual.CharacterSpace.continuousMapEval_apply_apply"],
 ["checkType", "WeakDual.CharacterSpace.continuousMapEval_bijective"],
 ["checkType", "WeakDual.CharacterSpace.equivAlgHom_coe"],
 ["checkType", "WeakDual.CharacterSpace.equivAlgHom_symm_coe"],
 ["checkType", "WeakDual.CharacterSpace.exists_apply_eq_zero"],
 ["checkType", "WeakDual.CharacterSpace.mem_spectrum_iff_exists"],
 ["checkType", "WeakDual.CharacterSpace.norm_le_norm_one"],
 ["checkType",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_apply_toFun"],
 ["checkType",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_symm_apply"],
 ["checkType", "Zspan.quotientEquiv.symm_apply"],
 ["checkType", "BoxIntegral.IntegrationParams.MemBaseSet.mono"],
 ["checkType",
  "BoxIntegral.IntegrationParams.MemBaseSet.unionComplToSubordinate"],
 ["checkType", "BoxIntegral.TaggedPrepartition.IsSubordinate.diam_le"],
 ["checkType", "BoxIntegral.TaggedPrepartition.IsSubordinate.mono"],
 ["checkType", "MeasureTheory.ComplexMeasure.HaveLebesgueDecomposition.imPart"],
 ["checkType", "MeasureTheory.ComplexMeasure.HaveLebesgueDecomposition.mk"],
 ["checkType", "MeasureTheory.ComplexMeasure.HaveLebesgueDecomposition.rePart"],
 ["checkType", "MeasureTheory.ComplexMeasure.HaveLebesgueDecomposition.rec"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.norm_Integral_le_one"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.norm_setToL1SCLM_le"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.norm_setToL1SCLM_le'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_add_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_add_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_congr_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_congr_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_congr_measure"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_const"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_mono"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_mono_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_mono_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_nonneg"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_smul_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_smul_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_zero_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_zero_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_const"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_indicatorConst"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_mono"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_mono_left"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_mono_left'"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_nonneg"],
 ["checkType", "MeasureTheory.L1.SimpleFunc.setToL1S_smul"],
 ["checkType", "MeasureTheory.Measure.FiniteSpanningSetsIn.prod"],
 ["checkType", "MeasureTheory.Measure.InnerRegular.map"],
 ["checkType", "MeasureTheory.Measure.InnerRegular.map_iff"],
 ["checkType", "MeasureTheory.Measure.InnerRegularWRT.map'"],
 ["checkType",
  "MeasureTheory.Measure.MapContinuousLinearEquiv.isAddHaarMeasure"],
 ["checkType", "MeasureTheory.Measure.MapLinearEquiv.isAddHaarMeasure"],
 ["checkType", "MeasureTheory.Measure.OuterRegular.map"],
 ["checkType", "MeasureTheory.Measure.QuasiMeasurePreserving.image_zpow_ae_eq"],
 ["checkType", "MeasureTheory.Measure.Regular.map"],
 ["checkType", "MeasureTheory.Measure.Regular.map_iff"],
 ["checkType", "Nat.ArithmeticFunction.IsMultiplicative.eulerProduct"],
 ["checkType", "NumberField.ComplexEmbedding.IsConj.eq"],
 ["checkType", "NumberField.ComplexEmbedding.IsReal.coe_embedding_apply"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.exists_unit"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.logEmbedding_component"],
 ["checkType",
  "NumberField.Units.dirichletUnitTheorem.logEmbedding_component_le"],
 ["checkType",
  "NumberField.Units.dirichletUnitTheorem.logEmbedding_eq_zero_iff"],
 ["checkType",
  "NumberField.Units.dirichletUnitTheorem.log_le_of_logEmbedding_le"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.mult_log_place_eq_zero"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.seq_decreasing"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.seq_next"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.seq_norm_le"],
 ["checkType", "NumberField.Units.dirichletUnitTheorem.seq_norm_ne_zero"],
 ["checkType",
  "NumberField.Units.dirichletUnitTheorem.sum_logEmbedding_component"],
 ["checkType", "Path.Homotopic.Quotient.mapFn"],
 ["checkType", "ProbabilityTheory.kernel.IndepFun.ae_eq"],
 ["checkType", "ProbabilityTheory.kernel.IndepFun.meas_inter"],
 ["checkType", "ProbabilityTheory.kernel.IndepSets.indep_aux"],
 ["checkType", "ProbabilityTheory.kernel.Invariant.def"],
 ["checkType", "ProbabilityTheory.kernel.IsFiniteKernel.integrable"],
 ["checkType", "ProbabilityTheory.kernel.IsMarkovKernel.comapRight"],
 ["checkType", "ProbabilityTheory.kernel.IsMarkovKernel.integrable"],
 ["checkType", "ProbabilityTheory.kernel.IsSFiniteKernel.sFinite"],
 ["checkType", "ProbabilityTheory.kernel.iIndep.meas_biInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndep.meas_iInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndepFun.ae_isProbabilityMeasure"],
 ["checkType", "ProbabilityTheory.kernel.iIndepFun.meas_biInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndepFun.meas_iInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndepSets.meas_biInter"],
 ["checkType", "ProbabilityTheory.kernel.iIndepSets.meas_iInter"],
 ["checkType",
  "Profinite.NobelingProof.GoodProducts.linearIndependent_comp_of_eval"],
 ["checkType", "Profinite.NobelingProof.GoodProducts.max_eq_eval"],
 ["checkType", "Profinite.NobelingProof.GoodProducts.max_eq_eval_unapply"],
 ["checkType", "Profinite.NobelingProof.GoodProducts.smaller_factorization"],
 ["checkType", "Profinite.NobelingProof.GoodProducts.square_commutes"],
 ["checkType", "Profinite.NobelingProof.Products.evalFacProp"],
 ["checkType", "Profinite.NobelingProof.Products.evalFacProps"],
 ["checkType", "Profinite.NobelingProof.Products.eval_eq"],
 ["checkType", "Profinite.NobelingProof.Products.eval_πs"],
 ["checkType", "Profinite.NobelingProof.Products.eval_πs'"],
 ["checkType", "Profinite.NobelingProof.Products.eval_πs_image"],
 ["checkType", "Profinite.NobelingProof.Products.eval_πs_image'"],
 ["checkType", "Profinite.NobelingProof.Products.max_eq_eval"],
 ["docBlame", "AndThen'"],
 ["docBlame", "AsFalse"],
 ["docBlame", "AsTrue"],
 ["docBlame", "Associative"],
 ["docBlame", "BinTree"],
 ["docBlame", "CommRing"],
 ["docBlame", "CommSemiring"],
 ["docBlame", "Commutative"],
 ["docBlame", "Computable"],
 ["docBlame", "Computable₂"],
 ["docBlame", "CongrMetaM"],
 ["docBlame", "CongrState"],
 ["docBlame", "Cont"],
 ["docBlame", "ContT"],
 ["docBlame", "ExistsUnique"],
 ["docBlame", "Implies"],
 ["docBlame", "IsDecEq"],
 ["docBlame", "IsDecRefl"],
 ["docBlame", "IsIdempotent"],
 ["docBlame", "IsLeftCancel"],
 ["docBlame", "IsRightCancel"],
 ["docBlame", "IsSymmOp"],
 ["docBlame", "LawfulMonadCont"],
 ["docBlame", "LeftCancelative"],
 ["docBlame", "LeftCommutative"],
 ["docBlame", "LeftDistributive"],
 ["docBlame", "LeftIdentity"],
 ["docBlame", "MonadCont"],
 ["docBlame", "MonadWriter"],
 ["docBlame", "NonContradictory"],
 ["docBlame", "One"],
 ["docBlame", "Partrec"],
 ["docBlame", "Partrec₂"],
 ["docBlame", "RightCancelative"],
 ["docBlame", "RightCommutative"],
 ["docBlame", "RightDistributive"],
 ["docBlame", "RightIdentity"],
 ["docBlame", "RightInverse"],
 ["docBlame", "Ring"],
 ["docBlame", "Semiring"],
 ["docBlame", "UFModel"],
 ["docBlame", "UFNode"],
 ["docBlame", "UnionFind"],
 ["docBlame", "Writer"],
 ["docBlame", "WriterT"],
 ["docBlame", "Xor'"],
 ["docBlame", "Zero"],
 ["docBlame", "atlas"],
 ["docBlame", "bit0"],
 ["docBlame", "bit1"],
 ["docBlame", "cancelDenominators"],
 ["docBlame", "cancelDenominatorsAt"],
 ["docBlame", "cancelDenominatorsTarget"],
 ["docBlame", "chartAt"],
 ["docBlame", "condM"],
 ["docBlame", "decidableEq_of_bool_pred"],
 ["docBlame", "eqns"],
 ["docBlame", "eqnsAttribute"],
 ["docBlame", "joinM"],
 ["docBlame", "measurability!"],
 ["docBlame", "measurability!?"],
 ["docBlame", "tacticCancel_denoms_"],
 ["docBlame", "tacticUse_finite_instance"],
 ["docBlame", "«term_+ᵥ_»"],
 ["docBlame", "«term_-ᵥ_»"],
 ["docBlame", "«term_[Λ^_]→L[_]_»"],
 ["docBlame", "«term_ˢʸᵐ»"],
 ["docBlame", "«term_•_»"],
 ["docBlame", "«term_→A[_]_»"],
 ["docBlame", "«term_→CO_»"],
 ["docBlame", "«term_→Co_»"],
 ["docBlame", "«term_→ᵃⁱ[_]_»"],
 ["docBlame", "«term_→ᵈ_»"],
 ["docBlame", "«term_→ₗ.[_]_»"],
 ["docBlame", "«term_→ₗᵢ[_]_»"],
 ["docBlame", "«term_→ₗᵢ⋆[_]_»"],
 ["docBlame", "«term_→ₛₗᵢ[_]_»"],
 ["docBlame", "«term_≃ᵃ[_]_»"],
 ["docBlame", "«term_≃ᵃⁱ[_]_»"],
 ["docBlame", "«term_≃ᵈ_»"],
 ["docBlame", "«term_≃ₗᵢ[_]_»"],
 ["docBlame", "«term_≃ₗᵢ⋆[_]_»"],
 ["docBlame", "«term_≃ₛₗᵢ[_]_»"],
 ["docBlame", "«term_≡_[SMOD_]»"],
 ["docBlame", "«term_⊻_»"],
 ["docBlame", "«term_⊼_»"],
 ["docBlame", "termℂ"],
 ["docBlame", "termℕ"],
 ["docBlame", "termℤ"],
 ["docBlame", "«termℤ√_»"],
 ["docBlame", "«term∃!_,_»"],
 ["docBlame", "«term∫_In_.._,_»"],
 ["docBlame", "«term∫_In_.._,_∂_»"],
 ["docBlame", "«term∮_InC(_,_),_»"],
 ["docBlame", "«term∯_InT(_,_),_»"],
 ["docBlame", "«term⨍_In_.._,_»"],
 ["docBlame", "timeCmd"],
 ["docBlame", "when"],
 ["docBlame", "whenM"],
 ["docBlame", "Action.V"],
 ["docBlame", "Action.ρ"],
 ["docBlame", "AddCommGroup.«term_≡_[PMOD_]»"],
 ["docBlame", "AddGroupWithOne.zsmul"],
 ["docBlame", "AddMagmaCat.forget_obj_eq_coe"],
 ["docBlame", "AddMonoidAlgebra.mapDomain"],
 ["docBlame", "AddMonoidAlgebra.single"],
 ["docBlame", "AddSemigroupCat.forget_obj_eq_coe"],
 ["docBlame", "Affine.termAffineSpace"],
 ["docBlame", "AffineBasis.toFun"],
 ["docBlame", "AffineEquiv.linear"],
 ["docBlame", "AffineMap.linear"],
 ["docBlame", "AffineMap.toFun"],
 ["docBlame", "AlgHom.toAddMonoidHom'"],
 ["docBlame", "AlgHom.toMonoidHom'"],
 ["docBlame", "AlgebraCat.carrier"],
 ["docBlame", "AlgebraicGeometry.«termProj|_»"],
 ["docBlame", "AndThen'.andthen"],
 ["docBlame", "Asymptotics.«term_=Θ[_]_»"],
 ["docBlame", "Asymptotics.«term_~[_]_»"],
 ["docBlame", "BddDistLat.toDistLat"],
 ["docBlame", "BddLat.toLat"],
 ["docBlame", "Bifunctor.bimap"],
 ["docBlame", "BilinForm.bilin"],
 ["docBlame", "Bimod.X"],
 ["docBlame", "Bimod.actLeft"],
 ["docBlame", "Bimod.actRight"],
 ["docBlame", "BinaryHeap.arr"],
 ["docBlame", "Bipointed.X"],
 ["docBlame", "Bipointed.toProd"],
 ["docBlame", "Bitraversable.bitraverse"],
 ["docBlame", "BoundedContinuousFunction.«term_→ᵇ_»"],
 ["docBlame", "BoundedRandom.randomR"],
 ["docBlame", "BoxIntegral.«term_→ᵇᵃ[_]_»"],
 ["docBlame", "BoxIntegral.«term_→ᵇᵃ_»"],
 ["docBlame", "BumpCovering.toFun"],
 ["docBlame", "ByteSlice.arr"],
 ["docBlame", "ByteSlice.len"],
 ["docBlame", "ByteSlice.off"],
 ["docBlame", "ByteSliceT.arr"],
 ["docBlame", "ByteSliceT.off"],
 ["docBlame", "CFilter.f"],
 ["docBlame", "CFilter.inf"],
 ["docBlame", "CFilter.pt"],
 ["docBlame", "CancelDenoms.synthesizeUsingNormNum"],
 ["docBlame", "Cardinal.term𝔠"],
 ["docBlame", "CategoryTheory.«term_ᘁ»"],
 ["docBlame", "CategoryTheory.«term_ᘁ_1»"],
 ["docBlame", "CategoryTheory.«term_⟶[_]_»"],
 ["docBlame", "CategoryTheory.termβ_"],
 ["docBlame", "CategoryTheory.«termᘁ_»"],
 ["docBlame", "CategoryTheory.«termᘁ__1»"],
 ["docBlame", "ChangeOfRings.«term_⊗ₜ[_,_]_»"],
 ["docBlame", "ChartedSpace.atlas"],
 ["docBlame", "ChartedSpace.chartAt"],
 ["docBlame", "ChartedSpaceCore.atlas"],
 ["docBlame", "ChartedSpaceCore.chartAt"],
 ["docBlame", "Combinator.I"],
 ["docBlame", "Combinator.K"],
 ["docBlame", "Combinator.S"],
 ["docBlame", "CommRingCat.forget_obj_eq_coe"],
 ["docBlame", "CommSemiRingCat.forget_obj_eq_coe"],
 ["docBlame", "CompleteBooleanAlgebra.toCompleteAtomicBooleanAlgebra"],
 ["docBlame", "Complex.im"],
 ["docBlame", "Complex.re"],
 ["docBlame", "Complex.«term_×ℂ_»"],
 ["docBlame", "CompositionSeries.length"],
 ["docBlame", "CompositionSeries.series"],
 ["docBlame", "Computability.«term_∗»"],
 ["docBlame", "Computation.parallelRec"],
 ["docBlame", "Congr!.elabConfig"],
 ["docBlame", "ContDiffBump.rIn"],
 ["docBlame", "ContDiffBump.rOut"],
 ["docBlame", "ContDiffBumpBase.toFun"],
 ["docBlame", "ContMDiffSection.toFun"],
 ["docBlame", "ContT.map"],
 ["docBlame", "ContT.monadLift"],
 ["docBlame", "ContT.run"],
 ["docBlame", "ContT.withContT"],
 ["docBlame", "ContinuousMap.«term_≃ₕ_»"],
 ["docBlame", "Convex.«term[_-[_]_]»"],
 ["docBlame", "ConvexBody.carrier"],
 ["docBlame", "ConvexCone.carrier"],
 ["docBlame", "Ctop.f"],
 ["docBlame", "Ctop.inter"],
 ["docBlame", "Ctop.top"],
 ["docBlame", "Cubic.a"],
 ["docBlame", "Cubic.b"],
 ["docBlame", "Cubic.c"],
 ["docBlame", "Cubic.d"],
 ["docBlame", "Decidable.recOn_false"],
 ["docBlame", "Decidable.recOn_true"],
 ["docBlame", "Derivation.«termC^_⟮_,_;_⟯⟨_⟩»"],
 ["docBlame", "Dilation.toFun"],
 ["docBlame", "DilationEquiv.toDilation"],
 ["docBlame", "Dioph.«term&_»"],
 ["docBlame", "Dioph.«termD&_»"],
 ["docBlame", "Dioph.«termD._»"],
 ["docBlame", "Dioph.«termD∃»"],
 ["docBlame", "Dioph.«termD≡»"],
 ["docBlame", "Dioph.«term_D%_»"],
 ["docBlame", "Dioph.«term_D*_»"],
 ["docBlame", "Dioph.«term_D+_»"],
 ["docBlame", "Dioph.«term_D-_»"],
 ["docBlame", "Dioph.«term_D/_»"],
 ["docBlame", "Dioph.«term_D<_»"],
 ["docBlame", "Dioph.«term_D=_»"],
 ["docBlame", "Dioph.«term_D∣_»"],
 ["docBlame", "Dioph.«term_D∧_»"],
 ["docBlame", "Dioph.«term_D∨_»"],
 ["docBlame", "Dioph.«term_D≠_»"],
 ["docBlame", "Dioph.«term_D≤_»"],
 ["docBlame", "Dist.dist"],
 ["docBlame", "DivisibleBy.div"],
 ["docBlame", "DoldKan.«termK[_]»"],
 ["docBlame", "DoldKan.«termN[_]»"],
 ["docBlame", "EDist.edist"],
 ["docBlame", "ENorm.toFun"],
 ["docBlame", "EqualCharZero.pnatCast"],
 ["docBlame", "Equiv.invFun"],
 ["docBlame", "Equiv.toFun"],
 ["docBlame", "EsakiaHom.toPseudoEpimorphism"],
 ["docBlame", "EuclideanDomain.wellFoundedRelation"],
 ["docBlame", "EuclideanGeometry.o"],
 ["docBlame", "EuclideanGeometry.«term∠»"],
 ["docBlame", "EuclideanGeometry.«term∡»"],
 ["docBlame", "ExceptT.callCC"],
 ["docBlame", "ExceptT.mkLabel"],
 ["docBlame", "FBinopElab.elabBinOp"],
 ["docBlame", "FiberBundle.trivializationAt'"],
 ["docBlame", "FiberBundle.trivializationAtlas'"],
 ["docBlame", "FiberBundleCore.baseSet"],
 ["docBlame", "FiberBundleCore.coordChange"],
 ["docBlame", "FiberBundleCore.indexAt"],
 ["docBlame", "FiberPrebundle.pretrivializationAt"],
 ["docBlame", "FiberPrebundle.pretrivializationAtlas"],
 ["docBlame", "FinBddDistLat.toBddDistLat"],
 ["docBlame", "FinBoolAlg.toBoolAlg"],
 ["docBlame", "FinPartOrd.toPartOrd"],
 ["docBlame", "FirstOrder.«term&_»"],
 ["docBlame", "FirstOrder.«term_='_»"],
 ["docBlame", "FirstOrder.«term_⇔_»"],
 ["docBlame", "FirstOrder.«term_⟹_»"],
 ["docBlame", "FirstOrder.«term∀'_»"],
 ["docBlame", "FirstOrder.«term∃'_»"],
 ["docBlame", "FirstOrder.«term∼_»"],
 ["docBlame", "Flow.toFun"],
 ["docBlame", "FourierTransform.«term_[_]»"],
 ["docBlame", "FourierTransform.term𝓕"],
 ["docBlame", "Function.app"],
 ["docBlame", "Function.compLeft"],
 ["docBlame", "Function.compRight"],
 ["docBlame", "Function.swap"],
 ["docBlame", "Function.«term_∘'_»"],
 ["docBlame", "Function.«term↿_»"],
 ["docBlame", "FundamentalGroupoid.termπ"],
 ["docBlame", "FundamentalGroupoid.termπₓ"],
 ["docBlame", "FundamentalGroupoid.termπₘ"],
 ["docBlame", "HSpace.e"],
 ["docBlame", "HSpace.eHmul"],
 ["docBlame", "HSpace.hmul"],
 ["docBlame", "HSpace.hmulE"],
 ["docBlame", "HSpaces.«term_⋀_»"],
 ["docBlame", "HahnSeries.coeff"],
 ["docBlame", "HasInfs.infs"],
 ["docBlame", "HasSups.sups"],
 ["docBlame", "Holor.assocLeft"],
 ["docBlame", "Holor.assocRight"],
 ["docBlame", "HolorIndex.assocLeft"],
 ["docBlame", "HolorIndex.assocRight"],
 ["docBlame", "HolorIndex.drop"],
 ["docBlame", "HolorIndex.take"],
 ["docBlame", "HomologicalComplex.X"],
 ["docBlame", "HomologicalComplex.d"],
 ["docBlame", "Homotopy.hom"],
 ["docBlame", "HomotopyEquiv.hom"],
 ["docBlame", "HomotopyEquiv.homotopyHomInvId"],
 ["docBlame", "HomotopyEquiv.homotopyInvHomId"],
 ["docBlame", "HomotopyEquiv.inv"],
 ["docBlame", "IO.runRandWith"],
 ["docBlame", "IdemCommSemiring.bot"],
 ["docBlame", "IdemSemiring.bot"],
 ["docBlame", "ImplicitFunctionData.leftDeriv"],
 ["docBlame", "ImplicitFunctionData.leftFun"],
 ["docBlame", "ImplicitFunctionData.pt"],
 ["docBlame", "ImplicitFunctionData.rightDeriv"],
 ["docBlame", "ImplicitFunctionData.rightFun"],
 ["docBlame", "InnerProduct.«term_†»"],
 ["docBlame", "Int.decNonneg"],
 ["docBlame", "IntermediateField.delabAdjoinNotation"],
 ["docBlame", "IsAdjoinRoot.map"],
 ["docBlame", "IsROrC.im"],
 ["docBlame", "IsROrC.re"],
 ["docBlame", "Isocrystal.«termK(_,_)»"],
 ["docBlame", "Isocrystal.«term_→ᶠˡ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_→ᶠⁱ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_≃ᶠˡ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_≃ᶠⁱ[_,_]_»"],
 ["docBlame", "Isocrystal.«termΦ(_,_)»"],
 ["docBlame", "Isocrystal.«termφ(_,_)»"],
 ["docBlame", "JordanHolderLattice.IsMaximal"],
 ["docBlame", "JordanHolderLattice.Iso"],
 ["docBlame", "KStar.kstar"],
 ["docBlame", "Kronecker.«term_⊗ₖ_»"],
 ["docBlame", "Kronecker.«term_⊗ₖₜ[_]_»"],
 ["docBlame", "Kronecker.«term_⊗ₖₜ_»"],
 ["docBlame",
  "LaurentSeries.instMonoidWithZeroHahnSeriesIntToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRingToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifield"],
 ["docBlame", "Lean.ExportM"],
 ["docBlame", "LieGroup.«term𝑳»"],
 ["docBlame", "LieGroup.«term𝑹»"],
 ["docBlame", "LinearOrderedAddCommGroupWithTop.zsmul"],
 ["docBlame", "LinearPMap.domain"],
 ["docBlame", "LinearPMap.sSup"],
 ["docBlame", "LinearPMap.«term_†»"],
 ["docBlame", "LinearPMap.toFun"],
 ["docBlame", "LinearPMap.toFun'"],
 ["docBlame", "LinearRecurrence.coeffs"],
 ["docBlame", "LinearRecurrence.order"],
 ["docBlame", "List.card"],
 ["docBlame", "List.equiv"],
 ["docBlame", "List.inj_on"],
 ["docBlame", "List.remove"],
 ["docBlame", "MagmaCat.forget_obj_eq_coe"],
 ["docBlame", "Manifold.«termC^_⟮_,_;_,_⟯»"],
 ["docBlame", "Manifold.«termC^_⟮_,_;_⟯»"],
 ["docBlame", "Manifold.«termCₛ^_⟮_;_,_⟯»"],
 ["docBlame", "Manifold.«term_≃ₘ[_]_»"],
 ["docBlame", "Manifold.«term_≃ₘ^_[_]_»"],
 ["docBlame", "Manifold.«term_≃ₘ^_⟮_,_⟯_»"],
 ["docBlame", "Manifold.«term_≃ₘ⟮_,_⟯_»"],
 ["docBlame", "Manifold.«term_≫_»"],
 ["docBlame", "Manifold.«term_≫ₕ_»"],
 ["docBlame", "Manifold.«term∞»"],
 ["docBlame", "Manifold.«term𝒅»"],
 ["docBlame", "Manifold.«term𝒅ₕ»"],
 ["docBlame", "Manifold.«term𝓘(_)»"],
 ["docBlame", "Manifold.«term𝓘(_,_)»"],
 ["docBlame", "Manifold.term𝓡_"],
 ["docBlame", "Manifold.«term𝓡∂_»"],
 ["docBlame", "Mathlib.evalExtractLet"],
 ["docBlame", "Matrix.termGL"],
 ["docBlame", "Matrix.«term_×₃_»"],
 ["docBlame", "Matrix.«term_⊕ᵥ_»"],
 ["docBlame", "Matrix.«term_⊙_»"],
 ["docBlame", "MatrixGroups.«termSL(_,_)»"],
 ["docBlame", "MaximalSpectrum.asIdeal"],
 ["docBlame", "MeasureTheory.«term_=ᵐ[_]_»"],
 ["docBlame", "MeasureTheory.«term_[_|_]»"],
 ["docBlame", "MeasureTheory.«term_→₁[_]_»"],
 ["docBlame", "MeasureTheory.«term_→₂[_]_»"],
 ["docBlame", "MeasureTheory.«term_≤[_]_»"],
 ["docBlame", "MeasureTheory.«term_≤ᵐ[_]_»"],
 ["docBlame", "MeasureTheory.«termμH[_]»"],
 ["docBlame", "MeasureTheory.«term∀ᵐ_,_»"],
 ["docBlame", "MeasureTheory.«term∀ᵐ_∂_,_»"],
 ["docBlame", "MeasureTheory.«term∃ᵐ_,_»"],
 ["docBlame", "MeasureTheory.«term∃ᵐ_∂_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_,_∂_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_In_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_In_,_∂_»"],
 ["docBlame", "Mod_.X"],
 ["docBlame", "Mod_.act"],
 ["docBlame", "ModularForm.«term_∣[_;_]_»"],
 ["docBlame", "ModularForm.«term_∣[_]_»"],
 ["docBlame", "Mon_.X"],
 ["docBlame", "Mon_.mul"],
 ["docBlame", "Mon_.one"],
 ["docBlame", "Monad.cond"],
 ["docBlame", "Monad.filter"],
 ["docBlame", "Monad.foldl"],
 ["docBlame", "Monad.join"],
 ["docBlame", "Monad.mapM"],
 ["docBlame", "Monad.mapM'"],
 ["docBlame", "Monad.sequence"],
 ["docBlame", "Monad.sequence'"],
 ["docBlame", "Monad.unlessb"],
 ["docBlame", "Monad.whenb"],
 ["docBlame", "MonadCont.Label"],
 ["docBlame", "MonadCont.callCC"],
 ["docBlame", "MonadCont.goto"],
 ["docBlame", "MonadWriter.listen"],
 ["docBlame", "MonadWriter.pass"],
 ["docBlame", "MonadWriter.tell"],
 ["docBlame", "MonadWriterAdapter.adaptWriter"],
 ["docBlame", "Monoid.Foldr"],
 ["docBlame", "Monoid.foldlM"],
 ["docBlame", "Monoid.foldrM"],
 ["docBlame", "MonoidAlgebra.mapDomain"],
 ["docBlame", "MonoidAlgebra.single"],
 ["docBlame", "MvPFunctor.wpRec"],
 ["docBlame", "MvQPF.P"],
 ["docBlame", "MvQPF.abs"],
 ["docBlame", "MvQPF.repr"],
 ["docBlame", "NFA.accept"],
 ["docBlame", "NFA.start"],
 ["docBlame", "NFA.step"],
 ["docBlame", "NNDist.nndist"],
 ["docBlame", "NNRat.«termℚ≥0»"],
 ["docBlame", "NNReal.«termℝ≥0»"],
 ["docBlame", "Nat.Partrec"],
 ["docBlame", "Nat.discriminate"],
 ["docBlame", "Nat.findX"],
 ["docBlame", "Nat.ltByCases"],
 ["docBlame", "Nat.ltGeByCases"],
 ["docBlame", "Nat.prio"],
 ["docBlame", "Nat.rfind"],
 ["docBlame", "Nat.rfindOpt"],
 ["docBlame", "Nat.rfindX"],
 ["docBlame", "Nat.subInduction"],
 ["docBlame", "Nat.«termOrd_compl[_]_»"],
 ["docBlame", "Nat.«termOrd_proj[_]_»"],
 ["docBlame", "Nat.«term_‼»"],
 ["docBlame", "Nat.termπ"],
 ["docBlame", "Nat.termπ'"],
 ["docBlame", "Nat.twoStepInduction"],
 ["docBlame", "NumberField.term𝓞"],
 ["docBlame", "NumberTheorySymbols.«termJ(_|_)»"],
 ["docBlame", "One.one"],
 ["docBlame", "Option.getDM'"],
 ["docBlame", "OptionT.callCC"],
 ["docBlame", "OptionT.mkLabel"],
 ["docBlame", "OrthonormalBasis.repr"],
 ["docBlame", "PartitionOfUnity.toFun"],
 ["docBlame", "PicardLindelof.C"],
 ["docBlame", "PicardLindelof.L"],
 ["docBlame", "PicardLindelof.R"],
 ["docBlame", "PicardLindelof.tMax"],
 ["docBlame", "PicardLindelof.tMin"],
 ["docBlame", "PicardLindelof.toFun"],
 ["docBlame", "PicardLindelof.t₀"],
 ["docBlame", "PicardLindelof.x₀"],
 ["docBlame", "Polynomial.quotientSpanXSubCAlgEquivAux1"],
 ["docBlame", "Polynomial.quotientSpanXSubCAlgEquivAux2"],
 ["docBlame", "Polynomial.«term_[X]»"],
 ["docBlame", "Polynomial.toFinsupp"],
 ["docBlame", "PowerBasis.basis"],
 ["docBlame", "PowerBasis.dim"],
 ["docBlame", "PowerBasis.gen"],
 ["docBlame", "Pregroupoid.property"],
 ["docBlame", "PresheafOfModules.presheaf"],
 ["docBlame", "Pretrivialization.baseSet"],
 ["docBlame", "PrimeSpectrum.asIdeal"],
 ["docBlame", "ProbabilityTheory.«termEVar[_]»"],
 ["docBlame", "ProbabilityTheory.«termVar[_]»"],
 ["docBlame", "ProbabilityTheory.«term_=ₐₛ_»"],
 ["docBlame", "ProbabilityTheory.«term_[_]»"],
 ["docBlame", "ProbabilityTheory.«term_[_|_]»"],
 ["docBlame", "ProbabilityTheory.«term_[|_]»"],
 ["docBlame", "ProbabilityTheory.«term_×ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_∘ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_≤ₐₛ_»"],
 ["docBlame", "ProbabilityTheory.«term_⊗ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_⟦_|_⟧»"],
 ["docBlame", "ProbabilityTheory.termℙ"],
 ["docBlame", "ProbabilityTheory.«term∂_/∂_»"],
 ["docBlame", "ProbabilityTheory.«term𝔼[_]»"],
 ["docBlame", "ProbabilityTheory.«term𝔼[_|_]»"],
 ["docBlame", "ProjectiveSpectrum.asHomogeneousIdeal"],
 ["docBlame", "PseudoMetricSpace.edist"],
 ["docBlame", "QPF.P"],
 ["docBlame", "QPF.abs"],
 ["docBlame", "QPF.repr"],
 ["docBlame", "QuadraticForm.toFun"],
 ["docBlame", "Quaternion.termℍ"],
 ["docBlame", "Quaternion.«termℍ[_]»"],
 ["docBlame", "QuaternionAlgebra.imI"],
 ["docBlame", "QuaternionAlgebra.imJ"],
 ["docBlame", "QuaternionAlgebra.imK"],
 ["docBlame", "Random.randBool"],
 ["docBlame", "Random.randFin"],
 ["docBlame", "Random.random"],
 ["docBlame", "RatFunc.toFractionRing"],
 ["docBlame", "ReaderT.callCC"],
 ["docBlame", "ReaderT.mk"],
 ["docBlame", "ReaderT.mkLabel"],
 ["docBlame", "Ring.zsmul"],
 ["docBlame", "RingCat.forget_obj_eq_coe"],
 ["docBlame", "RingQuot.preLift"],
 ["docBlame", "RingQuot.preLiftAlgHom"],
 ["docBlame", "RingQuot.toQuot"],
 ["docBlame", "RootableBy.root"],
 ["docBlame", "SMul.smul"],
 ["docBlame", "SchwartzMap.toFun"],
 ["docBlame", "SchwartzSpace.«term𝓢(_,_)»"],
 ["docBlame", "SemiRingCat.forget_obj_eq_coe"],
 ["docBlame", "SemigroupCat.forget_obj_eq_coe"],
 ["docBlame", "SemilatInfCat.X"],
 ["docBlame", "SemilatSupCat.X"],
 ["docBlame", "Set.Subset"],
 ["docBlame", "Set.compl"],
 ["docBlame", "Set.diff"],
 ["docBlame", "Set.image"],
 ["docBlame", "Set.insert"],
 ["docBlame", "Set.inter"],
 ["docBlame", "Set.powerset"],
 ["docBlame", "Set.singleton"],
 ["docBlame", "Set.«term{_|_}»"],
 ["docBlame", "Set.term𝒫_"],
 ["docBlame", "Set.union"],
 ["docBlame", "Set.univ"],
 ["docBlame", "Shrink.rec"],
 ["docBlame", "SimpleGraph.Adj"],
 ["docBlame", "SimpleGraph.«term_→g_»"],
 ["docBlame", "SimpleGraph.«term_↪g_»"],
 ["docBlame", "SimpleGraph.«term_≃g_»"],
 ["docBlame", "Simplicial.«termΔ[_]»"],
 ["docBlame", "Simplicial.«termΛ[_,_]»"],
 ["docBlame", "Simplicial.«term∂Δ[_]»"],
 ["docBlame", "SlashAction.map"],
 ["docBlame", "SlashInvariantForm.toFun"],
 ["docBlame", "SlimCheck.NamedBinder"],
 ["docBlame", "SlimCheck.«command#test_»"],
 ["docBlame", "StarAlgEquiv.restrictScalars"],
 ["docBlame", "StarAlgHom.restrictScalars"],
 ["docBlame", "StateT.callCC"],
 ["docBlame", "StateT.mk"],
 ["docBlame", "StateT.mkLabel"],
 ["docBlame", "StieltjesFunction.toFun"],
 ["docBlame", "Stream'.corec"],
 ["docBlame", "Stream'.corec'"],
 ["docBlame", "Stream'.corecOn"],
 ["docBlame", "Stream'.«term_++ₛ_»"],
 ["docBlame", "Stream'.«term_::_»"],
 ["docBlame", "Stream'.«term_⊛_»"],
 ["docBlame", "Stream'.«term_⋈_»"],
 ["docBlame", "Stream'.unfolds"],
 ["docBlame", "StrictWeakOrder.Equiv"],
 ["docBlame", "StrictWeakOrder.«term_≈[_]_»"],
 ["docBlame", "StructureGroupoid.members"],
 ["docBlame", "SubNegMonoid.zsmul"],
 ["docBlame", "Submodule.«term_∙_»"],
 ["docBlame", "TensorProduct.«term_⊗[_]_»"],
 ["docBlame", "TensorProduct.«term_⊗_»"],
 ["docBlame", "TensorProduct.«term_⊗ₜ[_]_»"],
 ["docBlame", "TensorProduct.«term_⊗ₜ_»"],
 ["docBlame", "TensorProduct.«term⨂[_]^_»"],
 ["docBlame", "Topology.«termI^_»"],
 ["docBlame", "Topology.termπ_"],
 ["docBlame", "Traversable.foldMap"],
 ["docBlame", "Traversable.foldl"],
 ["docBlame", "Traversable.foldlm"],
 ["docBlame", "Traversable.foldr"],
 ["docBlame", "Traversable.foldrm"],
 ["docBlame", "Traversable.length"],
 ["docBlame", "Traversable.mapFold"],
 ["docBlame", "Tree.«term_△_»"],
 ["docBlame", "Tree.unitRecOn"],
 ["docBlame", "Trivialization.baseSet"],
 ["docBlame", "TwoP.X"],
 ["docBlame", "TwoP.toTwoPointing"],
 ["docBlame", "UFModel.Agrees"],
 ["docBlame", "UFModel.Models"],
 ["docBlame", "UFModel.empty"],
 ["docBlame", "UFModel.parent"],
 ["docBlame", "UFModel.push"],
 ["docBlame", "UFModel.rank"],
 ["docBlame", "UFModel.setParent"],
 ["docBlame", "UFModel.setParentBump"],
 ["docBlame", "UFNode.parent"],
 ["docBlame", "UFNode.rank"],
 ["docBlame", "UFNode.value"],
 ["docBlame", "ULiftable.congr"],
 ["docBlame", "UniformConvergence.«term_→ᵤ[_]_»"],
 ["docBlame", "UniformConvergence.«term_→ᵤ_»"],
 ["docBlame", "UniformFun.phi"],
 ["docBlame", "UnionFind.arr"],
 ["docBlame", "UnionFind.empty"],
 ["docBlame", "UnionFind.find"],
 ["docBlame", "UnionFind.findAux"],
 ["docBlame", "UnionFind.link"],
 ["docBlame", "UnionFind.mkEmpty"],
 ["docBlame", "UnionFind.push"],
 ["docBlame", "UnionFind.rank"],
 ["docBlame", "UnionFind.rankMax"],
 ["docBlame", "UnionFind.rankMaxAux"],
 ["docBlame", "UnionFind.size"],
 ["docBlame", "UnionFind.union"],
 ["docBlame", "UnitDisc.term𝔻"],
 ["docBlame", "UnivLE.witness"],
 ["docBlame", "UpperHalfPlane.coe'"],
 ["docBlame", "UpperHalfPlane.termℍ"],
 ["docBlame", "VAdd.vadd"],
 ["docBlame", "VSub.vsub"],
 ["docBlame", "Valued.v"],
 ["docBlame", "Vector3.«term_::_»"],
 ["docBlame", "Vector3.unexpandCons"],
 ["docBlame", "Vector3.unexpandNil"],
 ["docBlame", "VectorBundleCore.baseSet"],
 ["docBlame", "VectorBundleCore.coordChange"],
 ["docBlame", "VectorBundleCore.indexAt"],
 ["docBlame", "VectorPrebundle.pretrivializationAt"],
 ["docBlame", "VectorPrebundle.pretrivializationAtlas"],
 ["docBlame", "WithIdeal.i"],
 ["docBlame",
  "WithZeroTopology.instHasContinuousInv₀ToZeroToLinearOrderedCommMonoidWithZeroToInvTopologicalSpace"],
 ["docBlame", "Witt.termW"],
 ["docBlame", "Witt.termW_"],
 ["docBlame", "Witt.termW_1"],
 ["docBlame", "Witt.termW__1"],
 ["docBlame", "WriterT.adapt"],
 ["docBlame", "WriterT.callCC"],
 ["docBlame", "WriterT.callCC'"],
 ["docBlame", "WriterT.mk"],
 ["docBlame", "WriterT.mkLabel"],
 ["docBlame", "WriterT.mkLabel'"],
 ["docBlame", "WriterT.run"],
 ["docBlame", "WriterT.runThe"],
 ["docBlame", "Zero.zero"],
 ["docBlame", "Zsqrtd.im"],
 ["docBlame", "Zsqrtd.re"],
 ["docBlame", "algebraMap.coeHTCT"],
 ["docBlame", "lp.«termℓ^∞(_)»"],
 ["docBlame", "lp.«termℓ^∞(_,_)»"],
 ["docBlame", "omegaLimit.termω"],
 ["docBlame", "omegaLimit.«termω⁺»"],
 ["docBlame", "omegaLimit.«termω⁻»"],
 ["docBlame", "εNFA.accept"],
 ["docBlame", "εNFA.start"],
 ["docBlame", "εNFA.step"],
 ["docBlame", "Action.Hom.hom"],
 ["docBlame", "AddCommGroup.PositiveCone.nonneg"],
 ["docBlame", "AddCommGroup.PositiveCone.pos"],
 ["docBlame", "Affine.Simplex.points"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.carrier"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.presheaf"],
 ["docBlame", "Array.cyclicPermute!.cyclicPermuteAux"],
 ["docBlame", "Array.heapSort.loop"],
 ["docBlame", "Besicovitch.BallPackage.c"],
 ["docBlame", "Besicovitch.BallPackage.r"],
 ["docBlame", "Besicovitch.BallPackage.r_bound"],
 ["docBlame", "Besicovitch.SatelliteConfig.c"],
 ["docBlame", "Besicovitch.SatelliteConfig.r"],
 ["docBlame", "Besicovitch.TauPackage.τ"],
 ["docBlame", "Bimod.Hom.hom"],
 ["docBlame", "BinaryHeap.mkHeap.loop"],
 ["docBlame", "Bipointed.Hom.toFun"],
 ["docBlame", "BoxIntegral.Box.lower"],
 ["docBlame", "BoxIntegral.Box.toSet"],
 ["docBlame", "BoxIntegral.Box.upper"],
 ["docBlame", "BoxIntegral.Box.withBotToSet"],
 ["docBlame", "BoxIntegral.BoxAdditiveMap.toFun"],
 ["docBlame", "BoxIntegral.IntegrationParams.bDistortion"],
 ["docBlame", "BoxIntegral.IntegrationParams.bHenstock"],
 ["docBlame", "BoxIntegral.IntegrationParams.bRiemann"],
 ["docBlame", "BoxIntegral.Prepartition.boxes"],
 ["docBlame", "BoxIntegral.TaggedPrepartition.tag"],
 ["docBlame", "Bundle.TotalSpace.mk'"],
 ["docBlame", "Bundle.TotalSpace.snd"],
 ["docBlame", "CategoryTheory.Bicategory.associator"],
 ["docBlame", "CategoryTheory.Bicategory.leftUnitor"],
 ["docBlame", "CategoryTheory.Bicategory.rightUnitor"],
 ["docBlame", "CategoryTheory.Bicategory.«term_▷_»"],
 ["docBlame", "CategoryTheory.Bicategory.«term_◁_»"],
 ["docBlame", "CategoryTheory.Bicategory.termα_"],
 ["docBlame", "CategoryTheory.Bicategory.«termλ_»"],
 ["docBlame", "CategoryTheory.Bicategory.termρ_"],
 ["docBlame", "CategoryTheory.Bicategory.whiskerLeft"],
 ["docBlame", "CategoryTheory.Bicategory.whiskerRight"],
 ["docBlame", "CategoryTheory.BraidedCategory.braiding"],
 ["docBlame", "CategoryTheory.Comma.hom"],
 ["docBlame", "CategoryTheory.Comma.left"],
 ["docBlame", "CategoryTheory.Comma.right"],
 ["docBlame", "CategoryTheory.CommaMorphism.left"],
 ["docBlame", "CategoryTheory.CommaMorphism.right"],
 ["docBlame", "CategoryTheory.Comonad.δ'"],
 ["docBlame", "CategoryTheory.Comonad.ε'"],
 ["docBlame", "CategoryTheory.EnrichedCategory.Hom"],
 ["docBlame", "CategoryTheory.EnrichedCategory.comp"],
 ["docBlame", "CategoryTheory.EnrichedCategory.id"],
 ["docBlame", "CategoryTheory.EnrichedFunctor.map"],
 ["docBlame", "CategoryTheory.EnrichedFunctor.obj"],
 ["docBlame", "CategoryTheory.ExactPairing.coevaluation"],
 ["docBlame", "CategoryTheory.ExactPairing.coevaluation'"],
 ["docBlame", "CategoryTheory.ExactPairing.evaluation"],
 ["docBlame", "CategoryTheory.ExactPairing.evaluation'"],
 ["docBlame", "CategoryTheory.ExactPairing.termε_"],
 ["docBlame", "CategoryTheory.ExactPairing.termη_"],
 ["docBlame", "CategoryTheory.GlueData.J"],
 ["docBlame", "CategoryTheory.GlueData.U"],
 ["docBlame", "CategoryTheory.GlueData.V"],
 ["docBlame", "CategoryTheory.GlueData.f"],
 ["docBlame", "CategoryTheory.GlueData.t"],
 ["docBlame", "CategoryTheory.GlueData.t'"],
 ["docBlame", "CategoryTheory.GradedNatTrans.app"],
 ["docBlame",
  "CategoryTheory.GrothendieckTopology.sheafificationIsoPresheafToSheafCompSheafToPreasheaf"],
 ["docBlame", "CategoryTheory.HalfBraiding.β"],
 ["docBlame", "CategoryTheory.HasLeftDual.leftDual"],
 ["docBlame", "CategoryTheory.HasRightDual.rightDual"],
 ["docBlame", "CategoryTheory.Mat_.X"],
 ["docBlame", "CategoryTheory.Mat_.ι"],
 ["docBlame", "CategoryTheory.Monad.CreatesColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.HasCoequalizerOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsReflexivePair"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.ReflectsColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.η'"],
 ["docBlame", "CategoryTheory.Monad.μ'"],
 ["docBlame", "CategoryTheory.MonoidalOpposite.«term_ᴹᵒᵖ»"],
 ["docBlame", "CategoryTheory.Presieve.yonedaFamilyOfElements_fromCocone"],
 ["docBlame", "CategoryTheory.Pretopology.coverings"],
 ["docBlame", "CategoryTheory.ProjectivePresentation.f"],
 ["docBlame", "CategoryTheory.ProjectivePresentation.p"],
 ["docBlame", "CategoryTheory.Subgroupoid.arrows"],
 ["docBlame", "CliffordAlgebra.EvenHom.bilin"],
 ["docBlame", "CochainComplex.MkStruct.X₀"],
 ["docBlame", "CochainComplex.MkStruct.X₁"],
 ["docBlame", "CochainComplex.MkStruct.X₂"],
 ["docBlame", "CochainComplex.MkStruct.d₀"],
 ["docBlame", "CochainComplex.MkStruct.d₁"],
 ["docBlame", "Computability.Encoding.decode"],
 ["docBlame", "Computability.Encoding.encode"],
 ["docBlame", "Computability.Encoding.Γ"],
 ["docBlame", "Computability.FinEncoding.ΓFin"],
 ["docBlame", "Computation.parallel.aux1"],
 ["docBlame", "Computation.parallel.aux2"],
 ["docBlame", "Configuration.HasLines.mkLine"],
 ["docBlame", "Configuration.HasPoints.mkPoint"],
 ["docBlame", "Configuration.ProjectivePlane.mkLine"],
 ["docBlame", "ContinuousLinearMap.NonlinearRightInverse.nnnorm"],
 ["docBlame", "ContinuousLinearMap.NonlinearRightInverse.toFun"],
 ["docBlame", "ContinuousMap.HomotopyEquiv.invFun"],
 ["docBlame", "ContinuousMap.HomotopyEquiv.toFun"],
 ["docBlame", "Ctop.Realizer.F"],
 ["docBlame", "Ctop.Realizer.σ"],
 ["docBlame", "DirectSum.Decomposition.decompose'"],
 ["docBlame", "DirectSum.GAlgebra.toFun"],
 ["docBlame", "Equiv.Perm.«termC[_,]»"],
 ["docBlame", "EuclideanGeometry.Sphere.center"],
 ["docBlame", "EuclideanGeometry.Sphere.radius"],
 ["docBlame", "FBinopElab.SRec.args"],
 ["docBlame", "FBinopElab.SRec.name"],
 ["docBlame", "Filter.Germ.const"],
 ["docBlame", "Filter.Germ.ofFun"],
 ["docBlame", "Filter.Realizer.F"],
 ["docBlame", "Filter.Realizer.σ"],
 ["docBlame", "FirstOrder.Language.«term_≃ᴸ_»"],
 ["docBlame", "GeneralizedContinuedFraction.IntFractPair.b"],
 ["docBlame", "GeneralizedContinuedFraction.IntFractPair.fr"],
 ["docBlame", "Geometry.SimplicialComplex.faces"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.Space"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.embed"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.metric"],
 ["docBlame", "HahnSeries.SummableFamily.toFun"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.deg"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.den"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.num"],
 ["docBlame", "HomologicalComplex.Hom.f"],
 ["docBlame", "Ideal.Filtration.N"],
 ["docBlame", "IntermediateField.delabAdjoinNotation.delabInsertArray"],
 ["docBlame", "IsDedekindDomain.HeightOneSpectrum.asIdeal"],
 ["docBlame", "Lean.Attr.substAttr"],
 ["docBlame", "Lean.Export.Alloc"],
 ["docBlame", "Lean.Export.Entry"],
 ["docBlame", "Lean.Export.OfState"],
 ["docBlame", "Lean.Export.State"],
 ["docBlame", "Lean.Export.alloc"],
 ["docBlame", "Lean.Export.biStr"],
 ["docBlame", "Lean.Export.exportDef"],
 ["docBlame", "Lean.Export.exportExpr"],
 ["docBlame", "Lean.Export.exportLevel"],
 ["docBlame", "Lean.Export.exportName"],
 ["docBlame", "Lean.Export.runExportM"],
 ["docBlame", "Lean.Expr.bvarIdx?"],
 ["docBlame", "Lean.Expr.getRevArg?"],
 ["docBlame", "Lean.Expr.modifyAppArg"],
 ["docBlame", "Lean.Expr.modifyAppArgM"],
 ["docBlame", "Lean.Expr.modifyRevArg"],
 ["docBlame", "Lean.MVarId.casesType"],
 ["docBlame", "Lean.MVarId.congrCore!"],
 ["docBlame", "Lean.Meta.checkTypeIsProp"],
 ["docBlame", "Lean.Meta.mkSimpTheoremCore"],
 ["docBlame", "Lean.Meta.preprocess"],
 ["docBlame", "Lean.Meta.shouldPreprocess"],
 ["docBlame", "Lean.Name.isBlackListed"],
 ["docBlame", "Lean.PHashSet.toList"],
 ["docBlame", "LocallyFinite.Realizer.bas"],
 ["docBlame", "LocallyFinite.Realizer.sets"],
 ["docBlame", "MLList.runCmd.put"],
 ["docBlame", "MLList.splitAtBecomesTrueM.aux"],
 ["docBlame", "Mathlib.Notation3.expandFoldl"],
 ["docBlame", "Mathlib.Notation3.expandFoldr"],
 ["docBlame", "Mathlib.Notation3.mkScopedMatcher"],
 ["docBlame", "Mathlib.Notation3.prettyPrintOpt"],
 ["docBlame", "Mathlib.ProjectionNotation.getPPCollapseStructureProjections"],
 ["docBlame", "Mathlib.Tactic.abstract"],
 ["docBlame", "Mathlib.Tactic.acMono"],
 ["docBlame", "Mathlib.Tactic.addHintTactic"],
 ["docBlame", "Mathlib.Tactic.addTacticDoc"],
 ["docBlame", "Mathlib.Tactic.applyField"],
 ["docBlame", "Mathlib.Tactic.applyNormed"],
 ["docBlame", "Mathlib.Tactic.assertInstance"],
 ["docBlame", "Mathlib.Tactic.assertNoInstance"],
 ["docBlame", "Mathlib.Tactic.assocRw"],
 ["docBlame", "Mathlib.Tactic.async"],
 ["docBlame", "Mathlib.Tactic.cases'"],
 ["docBlame", "Mathlib.Tactic.cases''"],
 ["docBlame", "Mathlib.Tactic.cc"],
 ["docBlame", "Mathlib.Tactic.clarify"],
 ["docBlame", "Mathlib.Tactic.compVal"],
 ["docBlame", "Mathlib.Tactic.computeDegreeLE"],
 ["docBlame", "Mathlib.Tactic.continue"],
 ["docBlame", "Mathlib.Tactic.decide!"],
 ["docBlame", "Mathlib.Tactic.defReplacer"],
 ["docBlame", "Mathlib.Tactic.deltaInstance"],
 ["docBlame", "Mathlib.Tactic.deriveElementwiseProof"],
 ["docBlame", "Mathlib.Tactic.deriveReassocProof"],
 ["docBlame", "Mathlib.Tactic.dsimpResult"],
 ["docBlame", "Mathlib.Tactic.elabConfig"],
 ["docBlame", "Mathlib.Tactic.elabVariables"],
 ["docBlame", "Mathlib.Tactic.elide"],
 ["docBlame", "Mathlib.Tactic.equivRw"],
 ["docBlame", "Mathlib.Tactic.equivRwType"],
 ["docBlame", "Mathlib.Tactic.evalIntrov"],
 ["docBlame", "Mathlib.Tactic.expandExists"],
 ["docBlame", "Mathlib.Tactic.extractGoal!"],
 ["docBlame", "Mathlib.Tactic.failIfSuccess?"],
 ["docBlame", "Mathlib.Tactic.field"],
 ["docBlame", "Mathlib.Tactic.finish"],
 ["docBlame", "Mathlib.Tactic.fixingClause"],
 ["docBlame", "Mathlib.Tactic.generalizes"],
 ["docBlame", "Mathlib.Tactic.generalizesArg"],
 ["docBlame", "Mathlib.Tactic.generalizingClause"],
 ["docBlame", "Mathlib.Tactic.guardProofTerm"],
 ["docBlame", "Mathlib.Tactic.guardTags"],
 ["docBlame", "Mathlib.Tactic.hGeneralize"],
 ["docBlame", "Mathlib.Tactic.hGeneralize!"],
 ["docBlame", "Mathlib.Tactic.haveField"],
 ["docBlame", "Mathlib.Tactic.include"],
 ["docBlame", "Mathlib.Tactic.induction'"],
 ["docBlame", "Mathlib.Tactic.induction''"],
 ["docBlame", "Mathlib.Tactic.injectionsAndClear"],
 ["docBlame", "Mathlib.Tactic.interactive"],
 ["docBlame", "Mathlib.Tactic.intro"],
 ["docBlame", "Mathlib.Tactic.intro!"],
 ["docBlame", "Mathlib.Tactic.isBounded_default"],
 ["docBlame", "Mathlib.Tactic.itauto"],
 ["docBlame", "Mathlib.Tactic.itauto!"],
 ["docBlame", "Mathlib.Tactic.listUnusedDecls"],
 ["docBlame", "Mathlib.Tactic.mapply"],
 ["docBlame", "Mathlib.Tactic.matchHyp"],
 ["docBlame", "Mathlib.Tactic.mkDecorations"],
 ["docBlame", "Mathlib.Tactic.moveAdd"],
 ["docBlame", "Mathlib.Tactic.moveMul"],
 ["docBlame", "Mathlib.Tactic.moveOp"],
 ["docBlame", "Mathlib.Tactic.mvBisim"],
 ["docBlame", "Mathlib.Tactic.notationClass"],
 ["docBlame", "Mathlib.Tactic.nthRwLHS"],
 ["docBlame", "Mathlib.Tactic.nthRwRHS"],
 ["docBlame", "Mathlib.Tactic.obviously"],
 ["docBlame", "Mathlib.Tactic.omit"],
 ["docBlame", "Mathlib.Tactic.padicIndexSimp"],
 ["docBlame", "Mathlib.Tactic.parameter"],
 ["docBlame", "Mathlib.Tactic.piInstance"],
 ["docBlame", "Mathlib.Tactic.piInstanceDeriveField"],
 ["docBlame", "Mathlib.Tactic.pp_nodot"],
 ["docBlame", "Mathlib.Tactic.prettyCases"],
 ["docBlame", "Mathlib.Tactic.printSorryIn"],
 ["docBlame", "Mathlib.Tactic.propagateTags"],
 ["docBlame", "Mathlib.Tactic.protectProj"],
 ["docBlame", "Mathlib.Tactic.rcases?"],
 ["docBlame", "Mathlib.Tactic.reassoc"],
 ["docBlame", "Mathlib.Tactic.reassoc!"],
 ["docBlame", "Mathlib.Tactic.reassocAxiom"],
 ["docBlame", "Mathlib.Tactic.refineStruct"],
 ["docBlame", "Mathlib.Tactic.renameArg"],
 ["docBlame", "Mathlib.Tactic.revertAfter"],
 ["docBlame", "Mathlib.Tactic.revertDeps"],
 ["docBlame", "Mathlib.Tactic.revertTargetDeps"],
 ["docBlame", "Mathlib.Tactic.rintro?"],
 ["docBlame", "Mathlib.Tactic.rsimp"],
 ["docBlame", "Mathlib.Tactic.rwSearch"],
 ["docBlame", "Mathlib.Tactic.rwSearch?"],
 ["docBlame", "Mathlib.Tactic.safe"],
 ["docBlame", "Mathlib.Tactic.sample"],
 ["docBlame", "Mathlib.Tactic.setArgsRest"],
 ["docBlame", "Mathlib.Tactic.setTactic"],
 ["docBlame", "Mathlib.Tactic.simpResult"],
 ["docBlame", "Mathlib.Tactic.subtypeInstance"],
 ["docBlame", "Mathlib.Tactic.suggest"],
 ["docBlame", "Mathlib.Tactic.tacticDestruct_"],
 ["docBlame", "Mathlib.Tactic.tacticHave_"],
 ["docBlame", "Mathlib.Tactic.tacticLet_"],
 ["docBlame", "Mathlib.Tactic.tacticMatch_target_"],
 ["docBlame", "Mathlib.Tactic.tacticSet!_"],
 ["docBlame", "Mathlib.Tactic.tacticSuffices_"],
 ["docBlame", "Mathlib.Tactic.tacticTransitivity___"],
 ["docBlame", "Mathlib.Tactic.termList"],
 ["docBlame", "Mathlib.Tactic.tidy"],
 ["docBlame", "Mathlib.Tactic.tidy?"],
 ["docBlame", "Mathlib.Tactic.transport"],
 ["docBlame", "Mathlib.Tactic.truncCases"],
 ["docBlame", "Mathlib.Tactic.tryFor"],
 ["docBlame", "Mathlib.Tactic.unelide"],
 ["docBlame", "Mathlib.Tactic.unfoldAux"],
 ["docBlame", "Mathlib.Tactic.unfoldCases"],
 ["docBlame", "Mathlib.Tactic.unfoldCoes"],
 ["docBlame", "Mathlib.Tactic.unfoldWf"],
 ["docBlame", "Mathlib.Tactic.uniqueDiffWithinAt_Ici_Iic_univ"],
 ["docBlame", "Mathlib.Tactic.unitInterval"],
 ["docBlame", "Mathlib.Tactic.usingArg"],
 ["docBlame", "Mathlib.Tactic.variables"],
 ["docBlame", "Mathlib.Tactic.withArgs"],
 ["docBlame", "Mathlib.Tactic.withPattern"],
 ["docBlame", "Mathlib.Tactic.wittTruncateFunTac"],
 ["docBlame", "Mathlib.WhatsNew.diffExtension"],
 ["docBlame", "Mathlib.WhatsNew.whatsNew"],
 ["docBlame", "Mathlib.evalExtractLet.doExtract"],
 ["docBlame", "Mathlib.evalExtractLet.setupNames"],
 ["docBlame", "Matrix.TransvectionStruct.c"],
 ["docBlame", "Matrix.TransvectionStruct.i"],
 ["docBlame", "Matrix.TransvectionStruct.j"],
 ["docBlame", "MeasureTheory.Content.toFun"],
 ["docBlame", "MeasureTheory.Filtration.seq"],
 ["docBlame", "MeasureTheory.JordanDecomposition.negPart"],
 ["docBlame", "MeasureTheory.JordanDecomposition.posPart"],
 ["docBlame", "MeasureTheory.Lp.constL"],
 ["docBlame", "MeasureTheory.OuterMeasure.measureOf"],
 ["docBlame", "MeasureTheory.SimpleFunc.toFun"],
 ["docBlame", "MeasureTheory.VectorMeasure.measureOf'"],
 ["docBlame", "Mod_.Hom.hom"],
 ["docBlame", "Module.Baer.supExtensionOfMaxSingleton"],
 ["docBlame", "Mon_.Hom.hom"],
 ["docBlame", "MonadCont.Label.apply"],
 ["docBlame", "Monoid.Foldl.get"],
 ["docBlame", "Monoid.Foldl.mk"],
 ["docBlame", "Monoid.Foldl.ofFreeMonoid"],
 ["docBlame", "Monoid.Foldr.get"],
 ["docBlame", "Monoid.Foldr.mk"],
 ["docBlame", "Monoid.Foldr.ofFreeMonoid"],
 ["docBlame", "Monoid.foldlM.get"],
 ["docBlame", "Monoid.foldlM.mk"],
 ["docBlame", "Monoid.foldlM.ofFreeMonoid"],
 ["docBlame", "Monoid.foldrM.get"],
 ["docBlame", "Monoid.foldrM.mk"],
 ["docBlame", "Monoid.foldrM.ofFreeMonoid"],
 ["docBlame", "Nat.ArithmeticFunction.termΛ"],
 ["docBlame", "Order.PFilter.dual"],
 ["docBlame", "PProd.mk.injArrow"],
 ["docBlame", "PicardLindelof.FunSpace.toFun"],
 ["docBlame", "PresheafOfModules.Hom.hom"],
 ["docBlame", "Prod.mk.injArrow"],
 ["docBlame", "QuaternionAlgebra.Basis.i"],
 ["docBlame", "QuaternionAlgebra.Basis.j"],
 ["docBlame", "QuaternionAlgebra.Basis.k"],
 ["docBlame", "Sat.Clause.cons"],
 ["docBlame", "Sat.Clause.nil"],
 ["docBlame", "Set.setOf.unexpander"],
 ["docBlame", "SimpleGraph.Subgraph.Adj"],
 ["docBlame", "SimpleGraph.Subgraph.verts"],
 ["docBlame", "SimpleGraph.Walk.notNilRec"],
 ["docBlame", "SlimCheck.Configuration.maxSize"],
 ["docBlame", "SlimCheck.Configuration.numInst"],
 ["docBlame", "SlimCheck.Configuration.numRetries"],
 ["docBlame", "SlimCheck.Configuration.quiet"],
 ["docBlame", "SlimCheck.Configuration.randomSeed"],
 ["docBlame", "SlimCheck.Configuration.traceDiscarded"],
 ["docBlame", "SlimCheck.Configuration.traceShrink"],
 ["docBlame", "SlimCheck.Configuration.traceShrinkCandidates"],
 ["docBlame", "SlimCheck.Configuration.traceSuccesses"],
 ["docBlame", "SlimCheck.NoShrink.get"],
 ["docBlame", "SlimCheck.NoShrink.mk"],
 ["docBlame", "SlimCheck.PrintableProp.printProp"],
 ["docBlame", "SlimCheck.SampleableExt.interp"],
 ["docBlame", "SlimCheck.SampleableExt.proxy"],
 ["docBlame", "SlimCheck.SampleableExt.sample"],
 ["docBlame", "SlimCheck.Shrinkable.shrink"],
 ["docBlame", "SlimCheck.TestResult.isFailure"],
 ["docBlame", "SlimCheck.TestResult.toString"],
 ["docBlame", "SlimCheck.Testable.run"],
 ["docBlame", "SlimCheck.Testable.runProp"],
 ["docBlame", "Std.Prec.arrow"],
 ["docBlame", "Std.Prec.max"],
 ["docBlame", "Std.Prec.maxPlus"],
 ["docBlame", "Std.Priority.default"],
 ["docBlame", "Std.Priority.max"],
 ["docBlame", "Stream'.WSeq.«term_~ʷ_»"],
 ["docBlame", "String.toAsciiByteArray.loop"],
 ["docBlame", "Submodule.quotientPi_aux.invFun"],
 ["docBlame", "Submodule.quotientPi_aux.toFun"],
 ["docBlame", "Tactic.Elementwise.tacticElementwise!___"],
 ["docBlame", "Tactic.Elementwise.tacticElementwise___"],
 ["docBlame", "Tactic.NormNum.evalNatGCD"],
 ["docBlame", "ToAdditive.additiveTestUnsafe.visit"],
 ["docBlame", "TopologicalSpace.Clopens.carrier"],
 ["docBlame", "TopologicalSpace.Closeds.carrier"],
 ["docBlame", "TopologicalSpace.Compacts.carrier"],
 ["docBlame", "Topology.Homotopy.termΩ"],
 ["docBlame", "Topology.Homotopy.«termΩ^»"],
 ["docBlame", "Turing.EvalsTo.steps"],
 ["docBlame", "Turing.FinTM2.K"],
 ["docBlame", "Turing.FinTM2.initialState"],
 ["docBlame", "Turing.FinTM2.kDecidableEq"],
 ["docBlame", "Turing.FinTM2.kFin"],
 ["docBlame", "Turing.FinTM2.k₀"],
 ["docBlame", "Turing.FinTM2.k₁"],
 ["docBlame", "Turing.FinTM2.m"],
 ["docBlame", "Turing.FinTM2.main"],
 ["docBlame", "Turing.FinTM2.Γ"],
 ["docBlame", "Turing.FinTM2.Γk₀Fin"],
 ["docBlame", "Turing.FinTM2.Λ"],
 ["docBlame", "Turing.FinTM2.ΛFin"],
 ["docBlame", "Turing.FinTM2.σ"],
 ["docBlame", "Turing.FinTM2.σFin"],
 ["docBlame", "Turing.PointedMap.f"],
 ["docBlame", "Turing.TM2Computable.outputsFun"],
 ["docBlame", "Turing.TM2ComputableAux.inputAlphabet"],
 ["docBlame", "Turing.TM2ComputableAux.outputAlphabet"],
 ["docBlame", "Turing.TM2ComputableAux.tm"],
 ["docBlame", "Turing.TM2ComputableInPolyTime.outputsFun"],
 ["docBlame", "Turing.TM2ComputableInPolyTime.time"],
 ["docBlame", "Turing.TM2ComputableInTime.outputsFun"],
 ["docBlame", "Turing.TM2ComputableInTime.time"],
 ["docBlame", "Turing.Tape.head"],
 ["docBlame", "Turing.Tape.left"],
 ["docBlame", "Turing.Tape.right"],
 ["docBlame", "WittVector.Isocrystal.frob"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.Hom.base"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.Hom.c"],
 ["docBlame",
  "AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac"],
 ["docBlame",
  "AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac_aux"],
 ["docBlame", "AlgebraicTopology.DoldKan.MorphComponents.a"],
 ["docBlame", "AlgebraicTopology.DoldKan.MorphComponents.b"],
 ["docBlame", "CategoryTheory.Center.Hom.f"],
 ["docBlame", "CategoryTheory.FreeBicategory.Hom₂.mk"],
 ["docBlame", "CategoryTheory.Functor.CommShift.iso"],
 ["docBlame",
  "CategoryTheory.Limits.CoproductDisjoint.isInitialOfIsPullbackOfIsCoproduct"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.L"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.R"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.fst"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.fstTo"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.left"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.right"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.snd"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.sndTo"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.L"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.R"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.fst"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.fstFrom"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.left"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.right"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.snd"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.sndFrom"],
 ["docBlame", "CategoryTheory.Limits.PreservesColimit.preserves"],
 ["docBlame", "CategoryTheory.Limits.PreservesLimit.preserves"],
 ["docBlame", "CategoryTheory.Limits.ReflectsColimit.reflects"],
 ["docBlame", "CategoryTheory.Limits.ReflectsColimitsOfShape.reflectsColimit"],
 ["docBlame",
  "CategoryTheory.Limits.ReflectsColimitsOfSize.reflectsColimitsOfShape"],
 ["docBlame", "CategoryTheory.Limits.ReflectsLimit.reflects"],
 ["docBlame", "CategoryTheory.Limits.ReflectsLimitsOfShape.reflectsLimit"],
 ["docBlame",
  "CategoryTheory.Limits.ReflectsLimitsOfSize.reflectsLimitsOfShape"],
 ["docBlame", "CategoryTheory.Monad.CreatesColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.out"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Pretriangulated.Triangle.homMk"],
 ["docBlame", "CategoryTheory.Pretriangulated.Triangle.isoMk"],
 ["docBlame", "CategoryTheory.Triangulated.Octahedron.m₁"],
 ["docBlame", "CategoryTheory.Triangulated.Octahedron.m₃"],
 ["docBlame", "FirstOrder.Language.ElementaryEmbedding.toFun"],
 ["docBlame", "FirstOrder.Language.ElementarySubstructure.toSubstructure"],
 ["docBlame", "FirstOrder.Language.IsOrdered.leSymb"],
 ["docBlame", "FirstOrder.Language.LEquiv.invLHom"],
 ["docBlame", "FirstOrder.Language.LEquiv.toLHom"],
 ["docBlame", "FirstOrder.Language.LHom.onFunction"],
 ["docBlame", "FirstOrder.Language.LHom.onRelation"],
 ["docBlame", "FirstOrder.Language.Prestructure.toStructure"],
 ["docBlame", "FirstOrder.Language.Substructure.carrier"],
 ["docBlame", "FirstOrder.Language.Term.relabel"],
 ["docBlame", "Lean.Elab.Command.irredDefLemma"],
 ["docBlame", "Lean.Export.Alloc.map"],
 ["docBlame", "Lean.Export.Alloc.next"],
 ["docBlame", "Lean.Export.OfState.get"],
 ["docBlame", "Lean.Export.OfState.modify"],
 ["docBlame", "Lean.Export.State.defs"],
 ["docBlame", "Lean.Export.State.exprs"],
 ["docBlame", "Lean.Export.State.levels"],
 ["docBlame", "Lean.Export.State.names"],
 ["docBlame", "Lean.Export.State.stk"],
 ["docBlame", "Lean.Export.exportDef.axdef"],
 ["docBlame", "Lean.Export.exportDef.defn"],
 ["docBlame", "Lean.Export.exportDef.ind"],
 ["docBlame", "Lean.Export.exportDef.indbody"],
 ["docBlame", "Lean.Export.exportDef.insert"],
 ["docBlame", "Lean.MVarId.congrN!.go"],
 ["docBlame", "Lean.MVarId.congrN!.post"],
 ["docBlame", "Lean.MVarId.congrSimp?.forSide"],
 ["docBlame", "Lean.MVarId.introsClean.eqImpOfIffImp"],
 ["docBlame", "Lean.MVarId.introsClean.heqImpOfEqImp"],
 ["docBlame", "Lean.MVarId.introsClean.isTrivialType"],
 ["docBlame", "Lean.MVarId.introsClean.loop"],
 ["docBlame", "Lean.MVarId.smartHCongr?.forSide"],
 ["docBlame", "Lean.MVarId.smartHCongr?.loop"],
 ["docBlame", "Lean.MVarId.userCongr?.forSide"],
 ["docBlame", "Lean.Parser.Attr.higherOrder"],
 ["docBlame", "Lean.Parser.Tactic.applyCongr"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintype"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintypeInstanceHandler"],
 ["docBlame", "Mathlib.Meta.NormNum.proveNatFibAux"],
 ["docBlame", "Mathlib.Meta.Positivity.evalBernstein"],
 ["docBlame", "Mathlib.Meta.Positivity.evalIntCast"],
 ["docBlame", "Mathlib.Meta.Positivity.evalNatCast"],
 ["docBlame", "Mathlib.ProjectionNotation.delabProjectionApp'.walkUp"],
 ["docBlame", "Mathlib.ProjectionNotation.pp.collapseStructureProjections"],
 ["docBlame", "Mathlib.Tactic.Conv.convLHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRun_conv_"],
 ["docBlame", "Mathlib.Tactic.ElimApp.evalNames"],
 ["docBlame", "Mathlib.Tactic.Find.«command#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.findDeclsPerHead"],
 ["docBlame", "Mathlib.Tactic.Find.findType"],
 ["docBlame", "Mathlib.Tactic.Find.«tactic#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.tacticFind"],
 ["docBlame", "Mathlib.Tactic.GCongr.exact"],
 ["docBlame", "Mathlib.Tactic.GCongr.tacticGcongr_discharger"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.apply?'"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.cachePath"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact!?"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?!"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?'"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.tacticLibrary_search"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.«termExact?%»"],
 ["docBlame", "Mathlib.Tactic.Propose.proposeLemmas"],
 ["docBlame", "Mathlib.Tactic.Rewrites.cachePath"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeSquarePresenter"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeTrianglePresenter"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.intro1PStep"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.introsDep"],
 ["docBlame", "MeasureTheory.Measure.FiniteSpanningSetsIn.set"],
 ["docBlame", "Module.End.Eigenvalues.val"],
 ["docBlame", "Order.Ideal.PrimePair.F"],
 ["docBlame", "Order.Ideal.PrimePair.I"],
 ["docBlame", "SetTheory.PGame.State.l"],
 ["docBlame", "SetTheory.PGame.State.r"],
 ["docBlame", "SetTheory.PGame.State.turnBound"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s'"],
 ["docBlame", "Tactic.Elementwise.elementwiseExpr.mkHomElementwise"],
 ["docBlame", "TopCat.GlueData.MkCore.J"],
 ["docBlame", "TopCat.GlueData.MkCore.U"],
 ["docBlame", "TopCat.GlueData.MkCore.V"],
 ["docBlame", "TopCat.GlueData.MkCore.t"],
 ["docBlame", "TopCat.Presheaf.SubmonoidPresheaf.obj"],
 ["docBlame", "Turing.TM0.Cfg.Tape"],
 ["docBlame", "Turing.TM0.Cfg.q"],
 ["docBlame", "Turing.TM1.Cfg.Tape"],
 ["docBlame", "Turing.TM1.Cfg.l"],
 ["docBlame", "Turing.TM1.Cfg.var"],
 ["docBlame", "Turing.TM2.Cfg.l"],
 ["docBlame", "Turing.TM2.Cfg.stk"],
 ["docBlame", "Turing.TM2.Cfg.var"],
 ["docBlame", "FirstOrder.Language.Theory.CompleteType.toTheory"],
 ["docBlame", "FirstOrder.Language.Theory.ModelType.Carrier"],
 ["docBlame", "Lean.Meta.mkRichHCongr.doubleTelescope.loop"],
 ["docBlame", "Lean.Meta.mkRichHCongr.withNewEqs.loop"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders'.isVariableAlias"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.extendScope"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.process"],
 ["docBlame", "Mathlib.Command.Variable.variable?.checkRedundant"],
 ["docBlame", "Mathlib.Command.Variable.variable?.maxSteps"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.aux"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.core"],
 ["docBlame", "Mathlib.Meta.NormNum.evalNatPrime.core"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftHom.lift"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftObj.lift"],
 ["docBlame", "Mathlib.Tactic.Coherence.MonoidalCoherence.hom"],
 ["docBlame", "Mathlib.Tactic.GCongr.ForwardExt.eval"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.declName"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.mainSubgoals"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.varyingArgs"],
 ["docBlame", "Mathlib.Tactic.Monotonicity.mono.side"],
 ["docBlame", "Mathlib.Tactic.Sat.buildReify.mkPS"],
 ["docBlame", "Mathlib.Tactic.Says.says.no_verify_in_CI"],
 ["docBlame", "Mathlib.Tactic.Says.says.verify"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.ratArm"],
 ["impossibleInstance", "AddChar.instFunLike"],
 ["impossibleInstance", "AffineIsometry.instFunLikeAffineIsometry"],
 ["impossibleInstance",
  "BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["impossibleInstance", "ContMDiffMap.funLike"],
 ["impossibleInstance", "ContMDiffSection.instFunLikeContMDiffSection"],
 ["impossibleInstance", "DilationClass.toFunLike"],
 ["impossibleInstance", "GenLoop.funLike"],
 ["impossibleInstance", "OrthonormalBasis.instFunLike"],
 ["impossibleInstance", "PMF.funLike"],
 ["impossibleInstance",
  "PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["impossibleInstance", "PointedSmoothMap.funLike"],
 ["impossibleInstance",
  "ProbabilityTheory.instFunLikeSubtypeForAllMeasureMemAddSubmonoidAddZeroClassToAddZeroClassToAddMonoidInstAddCommMonoidInstMembershipInstSetLikeAddSubmonoidKernel"],
 ["impossibleInstance", "SchwartzMap.instFunLike"],
 ["impossibleInstance", "SemiNormedGroupCat₁.instFunLike"],
 ["impossibleInstance", "SlashInvariantFormClass.toFunLike"],
 ["impossibleInstance",
  "SmoothPartitionOfUnity.instFunLikeSmoothPartitionOfUnityContMDiffMapRealToNontriviallyNormedFieldDenselyNormedFieldNormedAddCommGroupToNormedSpaceIsROrCInnerProductSpaceToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupModelWithCornersSelfPseudoMetricSpaceChartedSpaceSelfTopENatInstENatTop"],
 ["impossibleInstance",
  "Stonean.instFunLikeHomStoneanToQuiverToCategoryStructInstLargeCategoryStoneanCoeTypeInstCoeSortStoneanType"],
 ["impossibleInstance",
  "BoxIntegral.BoxAdditiveMap.instFunLikeBoxAdditiveMapBox"],
 ["impossibleInstance",
  "NumberField.InfinitePlace.instFunLikeInfinitePlaceReal"],
 ["nonClassInstance", "AddChar.instFunLike"],
 ["nonClassInstance", "AffineIsometry.instFunLikeAffineIsometry"],
 ["nonClassInstance",
  "BumpCovering.instFunLikeBumpCoveringContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["nonClassInstance", "ContMDiffMap.funLike"],
 ["nonClassInstance", "ContMDiffSection.instFunLikeContMDiffSection"],
 ["nonClassInstance", "DilationClass.toFunLike"],
 ["nonClassInstance", "GenLoop.funLike"],
 ["nonClassInstance", "OrthonormalBasis.instFunLike"],
 ["nonClassInstance", "PMF.funLike"],
 ["nonClassInstance",
  "PartitionOfUnity.instFunLikePartitionOfUnityContinuousMapRealToTopologicalSpaceToUniformSpacePseudoMetricSpace"],
 ["nonClassInstance", "PointedSmoothMap.funLike"],
 ["nonClassInstance",
  "ProbabilityTheory.instFunLikeSubtypeForAllMeasureMemAddSubmonoidAddZeroClassToAddZeroClassToAddMonoidInstAddCommMonoidInstMembershipInstSetLikeAddSubmonoidKernel"],
 ["nonClassInstance", "SchwartzMap.instFunLike"],
 ["nonClassInstance", "SemiNormedGroupCat₁.instFunLike"],
 ["nonClassInstance", "SlashInvariantFormClass.toFunLike"],
 ["nonClassInstance",
  "SmoothPartitionOfUnity.instFunLikeSmoothPartitionOfUnityContMDiffMapRealToNontriviallyNormedFieldDenselyNormedFieldNormedAddCommGroupToNormedSpaceIsROrCInnerProductSpaceToTopologicalSpaceToUniformSpaceToPseudoMetricSpaceToSeminormedAddCommGroupModelWithCornersSelfPseudoMetricSpaceChartedSpaceSelfTopENatInstENatTop"],
 ["nonClassInstance",
  "Stonean.instFunLikeHomStoneanToQuiverToCategoryStructInstLargeCategoryStoneanCoeTypeInstCoeSortStoneanType"],
 ["nonClassInstance",
  "BoxIntegral.BoxAdditiveMap.instFunLikeBoxAdditiveMapBox"],
 ["nonClassInstance", "NumberField.InfinitePlace.instFunLikeInfinitePlaceReal"],
 ["simpComm", "addRothNumber_map_add_left"],
 ["simpComm", "addRothNumber_map_add_right"],
 ["simpComm", "apply_fdifferential"],
 ["simpComm", "apply_hfdifferential"],
 ["simpComm", "continuousMultilinearCurryFin0_apply"],
 ["simpComm", "continuousMultilinearCurryFin1_apply"],
 ["simpComm", "continuousMultilinearCurryFin1_symm_apply"],
 ["simpComm", "continuousMultilinearCurryLeftEquiv_apply"],
 ["simpComm", "continuousMultilinearCurryLeftEquiv_symm_apply"],
 ["simpComm", "continuousMultilinearCurryRightEquiv_apply"],
 ["simpComm", "continuousMultilinearCurryRightEquiv_apply'"],
 ["simpComm", "continuousMultilinearCurryRightEquiv_symm_apply"],
 ["simpComm", "continuousMultilinearCurryRightEquiv_symm_apply'"],
 ["simpComm", "convexHull_diam"],
 ["simpComm", "convexHull_ediam"],
 ["simpComm", "dist_left_pointReflection"],
 ["simpComm", "dist_ofAdd"],
 ["simpComm", "dist_ofDual"],
 ["simpComm", "dist_ofMul"],
 ["simpComm", "dist_pointReflection_left"],
 ["simpComm", "dist_toAdd"],
 ["simpComm", "dist_toDual"],
 ["simpComm", "dist_toMul"],
 ["simpComm", "gelfandStarTransform_apply_apply"],
 ["simpComm", "gelfandStarTransform_symm_apply"],
 ["simpComm", "imaginaryPart_I_smul"],
 ["simpComm", "innerSL_apply_norm"],
 ["simpComm", "inner_orthogonalProjection_eq_of_mem_right"],
 ["simpComm", "isBounded_convexHull"],
 ["simpComm", "iteratedFDerivWithin_one_apply"],
 ["simpComm", "iteratedFDeriv_one_apply"],
 ["simpComm", "mulRothNumber_map_mul_left"],
 ["simpComm", "mulRothNumber_map_mul_right"],
 ["simpComm", "nndist_ofAdd"],
 ["simpComm", "nndist_ofDual"],
 ["simpComm", "nndist_ofMul"],
 ["simpComm", "nndist_toAdd"],
 ["simpComm", "nndist_toDual"],
 ["simpComm", "nndist_toMul"],
 ["simpComm", "nnnorm_ofAdd"],
 ["simpComm", "nnnorm_ofDual"],
 ["simpComm", "nnnorm_ofMul"],
 ["simpComm", "nnnorm_toAdd"],
 ["simpComm", "nnnorm_toDual"],
 ["simpComm", "nnnorm_toMul"],
 ["simpComm", "norm_ofAdd"],
 ["simpComm", "norm_ofDual"],
 ["simpComm", "norm_ofMul"],
 ["simpComm", "norm_toAdd"],
 ["simpComm", "norm_toDual"],
 ["simpComm", "norm_toMul"],
 ["simpComm", "realPart_idem"],
 ["simpComm", "realPart_imaginaryPart"],
 ["simpComm", "tangentBundleModelSpaceHomeomorph_coe"],
 ["simpComm", "tangentBundleModelSpaceHomeomorph_coe_symm"],
 ["simpComm", "AddChar.mulShift_apply"],
 ["simpComm", "AddMonoidHom.coe_toRealLinearMap"],
 ["simpComm", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional"],
 ["simpComm", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional_symm"],
 ["simpComm", "AffineIsometry.coe_toAffineIsometryEquiv"],
 ["simpComm", "AffineIsometry.coe_toAffineMap"],
 ["simpComm", "AffineIsometry.toAffineIsometryEquiv_apply"],
 ["simpComm", "AffineIsometryEquiv.coe_inv"],
 ["simpComm", "AffineIsometryEquiv.coe_mk"],
 ["simpComm", "AffineIsometryEquiv.coe_toAffineEquiv"],
 ["simpComm", "AffineIsometryEquiv.coe_toAffineIsometry"],
 ["simpComm", "AffineIsometryEquiv.coe_toHomeomorph"],
 ["simpComm", "AffineIsometryEquiv.coe_toIsometryEquiv"],
 ["simpComm", "AffineIsometryEquiv.dist_pointReflection_fixed"],
 ["simpComm", "AffineSubspace.coe_subtypeₐᵢ"],
 ["simpComm", "AlgHom.coe_toContinuousLinearMap"],
 ["simpComm", "AlgHom.map_coe_real_complex"],
 ["simpComm", "Basis.coe_toOrthonormalBasis"],
 ["simpComm", "Basis.coe_toOrthonormalBasis_repr"],
 ["simpComm", "Basis.coe_toOrthonormalBasis_repr_symm"],
 ["simpComm", "Basis.equivFunL_apply"],
 ["simpComm", "BoundedContinuousFunction.coeFnAddHom_apply"],
 ["simpComm", "BoundedContinuousFunction.coe_to_continuous_fun"],
 ["simpComm", "BoundedContinuousFunction.compContinuous_apply"],
 ["simpComm", "BoundedContinuousFunction.evalClm_apply"],
 ["simpComm", "BoundedContinuousFunction.extend_apply"],
 ["simpComm", "BoundedContinuousFunction.mkOfBound_coe"],
 ["simpComm", "BoundedContinuousFunction.mkOfCompact_apply"],
 ["simpComm", "BoundedContinuousFunction.restrict_apply"],
 ["simpComm", "BumpCovering.coe_toSmoothPartitionOfUnity"],
 ["simpComm", "CircleDeg1Lift.coe_mk"],
 ["simpComm", "CircleDeg1Lift.coe_toOrderHom"],
 ["simpComm", "CircleDeg1Lift.coe_toOrderIso"],
 ["simpComm", "CircleDeg1Lift.coe_toOrderIso_inv"],
 ["simpComm", "CircleDeg1Lift.coe_toOrderIso_symm"],
 ["simpComm", "CircleDeg1Lift.map_fract_sub_fract_eq"],
 ["simpComm", "CliffordAlgebra.equivBaseChange_apply"],
 ["simpComm", "CliffordAlgebra.equivBaseChange_symm_apply"],
 ["simpComm", "CliffordAlgebra.ofBaseChangeAux_ι"],
 ["simpComm", "CliffordAlgebra.ofBaseChange_tmul_one"],
 ["simpComm", "CliffordAlgebra.ofBaseChange_tmul_ι"],
 ["simpComm", "CliffordAlgebraComplex.equiv_apply"],
 ["simpComm", "CliffordAlgebraComplex.equiv_symm_apply"],
 ["simpComm", "CliffordAlgebraComplex.ofComplex_I"],
 ["simpComm", "CliffordAlgebraComplex.ofComplex_conj"],
 ["simpComm", "CliffordAlgebraComplex.toComplex_involute"],
 ["simpComm", "CliffordAlgebraDualNumber.equiv_symm_eps"],
 ["simpComm", "CliffordAlgebraQuaternion.equiv_apply"],
 ["simpComm", "CliffordAlgebraQuaternion.equiv_symm_apply"],
 ["simpComm", "CompHaus.homeoOfIso_apply"],
 ["simpComm", "CompHaus.homeoOfIso_symm_apply"],
 ["simpComm", "Complex.abs_conj"],
 ["simpComm", "Complex.conjAe_coe"],
 ["simpComm", "Complex.conjCle_apply"],
 ["simpComm", "Complex.conjLie_apply"],
 ["simpComm", "Complex.dist_conj_conj"],
 ["simpComm", "Complex.nndist_conj_conj"],
 ["simpComm", "Complex.toMatrix_conjAe"],
 ["simpComm", "ContMDiffMap.comp_apply"],
 ["simpComm", "ContinuousAddMonoidHom.comp_toFun"],
 ["simpComm", "ContinuousAddMonoidHom.coprod_toFun"],
 ["simpComm", "ContinuousAffineMap.coe_contLinear"],
 ["simpComm", "ContinuousAffineMap.coe_mk_const_linear_eq_linear"],
 ["simpComm", "ContinuousLinearEquiv.coeFn_ofBijective"],
 ["simpComm", "ContinuousLinearEquiv.coe_toDiffeomorph"],
 ["simpComm", "ContinuousLinearEquiv.coe_toDiffeomorph_symm"],
 ["simpComm", "ContinuousLinearEquiv.coe_toSpanNonzeroSingleton_symm"],
 ["simpComm", "ContinuousLinearMap.adjointAux_apply"],
 ["simpComm", "ContinuousLinearMap.adjointAux_norm"],
 ["simpComm", "ContinuousLinearMap.apply_apply"],
 ["simpComm", "ContinuousLinearMap.apply_apply'"],
 ["simpComm", "ContinuousLinearMap.bilinearComp_apply"],
 ["simpComm", "ContinuousLinearMap.coeFn_ofIsClosedGraph"],
 ["simpComm", "ContinuousLinearMap.coeFn_ofSeqClosedGraph"],
 ["simpComm", "ContinuousLinearMap.coe_equivRange"],
 ["simpComm", "ContinuousLinearMap.coe_mkOfIsCompactOperator"],
 ["simpComm", "ContinuousLinearMap.coe_mulₗᵢ"],
 ["simpComm", "ContinuousLinearMap.compLeftContinuousBounded_apply"],
 ["simpComm", "ContinuousLinearMap.compLeftContinuousCompact_apply"],
 ["simpComm", "ContinuousLinearMap.extend_eq"],
 ["simpComm", "ContinuousLinearMap.flipMultilinear_apply_apply"],
 ["simpComm", "ContinuousLinearMap.flip_apply"],
 ["simpComm", "ContinuousLinearMap.norm_smulRightL"],
 ["simpComm", "ContinuousLinearMap.op_nnnorm_mul_apply"],
 ["simpComm", "ContinuousLinearMap.op_norm_mul_apply"],
 ["simpComm", "ContinuousLinearMap.precompR_apply"],
 ["simpComm", "ContinuousLinearMap.toContinuousLinearEquivOfDetNeZero_apply"],
 ["simpComm", "ContinuousLinearMap.uncurryBilinear_apply"],
 ["simpComm", "ContinuousLinearMap.uncurryLeft_apply"],
 ["simpComm", "ContinuousMap.addEquivBoundedOfCompact_symm_apply"],
 ["simpComm", "ContinuousMap.linearIsometryBoundedOfCompact_apply_apply"],
 ["simpComm", "ContinuousMap.toLp_comp_toContinuousMap"],
 ["simpComm", "ContinuousMonoidHom.comp_toFun"],
 ["simpComm", "ContinuousMonoidHom.coprod_toFun"],
 ["simpComm", "ContinuousMultilinearMap.compAlongComposition_apply"],
 ["simpComm", "ContinuousMultilinearMap.curryFinFinset_apply"],
 ["simpComm", "ContinuousMultilinearMap.curryFinFinset_symm_apply"],
 ["simpComm", "ContinuousMultilinearMap.curryFinFinset_symm_apply_const"],
 ["simpComm", "ContinuousMultilinearMap.curryLeft_apply"],
 ["simpComm", "ContinuousMultilinearMap.curryRight_apply"],
 ["simpComm", "ContinuousMultilinearMap.currySum_apply"],
 ["simpComm", "ContinuousMultilinearMap.nnnorm_ofSubsingleton"],
 ["simpComm", "ContinuousMultilinearMap.norm_ofSubsingleton"],
 ["simpComm", "ContinuousMultilinearMap.uncurryRight_apply"],
 ["simpComm", "ContinuousMultilinearMap.uncurrySum_apply"],
 ["simpComm", "CuspForm.coeHom_apply"],
 ["simpComm", "CuspForm.toSlashInvariantForm_coe"],
 ["simpComm", "Diffeomorph.coe_coe"],
 ["simpComm", "Diffeomorph.coe_toEquiv"],
 ["simpComm", "Diffeomorph.coe_toHomeomorph"],
 ["simpComm", "Diffeomorph.coe_toHomeomorph_symm"],
 ["simpComm", "Diffeomorph.toEquiv_coe_symm"],
 ["simpComm", "DilationEquiv.coe_toEquiv"],
 ["simpComm", "FormalMultilinearSeries.compAlongComposition_apply"],
 ["simpComm", "FormalMultilinearSeries.compContinuousLinearMap_apply"],
 ["simpComm", "FormalMultilinearSeries.comp_coeff_zero'"],
 ["simpComm", "GaussianInt.toComplex_eq_zero"],
 ["simpComm", "GaussianInt.toComplex_inj"],
 ["simpComm", "GaussianInt.toComplex_star"],
 ["simpComm", "GenLoop.homotopyFrom_apply"],
 ["simpComm", "GenLoop.mk_apply"],
 ["simpComm", "HilbertBasis.coe_mk"],
 ["simpComm", "HilbertBasis.coe_mkOfOrthogonalEqBot"],
 ["simpComm", "Homeomorph.toMeasurableEquiv_coe"],
 ["simpComm", "Homeomorph.toMeasurableEquiv_symm_coe"],
 ["simpComm", "IsHilbertSum.linearIsometryEquiv_symm_apply_single"],
 ["simpComm", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_apply"],
 ["simpComm", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_symm_apply"],
 ["simpComm", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_apply"],
 ["simpComm", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_symm_apply"],
 ["simpComm", "IsROrC.conjAe_coe"],
 ["simpComm", "IsROrC.conjCle_apply"],
 ["simpComm", "IsROrC.conjLie_apply"],
 ["simpComm", "IsROrC.conj_re"],
 ["simpComm", "IsROrC.hasSum_conj"],
 ["simpComm", "IsROrC.imClm_apply"],
 ["simpComm", "IsROrC.imLm_coe"],
 ["simpComm", "IsROrC.normSq_conj"],
 ["simpComm", "IsROrC.normSq_neg"],
 ["simpComm", "IsROrC.normSq_to_complex"],
 ["simpComm", "IsROrC.reClm_apply"],
 ["simpComm", "IsROrC.reLm_coe"],
 ["simpComm", "IsROrC.summable_conj"],
 ["simpComm", "IsometryEquiv.coeFn_toRealAffineIsometryEquiv"],
 ["simpComm", "IsometryEquiv.coe_mk"],
 ["simpComm", "IsometryEquiv.coe_toEquiv"],
 ["simpComm", "IsometryEquiv.coe_toHomeomorph"],
 ["simpComm", "IsometryEquiv.coe_toHomeomorph_symm"],
 ["simpComm", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero"],
 ["simpComm", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero_symm"],
 ["simpComm", "IsometryEquiv.symm_trans_apply"],
 ["simpComm", "IsometryEquiv.toRealLinearIsometryEquiv_symm_apply"],
 ["simpComm", "IsometryEquiv.trans_apply"],
 ["simpComm", "LeftInvariantDerivation.coeFnAddMonoidHom_apply"],
 ["simpComm", "LeftInvariantDerivation.commutator_coe_derivation"],
 ["simpComm", "LeftInvariantDerivation.evalAt_coe"],
 ["simpComm", "LightProfinite.instCategoryLightProfinite_comp_apply"],
 ["simpComm", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous"],
 ["simpComm", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous_symm"],
 ["simpComm", "LinearEquiv.coe_isometryOfInner"],
 ["simpComm", "LinearEquiv.coe_isometryOfOrthonormal"],
 ["simpComm", "LinearEquiv.coe_toContinuousLinearEquiv'"],
 ["simpComm", "LinearEquiv.coe_toContinuousLinearEquiv_symm'"],
 ["simpComm", "LinearIsometry.coe_mk"],
 ["simpComm", "LinearIsometry.coe_toAffineIsometry"],
 ["simpComm", "LinearIsometry.coe_toContinuousLinearMap"],
 ["simpComm", "LinearIsometry.coe_toLinearIsometryEquiv"],
 ["simpComm", "LinearIsometry.coe_toLinearMap"],
 ["simpComm", "LinearIsometry.toLinearIsometryEquiv_apply"],
 ["simpComm", "LinearIsometryEquiv.coe_coe"],
 ["simpComm", "LinearIsometryEquiv.coe_coe''"],
 ["simpComm", "LinearIsometryEquiv.coe_inv"],
 ["simpComm", "LinearIsometryEquiv.coe_mk"],
 ["simpComm", "LinearIsometryEquiv.coe_ofEq_apply"],
 ["simpComm", "LinearIsometryEquiv.coe_ofLinearIsometry"],
 ["simpComm", "LinearIsometryEquiv.coe_ofLinearIsometry_symm"],
 ["simpComm", "LinearIsometryEquiv.coe_ofSurjective"],
 ["simpComm", "LinearIsometryEquiv.coe_prodAssoc"],
 ["simpComm", "LinearIsometryEquiv.coe_prodAssoc_symm"],
 ["simpComm", "LinearIsometryEquiv.coe_toAffineIsometryEquiv"],
 ["simpComm", "LinearIsometryEquiv.coe_toContinuousLinearEquiv"],
 ["simpComm", "LinearIsometryEquiv.coe_toHomeomorph"],
 ["simpComm", "LinearIsometryEquiv.coe_toIsometryEquiv"],
 ["simpComm", "LinearIsometryEquiv.coe_toLinearEquiv"],
 ["simpComm", "LinearIsometryEquiv.coe_toLinearIsometry"],
 ["simpComm", "LinearIsometryEquiv.piLpCongrLeft_apply"],
 ["simpComm", "LinearIsometryEquiv.piLpCongrLeft_single"],
 ["simpComm", "LinearIsometryEquiv.trans_apply"],
 ["simpComm", "LinearMap.clmOfExistsBoundedImage_apply"],
 ["simpComm", "LinearMap.coe_isometryOfInner"],
 ["simpComm", "LinearMap.coe_isometryOfOrthonormal"],
 ["simpComm", "LinearMap.coe_toContinuousLinearMap'"],
 ["simpComm", "LinearMap.extendTo𝕜'_apply_re"],
 ["simpComm", "LinearMap.ker_toContinuousLinearMap"],
 ["simpComm", "LinearMap.mkContinuousOfExistsBound_apply"],
 ["simpComm", "LinearMap.mkContinuous_apply"],
 ["simpComm", "LinearMap.mkContinuous₂_apply"],
 ["simpComm", "LinearMap.range_toContinuousLinearMap"],
 ["simpComm", "LinearMap.toContinuousLinearMap₁_apply"],
 ["simpComm", "LinearOrderedField.inducedOrderRingHom_toFun"],
 ["simpComm", "Matrix.frobenius_nnnorm_col"],
 ["simpComm", "Matrix.frobenius_nnnorm_diagonal"],
 ["simpComm", "Matrix.frobenius_nnnorm_row"],
 ["simpComm", "Matrix.frobenius_norm_col"],
 ["simpComm", "Matrix.frobenius_norm_diagonal"],
 ["simpComm", "Matrix.frobenius_norm_row"],
 ["simpComm", "Matrix.linfty_op_nnnorm_toMatrix"],
 ["simpComm", "Matrix.linfty_op_norm_toMatrix"],
 ["simpComm", "Matrix.piLp_equiv_toEuclideanClm"],
 ["simpComm", "Matrix.piLp_equiv_toEuclideanLin"],
 ["simpComm", "Matrix.toEuclideanClm_piLp_equiv_symm"],
 ["simpComm", "Matrix.toEuclideanLin_piLp_equiv_symm"],
 ["simpComm", "ModularForm.coeHom_apply"],
 ["simpComm", "ModularForm.toSlashInvariantForm_coe"],
 ["simpComm", "ModularGroup.lcRow0Extend_apply"],
 ["simpComm", "ModularGroup.lcRow0Extend_symm_apply"],
 ["simpComm", "MulRingSeminorm.toFun_eq_coe"],
 ["simpComm", "MultilinearMap.coe_mkContinuous"],
 ["simpComm", "MultilinearMap.mkContinuousMultilinear_apply"],
 ["simpComm", "NNReal.sqrt_eq_zero"],
 ["simpComm", "NNReal.sqrt_pos"],
 ["simpComm", "NonUnitalAlgHom.coe_Lmul"],
 ["simpComm", "NormedAddGroupHom.coeAddHom_apply"],
 ["simpComm", "NormedAddGroupHom.coe_mkNormedAddGroupHom"],
 ["simpComm", "NormedAddGroupHom.coe_mkNormedAddGroupHom'"],
 ["simpComm", "NormedAddGroupHom.coe_toAddMonoidHom"],
 ["simpComm", "NormedAddGroupHom.comp_apply"],
 ["simpComm", "NormedAddGroupHom.extension_coe"],
 ["simpComm", "NormedRing.algEquivComplexOfComplete_apply"],
 ["simpComm", "NormedSpace.dualPairing_apply"],
 ["simpComm", "NormedSpace.dual_def"],
 ["simpComm", "Orientation.areaForm'_apply"],
 ["simpComm", "Orientation.kahler_neg_orientation"],
 ["simpComm", "Orientation.oangle_rotation"],
 ["simpComm", "Orientation.rotation_rotation"],
 ["simpComm", "OrthogonalFamily.linearIsometry_apply_single"],
 ["simpComm", "Orthonormal.equiv_apply"],
 ["simpComm", "OrthonormalBasis.coe_toBasis"],
 ["simpComm", "OrthonormalBasis.coe_toBasis_repr_apply"],
 ["simpComm", "OrthonormalBasis.map_apply"],
 ["simpComm", "OrthonormalBasis.repr_reindex"],
 ["simpComm", "OrthonormalBasis.repr_symm_single"],
 ["simpComm", "Path.cast_coe"],
 ["simpComm", "Path.coe_mk"],
 ["simpComm", "Path.coe_toContinuousMap"],
 ["simpComm", "Path.extend_range"],
 ["simpComm", "Path.symm_range"],
 ["simpComm", "Path.toHomotopyConst_apply"],
 ["simpComm", "PiLp.basisFun_apply"],
 ["simpComm", "PiLp.continuousLinearEquiv_apply"],
 ["simpComm", "PiLp.continuousLinearEquiv_symm_apply"],
 ["simpComm", "PiLp.dist_equiv_symm_single_same"],
 ["simpComm", "PiLp.edist_equiv_symm_single_same"],
 ["simpComm", "PiLp.nndist_equiv_symm_single_same"],
 ["simpComm", "PiLp.nnnorm_equiv"],
 ["simpComm", "PiLp.nnnorm_equiv_symm"],
 ["simpComm", "PiLp.nnnorm_equiv_symm_single"],
 ["simpComm", "PiLp.norm_equiv"],
 ["simpComm", "PiLp.norm_equiv_symm"],
 ["simpComm", "PiLp.norm_equiv_symm_single"],
 ["simpComm", "Polynomial.toContinuousMapOn_apply"],
 ["simpComm", "PontryaginDual.map_apply"],
 ["simpComm", "Profinite.homeoOfIso_apply"],
 ["simpComm", "Profinite.homeoOfIso_symm_apply"],
 ["simpComm", "Profinite.isoEquivHomeo_apply_apply"],
 ["simpComm", "Profinite.isoEquivHomeo_apply_symm_apply"],
 ["simpComm", "Profinite.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpComm", "Quaternion.linearIsometryEquivTuple_apply"],
 ["simpComm", "RingSeminorm.toFun_eq_coe"],
 ["simpComm", "SchwartzMap.delta_apply"],
 ["simpComm", "SchwartzMap.iteratedPDeriv_one"],
 ["simpComm", "SchwartzMap.pderivCLM_apply"],
 ["simpComm", "SchwartzMap.toBoundedContinuousFunctionCLM_apply"],
 ["simpComm", "SchwartzMap.toBoundedContinuousFunctionLM_apply"],
 ["simpComm", "SchwartzMap.toBoundedContinuousFunction_apply"],
 ["simpComm", "SemiNormedGroupCat.explicitCokernelπ_desc_apply"],
 ["simpComm", "Seminorm.coeFnAddMonoidHom_apply"],
 ["simpComm", "Seminorm.coe_le_coe"],
 ["simpComm", "Seminorm.coe_lt_coe"],
 ["simpComm", "Seminorm.coe_restrictScalars"],
 ["simpComm", "Seminorm.comp_apply"],
 ["simpComm", "SmoothMap.coeFnAddMonoidHom_apply"],
 ["simpComm", "SmoothMap.coeFnAlgHom_apply"],
 ["simpComm", "SmoothMap.coeFnLinearMap_apply"],
 ["simpComm", "SmoothMap.coeFnMonoidHom_apply"],
 ["simpComm", "SmoothMap.coeFnRingHom_apply"],
 ["simpComm", "Stonean.homeoOfIso_apply"],
 ["simpComm", "Stonean.homeoOfIso_symm_apply"],
 ["simpComm", "Stonean.isoEquivHomeo_apply_apply"],
 ["simpComm", "Stonean.isoEquivHomeo_apply_symm_apply"],
 ["simpComm", "Stonean.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpComm", "Submodule.coe_continuous_linearProjOfClosedCompl'"],
 ["simpComm", "Submodule.coe_prodEquivOfClosedCompl"],
 ["simpComm", "Submodule.coe_prodEquivOfClosedCompl_symm"],
 ["simpComm", "Submodule.coe_subtypeₗᵢ"],
 ["simpComm", "Trivialization.continuousLinearMapAt_apply"],
 ["simpComm", "VectorBundleCore.localTriv_coordChange_eq"],
 ["simpComm", "VectorBundleCore.trivializationAt_coordChange_eq"],
 ["simpComm", "WeakDual.toNormedDual_eq_iff"],
 ["simpComm", "WithLp.dist_equiv_symm_fst"],
 ["simpComm", "WithLp.dist_equiv_symm_snd"],
 ["simpComm", "WithLp.edist_equiv_symm_fst"],
 ["simpComm", "WithLp.edist_equiv_symm_snd"],
 ["simpComm", "WithLp.equiv_fst"],
 ["simpComm", "WithLp.equiv_snd"],
 ["simpComm", "WithLp.equiv_symm_fst"],
 ["simpComm", "WithLp.equiv_symm_snd"],
 ["simpComm", "WithLp.nndist_equiv_symm_fst"],
 ["simpComm", "WithLp.nndist_equiv_symm_snd"],
 ["simpComm", "WithLp.nnnorm_equiv_symm_fst"],
 ["simpComm", "WithLp.nnnorm_equiv_symm_snd"],
 ["simpComm", "WithLp.norm_equiv_symm_fst"],
 ["simpComm", "WithLp.norm_equiv_symm_snd"],
 ["simpComm", "WithLp.prodContinuousLinearEquiv_apply"],
 ["simpComm", "WithLp.prodContinuousLinearEquiv_symm_apply"],
 ["simpComm", "WithLp.prod_nnnorm_equiv"],
 ["simpComm", "WithLp.prod_nnnorm_equiv_symm"],
 ["simpComm", "WithLp.prod_norm_equiv"],
 ["simpComm", "WithLp.prod_norm_equiv_symm"],
 ["simpComm", "ZeroAtInftyContinuousMap.coe_toContinuousMap"],
 ["simpComm", "ZeroAtInftyContinuousMap.toBCF_apply"],
 ["simpComm", "ZeroAtInftyContinuousMap.toBCF_toFun"],
 ["simpComm",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_apply"],
 ["simpComm",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_symm_apply_coe"],
 ["simpComm", "AddCommGroupCat.enough_injectives_aux_proofs.toNext_apply"],
 ["simpComm", "AddCommGroupCat.enough_injectives_aux_proofs.toRatCircle_apply"],
 ["simpComm", "AddSubgroup.normedMk.apply"],
 ["simpComm", "BoxIntegral.BoxAdditiveMap.restrict_apply"],
 ["simpComm", "ContinuousMap.Homotopy.apply_one"],
 ["simpComm", "ContinuousMap.Homotopy.apply_zero"],
 ["simpComm", "ContinuousMap.Homotopy.cast_apply"],
 ["simpComm", "ContinuousMap.Homotopy.coe_toContinuousMap"],
 ["simpComm", "ContinuousMap.Homotopy.compContinuousMap_apply"],
 ["simpComm", "ContinuousMap.Homotopy.curry_apply"],
 ["simpComm", "ContinuousMap.Homotopy.extend_apply_coe"],
 ["simpComm", "ContinuousMap.Homotopy.extend_apply_of_mem_I"],
 ["simpComm", "ContinuousMap.Homotopy.hcomp_apply"],
 ["simpComm", "ContinuousMap.Homotopy.refl_apply"],
 ["simpComm", "ContinuousMap.Homotopy.symm_apply"],
 ["simpComm", "ContinuousMap.Homotopy.ulift_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.cast_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.cast_toFun"],
 ["simpComm", "ContinuousMap.HomotopyRel.compContinuousMap_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.compContinuousMap_toFun"],
 ["simpComm", "ContinuousMap.HomotopyRel.pi_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.pi_toFun"],
 ["simpComm", "ContinuousMap.HomotopyRel.refl_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.refl_toFun"],
 ["simpComm", "ContinuousMap.HomotopyRel.symm_apply"],
 ["simpComm", "ContinuousMap.HomotopyRel.symm_toFun"],
 ["simpComm", "ContinuousMap.HomotopyWith.apply_one"],
 ["simpComm", "ContinuousMap.HomotopyWith.apply_zero"],
 ["simpComm", "ContinuousMap.HomotopyWith.cast_apply"],
 ["simpComm", "ContinuousMap.HomotopyWith.cast_toFun"],
 ["simpComm", "ContinuousMap.HomotopyWith.coe_toHomotopy"],
 ["simpComm", "ContinuousMap.HomotopyWith.refl_apply"],
 ["simpComm", "ContinuousMap.HomotopyWith.refl_toFun"],
 ["simpComm", "ContinuousMap.HomotopyWith.symm_apply"],
 ["simpComm", "ContinuousMap.HomotopyWith.symm_toFun"],
 ["simpComm", "Frm.Iso.mk_hom_toFun"],
 ["simpComm", "Frm.Iso.mk_inv_toFun"],
 ["simpComm", "LinearMap.IsSymmetric.apply_clm"],
 ["simpComm", "MeasureTheory.Lp.constL_apply"],
 ["simpComm", "MeasureTheory.Lp.constₗ_apply"],
 ["simpComm", "MeasureTheory.Lp.norm_compMeasurePreserving"],
 ["simpComm", "MeasureTheory.Measure.liftLinear_apply"],
 ["simpComm", "MeasureTheory.Measure.mapₗ_eq_zero_iff"],
 ["simpComm", "MeasureTheory.OuterMeasure.comap_apply"],
 ["simpComm", "MeasureTheory.OuterMeasure.map_apply"],
 ["simpComm", "MeasureTheory.OuterMeasure.map_le_restrict_range"],
 ["simpComm", "MeasureTheory.OuterMeasure.map_map"],
 ["simpComm", "MeasureTheory.OuterMeasure.restrict_apply"],
 ["simpComm", "NormedSpace.Dual.toWeakDual_eq_iff"],
 ["simpComm", "NumberField.ComplexEmbedding.conjugate_coe_eq"],
 ["simpComm", "NumberField.InfinitePlace.apply"],
 ["simpComm",
  "NumberField.InfinitePlace.instMulActionAlgEquivToCommSemiringToSemifieldToSemiringToDivisionSemiringToSemifieldInfinitePlaceToMonoidToDivInvMonoidAut_smul_coe_apply"],
 ["simpComm", "NumberField.InfinitePlace.smul_apply"],
 ["simpComm", "NumberField.canonicalEmbedding.apply_at"],
 ["simpComm", "NumberField.canonicalEmbedding.latticeBasis_apply"],
 ["simpComm", "NumberField.mixedEmbedding.commMap_canonical_eq_mixed"],
 ["simpComm", "NumberField.mixedEmbedding.latticeBasis_apply"],
 ["simpComm", "Path.Homotopy.cast_apply"],
 ["simpComm", "Path.Homotopy.cast_toFun"],
 ["simpComm", "Path.Homotopy.refl_apply"],
 ["simpComm", "Path.Homotopy.refl_toFun"],
 ["simpComm", "Path.Homotopy.symm_apply"],
 ["simpComm", "Path.Homotopy.symm_toFun"],
 ["simpComm", "Path.Homotopy.symm₂_apply"],
 ["simpComm", "Path.Homotopy.symm₂_toFun"],
 ["simpComm", "ProbabilityTheory.kernel.integral_const"],
 ["simpComm", "ProbabilityTheory.kernel.lintegral_const"],
 ["simpComm", "ProbabilityTheory.kernel.lintegral_restrict"],
 ["simpComm", "ProbabilityTheory.kernel.prodMkLeft_apply"],
 ["simpComm", "ProbabilityTheory.kernel.prodMkRight_apply"],
 ["simpComm", "ProbabilityTheory.kernel.set_integral_const"],
 ["simpComm", "ProbabilityTheory.kernel.set_integral_restrict"],
 ["simpComm", "ProbabilityTheory.kernel.set_lintegral_const"],
 ["simpComm", "ProbabilityTheory.kernel.set_lintegral_restrict"],
 ["simpComm", "ProbabilityTheory.kernel.swapLeft_apply"],
 ["simpComm", "SlashInvariantForm.SlashInvariantFormClass.coe_coe"],
 ["simpComm", "WeakDual.CharacterSpace.compContinuousMap_apply"],
 ["simpComm", "WeakDual.CharacterSpace.continuousMapEval_apply_apply"],
 ["simpComm", "WeakDual.CharacterSpace.equivAlgHom_coe"],
 ["simpComm", "WeakDual.CharacterSpace.equivAlgHom_symm_coe"],
 ["simpComm",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_apply_toFun"],
 ["simpNF", "L_apply"],
 ["simpNF", "R_apply"],
 ["simpNF", "aEMeasurable_coe_nnreal_real_iff"],
 ["simpNF", "abs_circleMap_zero"],
 ["simpNF", "abs_coe_circle"],
 ["simpNF", "absorbs_biUnion_finset"],
 ["simpNF", "absorbs_iInter"],
 ["simpNF", "absorbs_iUnion"],
 ["simpNF", "acc_liftOn₂'_iff"],
 ["simpNF", "addRothNumber_empty"],
 ["simpNF", "addRothNumber_map_add_left"],
 ["simpNF", "addRothNumber_map_add_right"],
 ["simpNF", "addRothNumber_singleton"],
 ["simpNF", "add_right_iterate"],
 ["simpNF", "aemeasurable_coe_nnreal_ennreal_iff"],
 ["simpNF", "aemeasurable_const"],
 ["simpNF", "aemeasurable_iUnion_iff"],
 ["simpNF", "aemeasurable_inv_iff"],
 ["simpNF", "aemeasurable_inv_iff₀"],
 ["simpNF", "aemeasurable_neg_iff"],
 ["simpNF", "aemeasurable_sum_measure_iff"],
 ["simpNF", "aestronglyMeasurable_iUnion_iff"],
 ["simpNF", "aestronglyMeasurable_sum_measure_iff"],
 ["simpNF", "affineSegment_vadd_const_image"],
 ["simpNF", "affineSegment_vsub_const_image"],
 ["simpNF", "alexDiscEquivPreord_counitIso"],
 ["simpNF", "alexDiscEquivPreord_unitIso"],
 ["simpNF", "and_or_imp"],
 ["simpNF", "antivaryOn_inv_left"],
 ["simpNF", "antivaryOn_inv_left₀"],
 ["simpNF", "antivaryOn_inv_right"],
 ["simpNF", "antivaryOn_inv_right₀"],
 ["simpNF", "antivaryOn_neg_left"],
 ["simpNF", "antivaryOn_neg_right"],
 ["simpNF", "antivary_inv_left"],
 ["simpNF", "antivary_inv_left₀"],
 ["simpNF", "antivary_inv_right"],
 ["simpNF", "antivary_inv_right₀"],
 ["simpNF", "antivary_neg_left"],
 ["simpNF", "antivary_neg_right"],
 ["simpNF", "apply_fdifferential"],
 ["simpNF", "apply_hfdifferential"],
 ["simpNF", "bernstein_apply"],
 ["simpNF", "circleIntegrable_const"],
 ["simpNF", "circleIntegrable_sub_inv_iff"],
 ["simpNF", "circleIntegrable_sub_zpow_iff"],
 ["simpNF", "closure_le_eq"],
 ["simpNF", "coe_basisOfOrthonormalOfCardEqFinrank"],
 ["simpNF", "coe_div_circle"],
 ["simpNF", "coe_fourierBasis"],
 ["simpNF", "coe_inv_circle"],
 ["simpNF", "coe_nonZeroDivisorsLeft_eq"],
 ["simpNF", "coe_nonZeroDivisorsRight_eq"],
 ["simpNF", "coe_normAddGroupSeminorm"],
 ["simpNF", "coe_normGroupNorm"],
 ["simpNF", "coe_normGroupSeminorm"],
 ["simpNF", "coe_normSeminorm"],
 ["simpNF", "coe_notMemRangeEquiv"],
 ["simpNF", "coe_notMemRangeEquiv_symm"],
 ["simpNF", "coe_powMonoidWithZeroHom"],
 ["simpNF", "coe_starₗᵢ"],
 ["simpNF", "comap_uniformity_addOpposite"],
 ["simpNF", "comap_uniformity_mulOpposite"],
 ["simpNF", "comp_add_right"],
 ["simpNF", "comp_mul_right"],
 ["simpNF", "continuousMultilinearCurryFin0_apply"],
 ["simpNF", "continuousMultilinearCurryFin0_symm_apply"],
 ["simpNF", "continuousMultilinearCurryFin1_apply"],
 ["simpNF", "continuousMultilinearCurryFin1_symm_apply"],
 ["simpNF", "continuousMultilinearCurryLeftEquiv_apply"],
 ["simpNF", "continuousMultilinearCurryLeftEquiv_symm_apply"],
 ["simpNF", "continuousMultilinearCurryRightEquiv_apply"],
 ["simpNF", "continuousMultilinearCurryRightEquiv_apply'"],
 ["simpNF", "continuousMultilinearCurryRightEquiv_symm_apply"],
 ["simpNF", "continuousMultilinearCurryRightEquiv_symm_apply'"],
 ["simpNF", "continuous_prod_mk"],
 ["simpNF", "continuous_sigma_iff"],
 ["simpNF", "continuous_sigma_map"],
 ["simpNF", "convexHull_diam"],
 ["simpNF", "convexHull_ediam"],
 ["simpNF", "convexJoin_singleton_left"],
 ["simpNF", "convexJoin_singleton_right"],
 ["simpNF", "cross_anticomm"],
 ["simpNF", "cross_anticomm'"],
 ["simpNF", "dNext_comp_left"],
 ["simpNF", "dNext_comp_right"],
 ["simpNF", "deriv_add"],
 ["simpNF", "deriv_add_const'"],
 ["simpNF", "deriv_arctan"],
 ["simpNF", "deriv_ccos"],
 ["simpNF", "deriv_ccosh"],
 ["simpNF", "deriv_cexp"],
 ["simpNF", "deriv_const'"],
 ["simpNF", "deriv_const_add'"],
 ["simpNF", "deriv_const_mul_field'"],
 ["simpNF", "deriv_cos"],
 ["simpNF", "deriv_cosh"],
 ["simpNF", "deriv_csin"],
 ["simpNF", "deriv_csinh"],
 ["simpNF", "deriv_div"],
 ["simpNF", "deriv_div_const"],
 ["simpNF", "deriv_exp"],
 ["simpNF", "deriv_id'"],
 ["simpNF", "deriv_id''"],
 ["simpNF", "deriv_inv'"],
 ["simpNF", "deriv_inv''"],
 ["simpNF", "deriv_mul"],
 ["simpNF", "deriv_mul_const_field'"],
 ["simpNF", "deriv_neg'"],
 ["simpNF", "deriv_pow'"],
 ["simpNF", "deriv_pow''"],
 ["simpNF", "deriv_rpow_const"],
 ["simpNF", "deriv_sin"],
 ["simpNF", "deriv_sinh"],
 ["simpNF", "deriv_sqrt"],
 ["simpNF", "deriv_sub"],
 ["simpNF", "deriv_sum"],
 ["simpNF", "deriv_zpow'"],
 ["simpNF", "det_rotation"],
 ["simpNF", "differentiableAt_add_const_iff"],
 ["simpNF", "differentiableAt_const"],
 ["simpNF", "differentiableAt_const_add_iff"],
 ["simpNF", "differentiableAt_const_sub_iff"],
 ["simpNF", "differentiableAt_id'"],
 ["simpNF", "differentiableAt_neg_iff"],
 ["simpNF", "differentiableAt_pi"],
 ["simpNF", "differentiableAt_star_iff"],
 ["simpNF", "differentiableAt_sub_const_iff"],
 ["simpNF", "differentiableOn_add_const_iff"],
 ["simpNF", "differentiableOn_const_add_iff"],
 ["simpNF", "differentiableOn_const_sub_iff"],
 ["simpNF", "differentiableOn_neg_iff"],
 ["simpNF", "differentiableOn_star_iff"],
 ["simpNF", "differentiableOn_sub_const_iff"],
 ["simpNF", "differentiableWithinAt_add_const_iff"],
 ["simpNF", "differentiableWithinAt_const_add_iff"],
 ["simpNF", "differentiableWithinAt_const_sub_iff"],
 ["simpNF", "differentiableWithinAt_neg_iff"],
 ["simpNF", "differentiableWithinAt_pi"],
 ["simpNF", "differentiableWithinAt_star_iff"],
 ["simpNF", "differentiableWithinAt_sub_const_iff"],
 ["simpNF", "differentiable_add_const_iff"],
 ["simpNF", "differentiable_const"],
 ["simpNF", "differentiable_const_add_iff"],
 ["simpNF", "differentiable_const_sub_iff"],
 ["simpNF", "differentiable_id'"],
 ["simpNF", "differentiable_neg_iff"],
 ["simpNF", "differentiable_star_iff"],
 ["simpNF", "differentiable_sub_const_iff"],
 ["simpNF", "dimH_bUnion"],
 ["simpNF", "dimH_iUnion"],
 ["simpNF", "dimH_sUnion"],
 ["simpNF", "disjoint_partialSups_left"],
 ["simpNF", "disjoint_partialSups_right"],
 ["simpNF", "dist_center_homothety"],
 ["simpNF", "dist_homothety_center"],
 ["simpNF", "dist_homothety_self"],
 ["simpNF", "dist_left_lineMap"],
 ["simpNF", "dist_left_pointReflection"],
 ["simpNF", "dist_lineMap_left"],
 ["simpNF", "dist_lineMap_lineMap"],
 ["simpNF", "dist_lineMap_right"],
 ["simpNF", "dist_ofAdd"],
 ["simpNF", "dist_ofDual"],
 ["simpNF", "dist_ofMul"],
 ["simpNF", "dist_pi_const"],
 ["simpNF", "dist_pointReflection_left"],
 ["simpNF", "dist_right_lineMap"],
 ["simpNF", "dist_self_homothety"],
 ["simpNF", "dist_toAdd"],
 ["simpNF", "dist_toDual"],
 ["simpNF", "dist_toMul"],
 ["simpNF", "edist_pi_const"],
 ["simpNF", "essInf_const'"],
 ["simpNF", "essSup_const'"],
 ["simpNF", "eventually_eventuallyEq_nhds"],
 ["simpNF", "eventually_eventuallyLE_nhds"],
 ["simpNF", "eventually_eventually_nhds"],
 ["simpNF", "eventually_mem_nhds"],
 ["simpNF", "eventually_nhdsWithin_nhdsWithin"],
 ["simpNF", "eventually_nhds_nhdsWithin"],
 ["simpNF", "exists_compact_superset_iff"],
 ["simpNF", "exists_exists_and_exists_and_eq_and"],
 ["simpNF", "expMapCircleHom_apply"],
 ["simpNF", "expMapCircle_add"],
 ["simpNF", "expMapCircle_apply"],
 ["simpNF", "expMapCircle_arg"],
 ["simpNF", "expMapCircle_neg"],
 ["simpNF", "expMapCircle_sub"],
 ["simpNF", "expMapCircle_two_pi"],
 ["simpNF", "expMapCircle_zero"],
 ["simpNF", "extremePoints_pi"],
 ["simpNF", "fderivInnerClm_apply"],
 ["simpNF", "fderiv_arctan"],
 ["simpNF", "fderiv_ccos"],
 ["simpNF", "fderiv_ccosh"],
 ["simpNF", "fderiv_const"],
 ["simpNF", "fderiv_cos"],
 ["simpNF", "fderiv_cosh"],
 ["simpNF", "fderiv_csin"],
 ["simpNF", "fderiv_csinh"],
 ["simpNF", "fderiv_exp"],
 ["simpNF", "fderiv_id'"],
 ["simpNF", "fderiv_neg"],
 ["simpNF", "fderiv_sin"],
 ["simpNF", "fderiv_sinh"],
 ["simpNF", "fderiv_sqrt"],
 ["simpNF", "fderiv_star"],
 ["simpNF", "fdifferential_comp"],
 ["simpNF", "finFunctionFinEquiv_apply_val"],
 ["simpNF", "finTwoArrowEquiv_apply"],
 ["simpNF", "finTwoArrowEquiv_symm_apply"],
 ["simpNF", "finprod_cond_eq_left"],
 ["simpNF", "finprod_cond_eq_right"],
 ["simpNF", "finrank_euclideanSpace"],
 ["simpNF", "finsum_cond_eq_left"],
 ["simpNF", "finsum_cond_eq_right"],
 ["simpNF", "fourier_add'"],
 ["simpNF", "fourier_apply"],
 ["simpNF", "fourier_neg'"],
 ["simpNF", "freeGroupEquivCoprodI_apply"],
 ["simpNF", "freeGroupEquivCoprodI_symm_apply"],
 ["simpNF", "frequently_frequently_nhds"],
 ["simpNF", "gaugeSeminorm_toFun"],
 ["simpNF", "gelfandStarTransform_apply_apply"],
 ["simpNF", "gelfandStarTransform_symm_apply"],
 ["simpNF", "gradient_const'"],
 ["simpNF", "hasDerivAtFilter_pi"],
 ["simpNF", "hasFDerivAtFilter_pi'"],
 ["simpNF", "hasFDerivAt_pi'"],
 ["simpNF", "hasFDerivWithinAt_pi'"],
 ["simpNF", "hasFTaylorSeriesUpToOn_pi'"],
 ["simpNF", "hasStrictDerivAt_pi"],
 ["simpNF", "hasStrictFDerivAt_pi"],
 ["simpNF", "hasStrictFDerivAt_pi'"],
 ["simpNF", "hasSum_op"],
 ["simpNF", "hasSum_unop"],
 ["simpNF", "himp_iff_imp"],
 ["simpNF", "homeomorphUnitSphereProd_apply_fst_coe"],
 ["simpNF", "homeomorphUnitSphereProd_apply_snd_coe"],
 ["simpNF", "homeomorphUnitSphereProd_symm_apply_coe"],
 ["simpNF", "iInf_Prop_eq"],
 ["simpNF", "iInf_eq_top"],
 ["simpNF", "iInf_exists"],
 ["simpNF", "iInf_iInf_eq_left"],
 ["simpNF", "iInf_iInf_eq_right"],
 ["simpNF", "iSup_eq_bot"],
 ["simpNF", "iSup_exists"],
 ["simpNF", "iSup_iSup_eq_left"],
 ["simpNF", "iSup_iSup_eq_right"],
 ["simpNF", "iSup_le_iff"],
 ["simpNF", "iSup_ne_bot_subtype"],
 ["simpNF", "iUnion_source_chartAt"],
 ["simpNF", "iccHomeoI_apply_coe"],
 ["simpNF", "iccHomeoI_symm_apply_coe"],
 ["simpNF", "idRel_subset"],
 ["simpNF", "imaginaryPart_I_smul"],
 ["simpNF", "imaginaryPart_imaginaryPart"],
 ["simpNF", "imaginaryPart_ofReal"],
 ["simpNF", "imaginaryPart_realPart"],
 ["simpNF", "imp_and_neg_imp_iff"],
 ["simpNF", "imp_iff_right_iff"],
 ["simpNF", "inducing_const_prod"],
 ["simpNF", "inducing_prod_const"],
 ["simpNF", "infIrred_iff_not_isMax"],
 ["simpNF", "infIrred_ofDual"],
 ["simpNF", "infIrred_toDual"],
 ["simpNF", "infPrime_iff_infIrred"],
 ["simpNF", "infPrime_ofDual"],
 ["simpNF", "infPrime_toDual"],
 ["simpNF", "inf_Prop_eq"],
 ["simpNF", "injective_nsmul_iff_not_isOfFinAddOrder"],
 ["simpNF", "injective_zsmul_iff_not_isOfFinAddOrder"],
 ["simpNF", "innerSLFlip_apply"],
 ["simpNF", "innerSL_apply"],
 ["simpNF", "innerSL_apply_coe"],
 ["simpNF", "innerSL_apply_norm"],
 ["simpNF", "inner_conj_symm"],
 ["simpNF", "inner_orthogonalProjection_eq_of_mem_left"],
 ["simpNF", "inner_orthogonalProjection_eq_of_mem_right"],
 ["simpNF", "inner_product_apply_eigenvector"],
 ["simpNF", "inner_self_im"],
 ["simpNF", "inner_self_nonpos"],
 ["simpNF", "inner_self_ofReal_re"],
 ["simpNF", "innerₛₗ_apply"],
 ["simpNF", "innerₛₗ_apply_coe"],
 ["simpNF", "inseparable_pi"],
 ["simpNF", "instEstimatorDataHAddThunkInstHAddInstAddThunkProd_improve"],
 ["simpNF", "integral_cos_pow_three"],
 ["simpNF", "integral_cos_sq"],
 ["simpNF", "integral_id"],
 ["simpNF", "integral_inv_one_add_sq"],
 ["simpNF", "integral_pow"],
 ["simpNF", "integral_sin_mul_cos_sq"],
 ["simpNF", "integral_sin_mul_cos₁"],
 ["simpNF", "integral_sin_pow_three"],
 ["simpNF", "integral_sin_sq"],
 ["simpNF", "integral_sin_sq_mul_cos"],
 ["simpNF", "integral_sin_sq_mul_cos_sq"],
 ["simpNF", "intervalIntegrable_const"],
 ["simpNF", "intervalIntegrable_sub_inv_iff"],
 ["simpNF", "inv_zpow'"],
 ["simpNF", "isBounded_convexHull"],
 ["simpNF", "isConj_iff"],
 ["simpNF", "isConj_iff₀"],
 ["simpNF", "isConnected_univ_pi"],
 ["simpNF", "isEmpty_fun"],
 ["simpNF", "isEmpty_pi"],
 ["simpNF", "isEmpty_psigma"],
 ["simpNF", "isEmpty_sigma"],
 ["simpNF", "isEmpty_subtype"],
 ["simpNF", "isMax_grade_iff"],
 ["simpNF", "isMax_iff_eq_top"],
 ["simpNF", "isMax_top"],
 ["simpNF", "isMin_bot"],
 ["simpNF", "isMin_grade_iff"],
 ["simpNF", "isMin_iff_eq_bot"],
 ["simpNF", "isOpen_const"],
 ["simpNF", "iter_deriv_inv'"],
 ["simpNF", "iter_deriv_pow'"],
 ["simpNF", "iter_deriv_zpow'"],
 ["simpNF", "iteratedFDerivWithin_one_apply"],
 ["simpNF", "iteratedFDerivWithin_zero_apply"],
 ["simpNF", "iteratedFDeriv_one_apply"],
 ["simpNF", "iteratedFDeriv_zero_apply"],
 ["simpNF", "iteratedFDeriv_zero_fun"],
 ["simpNF", "le_Prop_eq"],
 ["simpNF", "le_iInf_iff"],
 ["simpNF", "le_sInf_iff"],
 ["simpNF", "le_update_self_iff"],
 ["simpNF", "liminf_eq_top"],
 ["simpNF", "limsup_eq_bot"],
 ["simpNF", "linearEquiv_det_rotation"],
 ["simpNF", "lowerClosure_sUnion"],
 ["simpNF", "map_add_right_nhds"],
 ["simpNF", "map_dfinsupp_prod"],
 ["simpNF", "map_dfinsupp_sum"],
 ["simpNF", "map_finset_inf'"],
 ["simpNF", "map_finset_sup'"],
 ["simpNF", "map_mul_right_nhds"],
 ["simpNF", "map_prod"],
 ["simpNF", "map_sum"],
 ["simpNF", "matPolyEquiv_diagonal_X"],
 ["simpNF", "matPolyEquiv_symm_X"],
 ["simpNF", "matrixEquivTensor_apply"],
 ["simpNF", "matrixEquivTensor_apply_symm"],
 ["simpNF", "measurable_coe_nnreal_ennreal_iff"],
 ["simpNF", "measurable_coe_nnreal_real_iff"],
 ["simpNF", "measurable_const"],
 ["simpNF", "measurable_inv_iff"],
 ["simpNF", "measurable_inv_iff₀"],
 ["simpNF", "measurable_mem"],
 ["simpNF", "measurable_neg_iff"],
 ["simpNF", "mem_circle_iff_abs"],
 ["simpNF", "mem_compRel"],
 ["simpNF", "mem_innerDualCone"],
 ["simpNF", "mem_intrinsicClosure"],
 ["simpNF", "mem_intrinsicFrontier"],
 ["simpNF", "mem_intrinsicInterior"],
 ["simpNF", "mem_lowerClosure"],
 ["simpNF", "mem_nonZeroDivisorsLeft_iff"],
 ["simpNF", "mem_nonZeroDivisorsRight_iff"],
 ["simpNF", "mem_smoothFiberwiseLinear_iff"],
 ["simpNF", "mem_upperClosure"],
 ["simpNF", "monovaryOn_inv_left"],
 ["simpNF", "monovaryOn_inv_left₀"],
 ["simpNF", "monovaryOn_inv_right"],
 ["simpNF", "monovaryOn_inv_right₀"],
 ["simpNF", "monovaryOn_neg_left"],
 ["simpNF", "monovaryOn_neg_right"],
 ["simpNF", "monovary_inv_left"],
 ["simpNF", "monovary_inv_left₀"],
 ["simpNF", "monovary_inv_right"],
 ["simpNF", "monovary_inv_right₀"],
 ["simpNF", "monovary_neg_left"],
 ["simpNF", "monovary_neg_right"],
 ["simpNF", "mulRothNumber_empty"],
 ["simpNF", "mulRothNumber_map_mul_left"],
 ["simpNF", "mulRothNumber_map_mul_right"],
 ["simpNF", "mulRothNumber_singleton"],
 ["simpNF", "mul_right_iterate"],
 ["simpNF", "neg_concaveOn_iff"],
 ["simpNF", "neg_convexOn_iff"],
 ["simpNF", "neg_strictConcaveOn_iff"],
 ["simpNF", "neg_strictConvexOn_iff"],
 ["simpNF", "neg_zsmul"],
 ["simpNF", "nhds_bind_nhdsWithin"],
 ["simpNF", "nndist_center_homothety"],
 ["simpNF", "nndist_homothety_center"],
 ["simpNF", "nndist_homothety_self"],
 ["simpNF", "nndist_left_lineMap"],
 ["simpNF", "nndist_lineMap_left"],
 ["simpNF", "nndist_lineMap_lineMap"],
 ["simpNF", "nndist_lineMap_right"],
 ["simpNF", "nndist_ofAdd"],
 ["simpNF", "nndist_ofDual"],
 ["simpNF", "nndist_ofMul"],
 ["simpNF", "nndist_pi_const"],
 ["simpNF", "nndist_right_lineMap"],
 ["simpNF", "nndist_self_homothety"],
 ["simpNF", "nndist_toAdd"],
 ["simpNF", "nndist_toDual"],
 ["simpNF", "nndist_toMul"],
 ["simpNF", "nnnormHom_apply"],
 ["simpNF", "nnnorm_algebraMap'"],
 ["simpNF", "nnnorm_algebraMap_nNReal"],
 ["simpNF", "nnnorm_ofAdd"],
 ["simpNF", "nnnorm_ofDual"],
 ["simpNF", "nnnorm_ofMul"],
 ["simpNF", "nnnorm_prod"],
 ["simpNF", "nnnorm_toAdd"],
 ["simpNF", "nnnorm_toDual"],
 ["simpNF", "nnnorm_toMul"],
 ["simpNF", "nonempty_fun"],
 ["simpNF", "nonempty_sigma"],
 ["simpNF", "normHom_apply"],
 ["simpNF", "normSq_eq_of_mem_circle"],
 ["simpNF", "norm_algebraMap'"],
 ["simpNF", "norm_algebraMap_nNReal"],
 ["simpNF", "norm_ofAdd"],
 ["simpNF", "norm_ofDual"],
 ["simpNF", "norm_ofMul"],
 ["simpNF", "norm_prod"],
 ["simpNF", "norm_toAdd"],
 ["simpNF", "norm_toDual"],
 ["simpNF", "norm_toMul"],
 ["simpNF", "normedAddGroupHomCompletionHom_apply"],
 ["simpNF", "not_imp_self"],
 ["simpNF", "not_infIrred"],
 ["simpNF", "not_infPrime"],
 ["simpNF", "not_isMax"],
 ["simpNF", "not_isMax_iff"],
 ["simpNF", "not_isMax_of_lt"],
 ["simpNF", "not_isMin"],
 ["simpNF", "not_isMin_iff"],
 ["simpNF", "not_isMin_of_lt"],
 ["simpNF", "not_supIrred"],
 ["simpNF", "not_supPrime"],
 ["simpNF", "ofAdd_sum"],
 ["simpNF", "ofMul_prod"],
 ["simpNF", "op_geom_sum₂"],
 ["simpNF", "orthogonalProjectionFn_eq"],
 ["simpNF", "orthogonalProjection_eq_zero_iff"],
 ["simpNF", "orthogonalProjection_inner_eq_zero"],
 ["simpNF", "orthogonalProjection_mem_subspace_eq_self"],
 ["simpNF", "orthogonalProjection_orthogonal_val"],
 ["simpNF", "parallelepiped_comp_equiv"],
 ["simpNF", "partialFunEquivPointed_functor_map_toFun"],
 ["simpNF", "partialFunEquivPointed_inverse_obj"],
 ["simpNF", "partialFunEquivPointed_unitIso_hom_app"],
 ["simpNF", "partialFunEquivPointed_unitIso_inv_app"],
 ["simpNF", "partialFunToPointed_map"],
 ["simpNF", "partialSups_le_iff"],
 ["simpNF", "partialSups_succ"],
 ["simpNF", "piChartedSpace_chartAt"],
 ["simpNF", "piFinTwoEquiv_apply"],
 ["simpNF", "piFinTwoEquiv_symm_apply"],
 ["simpNF", "pi_nnnorm_const"],
 ["simpNF", "pi_nnnorm_const'"],
 ["simpNF", "pi_norm_const"],
 ["simpNF", "pi_norm_const'"],
 ["simpNF", "polarCoord_apply"],
 ["simpNF", "polarCoord_source"],
 ["simpNF", "polyEquivTensor_symm_apply_tmul"],
 ["simpNF", "polynomialFunctions_coe"],
 ["simpNF", "pow_iterate"],
 ["simpNF", "prevD_comp_left"],
 ["simpNF", "prevD_comp_right"],
 ["simpNF", "prodEquivPiFinTwo_apply"],
 ["simpNF", "prodEquivPiFinTwo_symm_apply"],
 ["simpNF", "pure_id'_seq"],
 ["simpNF", "range_two_mul_add_one"],
 ["simpNF", "rank_directSum"],
 ["simpNF", "rank_pi"],
 ["simpNF", "realPart_I_smul"],
 ["simpNF", "realPart_idem"],
 ["simpNF", "realPart_imaginaryPart"],
 ["simpNF", "realPart_ofReal"],
 ["simpNF", "reflection_reflection"],
 ["simpNF", "rotationOf_coe"],
 ["simpNF", "rotationOf_rotation"],
 ["simpNF", "rotation_apply"],
 ["simpNF", "rotation_symm"],
 ["simpNF", "rotation_trans"],
 ["simpNF", "rothNumberNat_zero"],
 ["simpNF", "sInf_Prop_eq"],
 ["simpNF", "sInf_eq_top"],
 ["simpNF", "sInf_insert"],
 ["simpNF", "sSup_Prop_eq"],
 ["simpNF", "sSup_atoms_le_eq"],
 ["simpNF", "sSup_compact_le_eq"],
 ["simpNF", "sSup_eq_bot"],
 ["simpNF", "sSup_insert"],
 ["simpNF", "sSup_le_iff"],
 ["simpNF", "selfZPow_neg_coe_nat"],
 ["simpNF", "sesqFormOfInner_apply_apply"],
 ["simpNF", "sigmaFinsuppEquivDFinsupp_smul"],
 ["simpNF", "slope_sub_smul"],
 ["simpNF", "slope_vadd_const"],
 ["simpNF", "specializes_pi"],
 ["simpNF", "star_prod"],
 ["simpNF", "star_sum"],
 ["simpNF", "stereoInvFun_apply"],
 ["simpNF", "stereoToFun_apply"],
 ["simpNF", "sub_orthogonalProjection_mem_orthogonal"],
 ["simpNF", "subset_sInf_def"],
 ["simpNF", "subset_sSup_def"],
 ["simpNF", "sum_bernoulli"],
 ["simpNF", "sum_bernoulli'"],
 ["simpNF", "summable_matrix_conjTranspose"],
 ["simpNF", "summable_matrix_diagonal"],
 ["simpNF", "summable_matrix_transpose"],
 ["simpNF", "summable_op"],
 ["simpNF", "summable_star_iff"],
 ["simpNF", "summable_star_iff'"],
 ["simpNF", "summable_unop"],
 ["simpNF", "supIrred_iff_not_isMin"],
 ["simpNF", "supIrred_ofDual"],
 ["simpNF", "supIrred_toDual"],
 ["simpNF", "supPrime_ofDual"],
 ["simpNF", "supPrime_toDual"],
 ["simpNF", "sup_Prop_eq"],
 ["simpNF", "tangentBundleModelSpaceHomeomorph_coe"],
 ["simpNF", "tangentBundleModelSpaceHomeomorph_coe_symm"],
 ["simpNF", "tangentBundle_model_space_coe_chartAt"],
 ["simpNF", "tangentBundle_model_space_coe_chartAt_symm"],
 ["simpNF", "tendsto_Iio_atTop"],
 ["simpNF", "tendsto_Ioi_atBot"],
 ["simpNF", "tendsto_Ioo_atBot"],
 ["simpNF", "tendsto_Ioo_atTop"],
 ["simpNF", "tendsto_comp_coe_Ioo_atBot"],
 ["simpNF", "tendsto_comp_coe_Ioo_atTop"],
 ["simpNF", "tendsto_const_nhds_iff"],
 ["simpNF", "tendsto_indicator_const_apply_iff_eventually"],
 ["simpNF", "tendsto_indicator_const_iff_forall_eventually"],
 ["simpNF", "tendsto_norm_atTop_iff_cobounded"],
 ["simpNF", "tendsto_norm_atTop_iff_cobounded'"],
 ["simpNF", "thickenedIndicator_apply"],
 ["simpNF", "thickenedIndicator_toFun"],
 ["simpNF", "toAdd_prod"],
 ["simpNF", "toIcoMod_sub_self"],
 ["simpNF", "toIocDiv_apply_left"],
 ["simpNF", "toIocMod_sub_self"],
 ["simpNF", "toMatrix_distrib_mul_action_toLinearMap"],
 ["simpNF", "toMul_sum"],
 ["simpNF", "tsum_const"],
 ["simpNF", "tsum_extend_zero"],
 ["simpNF", "tsum_ite_eq"],
 ["simpNF", "tsum_zero"],
 ["simpNF", "unitSphereToUnits_apply_coe"],
 ["simpNF", "update_le_self_iff"],
 ["simpNF", "update_le_update_iff'"],
 ["simpNF", "upperClosure_sUnion"],
 ["simpNF", "volume_iUnion_setOf_liouvilleWith"],
 ["simpNF", "wellFounded_liftOn₂'_iff"],
 ["simpNF", "zpow_iterate"],
 ["simpNF", "zpow_neg"],
 ["simpNF", "zsmul_neg'"],
 ["simpNF", "AList.insert_entries"],
 ["simpNF", "AList.lookupFinsupp_support"],
 ["simpNF", "Action.diagonal_V"],
 ["simpNF", "Action.diagonal_ρ_apply"],
 ["simpNF", "Action.sum_hom"],
 ["simpNF", "AddAction.mem_fixedPoints"],
 ["simpNF", "AddAction.stabilizer_vadd_eq_left"],
 ["simpNF", "AddChar.map_add_mul"],
 ["simpNF", "AddChar.map_nsmul_pow"],
 ["simpNF", "AddChar.map_zero_one"],
 ["simpNF", "AddChar.map_zsmul_zpow"],
 ["simpNF", "AddChar.mulShift_apply"],
 ["simpNF", "AddChar.one_apply"],
 ["simpNF", "AddCircle.card_addOrderOf_eq_totient"],
 ["simpNF", "AddCircle.coe_equivIco_mk_apply"],
 ["simpNF", "AddCircle.equivAddCircle_apply_mk"],
 ["simpNF", "AddCircle.equivAddCircle_symm_apply_mk"],
 ["simpNF", "AddCommGroup.primaryComponent_coe"],
 ["simpNF", "AddCommMonoid.primaryComponent_coe"],
 ["simpNF", "AddCon.coe_iInf"],
 ["simpNF", "AddCon.coe_inf"],
 ["simpNF", "AddCon.coe_sInf"],
 ["simpNF", "AddEquiv.map_dfinsupp_sumAddHom"],
 ["simpNF", "AddEquiv.piCongrRight_refl"],
 ["simpNF", "AddEquiv.piCongrRight_symm"],
 ["simpNF", "AddEquiv.piCongrRight_trans"],
 ["simpNF", "AddGroupNorm.coe_add"],
 ["simpNF", "AddGroupNorm.coe_le_coe"],
 ["simpNF", "AddGroupNorm.coe_lt_coe"],
 ["simpNF", "AddGroupNorm.coe_sup"],
 ["simpNF", "AddGroupSeminorm.coe_add"],
 ["simpNF", "AddGroupSeminorm.coe_le_coe"],
 ["simpNF", "AddGroupSeminorm.coe_lt_coe"],
 ["simpNF", "AddGroupSeminorm.coe_smul"],
 ["simpNF", "AddGroupSeminorm.coe_sup"],
 ["simpNF", "AddGroupSeminorm.inf_apply"],
 ["simpNF", "AddHom.mem_srange"],
 ["simpNF", "AddHom.mulRight_apply"],
 ["simpNF", "AddMonoid.le_minOrder"],
 ["simpNF", "AddMonoid.not_isTorsionFree_iff"],
 ["simpNF", "AddMonoid.not_isTorsion_iff"],
 ["simpNF", "AddMonoidAlgebra.liftMagma_apply_apply"],
 ["simpNF", "AddMonoidAlgebra.modOf_apply_add_self"],
 ["simpNF", "AddMonoidAlgebra.modOf_apply_of_exists_add"],
 ["simpNF", "AddMonoidAlgebra.modOf_apply_of_not_exists_add"],
 ["simpNF", "AddMonoidHom.coe_dfinsupp_sum"],
 ["simpNF", "AddMonoidHom.coe_dfinsupp_sumAddHom"],
 ["simpNF", "AddMonoidHom.coe_mulRight"],
 ["simpNF", "AddMonoidHom.coe_smul"],
 ["simpNF", "AddMonoidHom.coe_toRealLinearMap"],
 ["simpNF", "AddMonoidHom.finset_sum_apply"],
 ["simpNF", "AddMonoidHom.finsupp_sum_apply"],
 ["simpNF", "AddMonoidHom.mapDMatrix_apply"],
 ["simpNF", "AddMonoidHom.map_dfinsupp_sumAddHom"],
 ["simpNF", "AddMonoidHom.mem_mrange"],
 ["simpNF", "AddMonoidHom.mem_range"],
 ["simpNF", "AddMonoidHom.noncommPiCoprod_single"],
 ["simpNF", "AddMonoidHom.single_apply"],
 ["simpNF", "AddSubgroup.card_eq_one"],
 ["simpNF", "AddSubgroup.card_mul_index"],
 ["simpNF", "AddSubgroup.closure_eq_bot_iff"],
 ["simpNF", "AddSubgroup.coe_norm"],
 ["simpNF", "AddSubgroup.coe_sInf"],
 ["simpNF", "AddSubgroup.exists_zmultiples"],
 ["simpNF", "AddSubgroup.forall_zmultiples"],
 ["simpNF", "AddSubgroup.mem_map"],
 ["simpNF", "AddSubgroup.mem_sInf"],
 ["simpNF", "AddSubgroup.noncommPiCoprod_single"],
 ["simpNF", "AddSubgroup.quotientEquivSumOfLE'_apply"],
 ["simpNF", "AddSubgroup.quotientEquivSumOfLE'_symm_apply"],
 ["simpNF", "AddSubgroup.quotientEquivSumOfLE_apply"],
 ["simpNF", "AddSubgroup.quotientEquivSumOfLE_symm_apply"],
 ["simpNF", "AddSubgroup.relindex_bot_left"],
 ["simpNF", "AddSubgroup.single_mem_pi"],
 ["simpNF", "AddSubgroup.val_finset_sum"],
 ["simpNF", "AddSubmonoid.coe_finset_sum"],
 ["simpNF", "AddSubmonoid.coe_sInf"],
 ["simpNF", "AddSubmonoid.mem_map"],
 ["simpNF", "AddSubmonoid.mem_one"],
 ["simpNF", "AddSubsemigroup.coe_sInf"],
 ["simpNF", "AddSubsemigroup.mem_map"],
 ["simpNF", "AddUnits.addRight_apply"],
 ["simpNF", "AffineBasis.affineCombination_coord_eq_self"],
 ["simpNF", "AffineBasis.coord_apply_combination_of_mem"],
 ["simpNF", "AffineBasis.coord_apply_combination_of_not_mem"],
 ["simpNF", "AffineBasis.linear_combination_coord_eq_self"],
 ["simpNF", "AffineBasis.sum_coord_apply_eq_one"],
 ["simpNF", "AffineEquiv.coe_constVSub_symm"],
 ["simpNF", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional"],
 ["simpNF", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional_symm"],
 ["simpNF", "AffineEquiv.sOppSide_map_iff"],
 ["simpNF", "AffineEquiv.sSameSide_map_iff"],
 ["simpNF", "AffineEquiv.wOppSide_map_iff"],
 ["simpNF", "AffineEquiv.wSameSide_map_iff"],
 ["simpNF", "AffineIsometry.angle_map"],
 ["simpNF", "AffineIsometry.coe_comp"],
 ["simpNF", "AffineIsometry.coe_id"],
 ["simpNF", "AffineIsometry.coe_mul"],
 ["simpNF", "AffineIsometry.coe_one"],
 ["simpNF", "AffineIsometry.coe_toAffineIsometryEquiv"],
 ["simpNF", "AffineIsometry.coe_toAffineMap"],
 ["simpNF", "AffineIsometry.comp_continuous_iff"],
 ["simpNF", "AffineIsometry.dist_map"],
 ["simpNF", "AffineIsometry.edist_map"],
 ["simpNF", "AffineIsometry.id_apply"],
 ["simpNF", "AffineIsometry.image_intrinsicClosure"],
 ["simpNF", "AffineIsometry.image_intrinsicFrontier"],
 ["simpNF", "AffineIsometry.image_intrinsicInterior"],
 ["simpNF", "AffineIsometry.map_eq_iff"],
 ["simpNF", "AffineIsometry.map_vadd"],
 ["simpNF", "AffineIsometry.map_vsub"],
 ["simpNF", "AffineIsometry.nndist_map"],
 ["simpNF", "AffineIsometry.toAffineIsometryEquiv_apply"],
 ["simpNF", "AffineIsometryEquiv.apply_symm_apply"],
 ["simpNF", "AffineIsometryEquiv.coe_constVAdd"],
 ["simpNF", "AffineIsometryEquiv.coe_constVSub"],
 ["simpNF", "AffineIsometryEquiv.coe_inv"],
 ["simpNF", "AffineIsometryEquiv.coe_mk"],
 ["simpNF", "AffineIsometryEquiv.coe_mk'"],
 ["simpNF", "AffineIsometryEquiv.coe_mul"],
 ["simpNF", "AffineIsometryEquiv.coe_one"],
 ["simpNF", "AffineIsometryEquiv.coe_refl"],
 ["simpNF", "AffineIsometryEquiv.coe_symm_trans"],
 ["simpNF", "AffineIsometryEquiv.coe_toAffineEquiv"],
 ["simpNF", "AffineIsometryEquiv.coe_toAffineIsometry"],
 ["simpNF", "AffineIsometryEquiv.coe_toHomeomorph"],
 ["simpNF", "AffineIsometryEquiv.coe_toIsometryEquiv"],
 ["simpNF", "AffineIsometryEquiv.coe_trans"],
 ["simpNF", "AffineIsometryEquiv.coe_vaddConst"],
 ["simpNF", "AffineIsometryEquiv.coe_vaddConst'"],
 ["simpNF", "AffineIsometryEquiv.coe_vaddConst_symm"],
 ["simpNF", "AffineIsometryEquiv.comp_continuousOn_iff"],
 ["simpNF", "AffineIsometryEquiv.comp_continuous_iff"],
 ["simpNF", "AffineIsometryEquiv.diam_image"],
 ["simpNF", "AffineIsometryEquiv.dist_map"],
 ["simpNF", "AffineIsometryEquiv.dist_pointReflection_fixed"],
 ["simpNF", "AffineIsometryEquiv.ediam_image"],
 ["simpNF", "AffineIsometryEquiv.edist_map"],
 ["simpNF", "AffineIsometryEquiv.map_vadd"],
 ["simpNF", "AffineIsometryEquiv.map_vsub"],
 ["simpNF", "AffineIsometryEquiv.pointReflection_midpoint_left"],
 ["simpNF", "AffineIsometryEquiv.pointReflection_midpoint_right"],
 ["simpNF", "AffineIsometryEquiv.pointReflection_self"],
 ["simpNF", "AffineIsometryEquiv.symm_apply_apply"],
 ["simpNF", "AffineMap.coe_add"],
 ["simpNF", "AffineMap.coe_neg"],
 ["simpNF", "AffineMap.coe_smul"],
 ["simpNF", "AffineMap.coe_sub"],
 ["simpNF", "AffineMap.deriv"],
 ["simpNF", "AffineSubspace.coe_subtypeₐᵢ"],
 ["simpNF", "AffineSubspace.equivMapOfInjective_apply"],
 ["simpNF", "AffineSubspace.equivMapOfInjective_invFun"],
 ["simpNF", "AffineSubspace.equivMapOfInjective_symm_apply"],
 ["simpNF", "AffineSubspace.equivMapOfInjective_toFun"],
 ["simpNF", "AffineSubspace.mem_map"],
 ["simpNF", "AhlswedeZhang.supSum_singleton"],
 ["simpNF", "AkraBazziRecurrence.sumCoeffsExp_p_eq_one"],
 ["simpNF", "AlgEquiv.piCongrRight_refl"],
 ["simpNF", "AlgEquiv.piCongrRight_symm"],
 ["simpNF", "AlgEquiv.piCongrRight_trans"],
 ["simpNF", "AlgHom.card_of_splits"],
 ["simpNF", "AlgHom.coe_toContinuousLinearMap"],
 ["simpNF", "AlgHom.map_coe_real_complex"],
 ["simpNF", "AlgHom.mem_fieldRange"],
 ["simpNF", "AlgHom.mem_range"],
 ["simpNF", "Algebra.coe_sInf"],
 ["simpNF", "Algebra.toMatrix_lsmul"],
 ["simpNF", "AlgebraicClosure.coe_toStepOfLE"],
 ["simpNF",
  "AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_apply"],
 ["simpNF", "AlgebraicTopology.alternatingCofaceMapComplex_map"],
 ["simpNF", "AlgebraicTopology.alternatingFaceMapComplex_obj_d"],
 ["simpNF", "AlternatingMap.add_apply"],
 ["simpNF", "AlternatingMap.codRestrict_apply_coe"],
 ["simpNF", "AlternatingMap.coe_pi"],
 ["simpNF", "AlternatingMap.compLinearMap_apply"],
 ["simpNF", "AlternatingMap.constLinearEquivOfIsEmpty_symm_apply"],
 ["simpNF", "AlternatingMap.curryLeft_apply_apply"],
 ["simpNF", "AlternatingMap.domCoprod_apply"],
 ["simpNF", "AlternatingMap.domDomCongr_apply"],
 ["simpNF", "AlternatingMap.map_add"],
 ["simpNF", "AlternatingMap.map_basis_eq_zero_iff"],
 ["simpNF", "AlternatingMap.map_eq_zero_of_eq"],
 ["simpNF", "AlternatingMap.map_neg"],
 ["simpNF", "AlternatingMap.map_smul"],
 ["simpNF", "AlternatingMap.map_sub"],
 ["simpNF", "AlternatingMap.map_update_zero"],
 ["simpNF", "AlternatingMap.map_zero"],
 ["simpNF", "AlternatingMap.neg_apply"],
 ["simpNF", "AlternatingMap.ofSubsingleton_apply_apply"],
 ["simpNF", "AlternatingMap.ofSubsingleton_symm_apply_apply"],
 ["simpNF", "AlternatingMap.smul_apply"],
 ["simpNF", "AlternatingMap.sub_apply"],
 ["simpNF", "AlternatingMap.zero_apply"],
 ["simpNF", "Asymptotics.isBigOWith_abs_left"],
 ["simpNF", "Asymptotics.isBigOWith_abs_right"],
 ["simpNF", "Asymptotics.isBigOWith_neg_left"],
 ["simpNF", "Asymptotics.isBigOWith_neg_right"],
 ["simpNF", "Asymptotics.isBigOWith_norm_left"],
 ["simpNF", "Asymptotics.isBigOWith_norm_right"],
 ["simpNF", "Asymptotics.isBigOWith_principal"],
 ["simpNF", "Asymptotics.isBigOWith_top"],
 ["simpNF", "Asymptotics.isBigOWith_zero_right_iff"],
 ["simpNF", "Asymptotics.isBigO_abs_left"],
 ["simpNF", "Asymptotics.isBigO_abs_right"],
 ["simpNF", "Asymptotics.isBigO_const_const_iff"],
 ["simpNF", "Asymptotics.isBigO_neg_left"],
 ["simpNF", "Asymptotics.isBigO_neg_right"],
 ["simpNF", "Asymptotics.isBigO_norm_left"],
 ["simpNF", "Asymptotics.isBigO_norm_right"],
 ["simpNF", "Asymptotics.isBigO_one_iff"],
 ["simpNF", "Asymptotics.isBigO_pi"],
 ["simpNF", "Asymptotics.isBigO_prod_left"],
 ["simpNF", "Asymptotics.isBigO_pure"],
 ["simpNF", "Asymptotics.isBigO_top"],
 ["simpNF", "Asymptotics.isBigO_zero_right_iff"],
 ["simpNF", "Asymptotics.isLittleO_abs_left"],
 ["simpNF", "Asymptotics.isLittleO_abs_right"],
 ["simpNF", "Asymptotics.isLittleO_const_const_iff"],
 ["simpNF", "Asymptotics.isLittleO_const_left"],
 ["simpNF", "Asymptotics.isLittleO_neg_left"],
 ["simpNF", "Asymptotics.isLittleO_neg_right"],
 ["simpNF", "Asymptotics.isLittleO_norm_left"],
 ["simpNF", "Asymptotics.isLittleO_norm_right"],
 ["simpNF", "Asymptotics.isLittleO_one_iff"],
 ["simpNF", "Asymptotics.isLittleO_one_left_iff"],
 ["simpNF", "Asymptotics.isLittleO_pi"],
 ["simpNF", "Asymptotics.isLittleO_principal"],
 ["simpNF", "Asymptotics.isLittleO_prod_left"],
 ["simpNF", "Asymptotics.isLittleO_top"],
 ["simpNF", "Asymptotics.isLittleO_zero_right_iff"],
 ["simpNF", "Asymptotics.isTheta_const_const_iff"],
 ["simpNF", "Asymptotics.isTheta_inv"],
 ["simpNF", "Asymptotics.isTheta_norm_left"],
 ["simpNF", "Asymptotics.isTheta_norm_right"],
 ["simpNF", "Asymptotics.isTheta_zero_left"],
 ["simpNF", "Asymptotics.isTheta_zero_right"],
 ["simpNF", "Basis.abs_det_adjustToOrientation"],
 ["simpNF", "Basis.algebraMapCoeffs_repr_apply_support_val"],
 ["simpNF", "Basis.coe_constrL"],
 ["simpNF", "Basis.coe_ofEquivFun"],
 ["simpNF", "Basis.coe_ofRepr"],
 ["simpNF", "Basis.coe_parallelepiped"],
 ["simpNF", "Basis.coe_sumCoords"],
 ["simpNF", "Basis.coe_sumCoords_of_fintype"],
 ["simpNF", "Basis.coe_toOrthonormalBasis"],
 ["simpNF", "Basis.coe_toOrthonormalBasis_repr"],
 ["simpNF", "Basis.coe_toOrthonormalBasis_repr_symm"],
 ["simpNF", "Basis.constrL_apply"],
 ["simpNF", "Basis.constrL_basis"],
 ["simpNF", "Basis.constr_apply_fintype"],
 ["simpNF", "Basis.det_comp"],
 ["simpNF", "Basis.det_comp_basis"],
 ["simpNF", "Basis.det_isUnitSMul"],
 ["simpNF", "Basis.det_map"],
 ["simpNF", "Basis.det_unitsSMul_self"],
 ["simpNF", "Basis.equivFunL_apply"],
 ["simpNF", "Basis.equivFunL_symm_apply_repr"],
 ["simpNF", "Basis.equivFun_symm_apply"],
 ["simpNF", "Basis.mem_toFlag"],
 ["simpNF", "Basis.prod_apply"],
 ["simpNF", "Basis.sum_dual_apply_smul_coord"],
 ["simpNF", "Basis.sum_toMatrix_smul_self"],
 ["simpNF", "Behrend.map_apply"],
 ["simpNF", "BilinForm.coe_add"],
 ["simpNF", "BilinForm.coe_neg"],
 ["simpNF", "BilinForm.coe_smul"],
 ["simpNF", "BilinForm.coe_sub"],
 ["simpNF", "BilinForm.mem_orthogonal_iff"],
 ["simpNF", "BilinForm.sum_apply"],
 ["simpNF", "BilinForm.sum_left"],
 ["simpNF", "BilinForm.sum_right"],
 ["simpNF", "BilinForm.toLin'Flip_apply"],
 ["simpNF", "BilinForm.toMatrixAux_stdBasis"],
 ["simpNF", "BilinForm.toQuadraticForm_sum"],
 ["simpNF", "Bornology.isBounded_iUnion"],
 ["simpNF", "Bornology.isCobounded_biInter_finset"],
 ["simpNF", "Bornology.isCobounded_iInter"],
 ["simpNF", "Bornology.ofBounded'_cobounded"],
 ["simpNF", "Bornology.ofBounded_cobounded"],
 ["simpNF", "BotHom.coe_bot"],
 ["simpNF", "BotHom.coe_inf"],
 ["simpNF", "BotHom.coe_sup"],
 ["simpNF", "BoundedContinuousFunction.algebraMap_apply"],
 ["simpNF", "BoundedContinuousFunction.coeFnAddHom_apply"],
 ["simpNF", "BoundedContinuousFunction.coeFn_abs"],
 ["simpNF", "BoundedContinuousFunction.coeFn_sup"],
 ["simpNF", "BoundedContinuousFunction.coe_add"],
 ["simpNF", "BoundedContinuousFunction.coe_compContinuous"],
 ["simpNF", "BoundedContinuousFunction.coe_intCast"],
 ["simpNF", "BoundedContinuousFunction.coe_mul"],
 ["simpNF", "BoundedContinuousFunction.coe_natCast"],
 ["simpNF", "BoundedContinuousFunction.coe_neg"],
 ["simpNF", "BoundedContinuousFunction.coe_normComp"],
 ["simpNF", "BoundedContinuousFunction.coe_npowRec"],
 ["simpNF", "BoundedContinuousFunction.coe_nsmul"],
 ["simpNF", "BoundedContinuousFunction.coe_nsmulRec"],
 ["simpNF", "BoundedContinuousFunction.coe_ofNormedAddCommGroup"],
 ["simpNF", "BoundedContinuousFunction.coe_ofNormedAddCommGroupDiscrete"],
 ["simpNF", "BoundedContinuousFunction.coe_one"],
 ["simpNF", "BoundedContinuousFunction.coe_pow"],
 ["simpNF", "BoundedContinuousFunction.coe_restrict"],
 ["simpNF", "BoundedContinuousFunction.coe_smul"],
 ["simpNF", "BoundedContinuousFunction.coe_star"],
 ["simpNF", "BoundedContinuousFunction.coe_sub"],
 ["simpNF", "BoundedContinuousFunction.coe_sum"],
 ["simpNF", "BoundedContinuousFunction.coe_to_continuous_fun"],
 ["simpNF", "BoundedContinuousFunction.coe_zero"],
 ["simpNF", "BoundedContinuousFunction.coe_zsmul"],
 ["simpNF", "BoundedContinuousFunction.coe_zsmulRec"],
 ["simpNF", "BoundedContinuousFunction.compContinuous_apply"],
 ["simpNF", "BoundedContinuousFunction.const_apply"],
 ["simpNF", "BoundedContinuousFunction.const_toFun"],
 ["simpNF", "BoundedContinuousFunction.dist_extend_extend"],
 ["simpNF", "BoundedContinuousFunction.evalClm_apply"],
 ["simpNF", "BoundedContinuousFunction.extend_apply"],
 ["simpNF", "BoundedContinuousFunction.extend_comp"],
 ["simpNF", "BoundedContinuousFunction.mkOfBound_coe"],
 ["simpNF", "BoundedContinuousFunction.mkOfCompact_apply"],
 ["simpNF", "BoundedContinuousFunction.mkOfDiscrete_apply"],
 ["simpNF", "BoundedContinuousFunction.mkOfDiscrete_toFun"],
 ["simpNF", "BoundedContinuousFunction.nnnorm_coeFn_eq"],
 ["simpNF", "BoundedContinuousFunction.nnrealPart_coeFn_eq"],
 ["simpNF", "BoundedContinuousFunction.norm_normComp"],
 ["simpNF", "BoundedContinuousFunction.nsmul_apply"],
 ["simpNF", "BoundedContinuousFunction.pow_apply"],
 ["simpNF", "BoundedContinuousFunction.restrict_apply"],
 ["simpNF", "BoundedContinuousFunction.star_apply"],
 ["simpNF", "BoundedContinuousFunction.toContinuousMapAddHom_apply"],
 ["simpNF", "BoundedContinuousFunction.toContinuousMapLinearMap_apply"],
 ["simpNF", "BoundedContinuousFunction.zsmul_apply"],
 ["simpNF", "BoxIntegral.integrable_neg"],
 ["simpNF", "BoxIntegral.integralSum_add"],
 ["simpNF", "BoxIntegral.integralSum_neg"],
 ["simpNF", "BoxIntegral.integralSum_smul"],
 ["simpNF", "BoxIntegral.integral_const"],
 ["simpNF", "BoxIntegral.integral_neg"],
 ["simpNF", "BoxIntegral.integral_smul"],
 ["simpNF", "BumpCovering.coe_single"],
 ["simpNF", "BumpCovering.coe_toSmoothPartitionOfUnity"],
 ["simpNF", "CFilter.mem_toFilter_sets"],
 ["simpNF", "CanonicallyOrderedCommSemiring.list_prod_pos"],
 ["simpNF", "CanonicallyOrderedCommSemiring.multiset_prod_pos"],
 ["simpNF", "CanonicallyOrderedCommSemiring.prod_pos"],
 ["simpNF", "Cardinal.lift_iSup_le_iff"],
 ["simpNF", "Cardinal.lift_prod"],
 ["simpNF", "Cardinal.lift_sum"],
 ["simpNF", "Cardinal.mk_pi"],
 ["simpNF", "Cardinal.mk_sigma"],
 ["simpNF", "Cardinal.prod_const"],
 ["simpNF", "Cardinal.prod_eq_zero"],
 ["simpNF", "Cardinal.sum_add_distrib"],
 ["simpNF", "Cardinal.sum_add_distrib'"],
 ["simpNF", "Cardinal.sum_const"],
 ["simpNF", "CategoryTheory.algebraEquivUnder_counitIso"],
 ["simpNF", "CategoryTheory.algebraEquivUnder_unitIso"],
 ["simpNF", "CategoryTheory.biconeCategoryStruct_comp"],
 ["simpNF", "CategoryTheory.biconeCategoryStruct_id"],
 ["simpNF", "CategoryTheory.biconeMk_map"],
 ["simpNF", "CategoryTheory.coalgebraEquivOver_counitIso"],
 ["simpNF", "CategoryTheory.coalgebraEquivOver_unitIso"],
 ["simpNF", "CategoryTheory.cosimplicialSimplicialEquiv_inverse_map"],
 ["simpNF", "CategoryTheory.discreteSieve_apply"],
 ["simpNF", "CategoryTheory.equivEssImageOfReflective_unitIso"],
 ["simpNF", "CategoryTheory.evaluationLeftAdjoint_map_app"],
 ["simpNF", "CategoryTheory.evaluationLeftAdjoint_obj_map"],
 ["simpNF", "CategoryTheory.evaluationLeftAdjoint_obj_obj"],
 ["simpNF", "CategoryTheory.evaluationRightAdjoint_map_app"],
 ["simpNF", "CategoryTheory.evaluationRightAdjoint_obj_map"],
 ["simpNF", "CategoryTheory.evaluationRightAdjoint_obj_obj"],
 ["simpNF", "CategoryTheory.extendCofan_ι_app"],
 ["simpNF", "CategoryTheory.extendFan_π_app"],
 ["simpNF", "CategoryTheory.functorProdToProdFunctor_map"],
 ["simpNF", "CategoryTheory.op_sum"],
 ["simpNF", "CategoryTheory.preadditiveCoyonedaObj_map"],
 ["simpNF", "CategoryTheory.sheafEquivSheafOfTypes_counitIso"],
 ["simpNF", "CategoryTheory.subterminalsEquivMonoOverTerminal_counitIso"],
 ["simpNF", "CategoryTheory.topologyOfClosureOperator_sieves"],
 ["simpNF", "CategoryTheory.typeEquiv_unitIso_hom_app"],
 ["simpNF", "CategoryTheory.typeEquiv_unitIso_inv_app"],
 ["simpNF", "CategoryTheory.unop_sum"],
 ["simpNF", "CauSeq.coe_add"],
 ["simpNF", "CauSeq.coe_inf"],
 ["simpNF", "CauSeq.coe_inv"],
 ["simpNF", "CauSeq.coe_mul"],
 ["simpNF", "CauSeq.coe_neg"],
 ["simpNF", "CauSeq.coe_pow"],
 ["simpNF", "CauSeq.coe_smul"],
 ["simpNF", "CauSeq.coe_sub"],
 ["simpNF", "CauSeq.coe_sup"],
 ["simpNF", "CentroidHom.coe_add"],
 ["simpNF", "CentroidHom.coe_neg"],
 ["simpNF", "CentroidHom.coe_smul"],
 ["simpNF", "CentroidHom.coe_sub"],
 ["simpNF", "CircleDeg1Lift.coe_mk"],
 ["simpNF", "CircleDeg1Lift.coe_mul"],
 ["simpNF", "CircleDeg1Lift.coe_one"],
 ["simpNF", "CircleDeg1Lift.coe_toOrderHom"],
 ["simpNF", "CircleDeg1Lift.coe_toOrderIso"],
 ["simpNF", "CircleDeg1Lift.coe_toOrderIso_inv"],
 ["simpNF", "CircleDeg1Lift.coe_toOrderIso_symm"],
 ["simpNF", "CircleDeg1Lift.inf_apply"],
 ["simpNF", "CircleDeg1Lift.map_add_int"],
 ["simpNF", "CircleDeg1Lift.map_add_nat"],
 ["simpNF", "CircleDeg1Lift.map_add_one"],
 ["simpNF", "CircleDeg1Lift.map_fract_sub_fract_eq"],
 ["simpNF", "CircleDeg1Lift.map_int_add"],
 ["simpNF", "CircleDeg1Lift.map_nat_add"],
 ["simpNF", "CircleDeg1Lift.map_one_add"],
 ["simpNF", "CircleDeg1Lift.map_sub_int"],
 ["simpNF", "CircleDeg1Lift.map_sub_nat"],
 ["simpNF", "CircleDeg1Lift.sup_apply"],
 ["simpNF", "CircleDeg1Lift.translate_apply"],
 ["simpNF", "CircleDeg1Lift.translate_inv_apply"],
 ["simpNF", "CircleDeg1Lift.translate_iterate"],
 ["simpNF", "CircleDeg1Lift.translate_pow"],
 ["simpNF", "CircleDeg1Lift.translate_zpow"],
 ["simpNF", "CircleDeg1Lift.units_apply_inv_apply"],
 ["simpNF", "CircleDeg1Lift.units_inv_apply_apply"],
 ["simpNF", "Class.coe_sep"],
 ["simpNF", "Class.mem_sUnion"],
 ["simpNF", "Class.mem_univ"],
 ["simpNF", "Class.sUnion_apply"],
 ["simpNF", "ClassGroup.mem_finsetApprox"],
 ["simpNF", "CliffordAlgebra.equivBaseChange_apply"],
 ["simpNF", "CliffordAlgebra.equivBaseChange_symm_apply"],
 ["simpNF", "CliffordAlgebra.lift_unique"],
 ["simpNF", "CliffordAlgebra.ofBaseChangeAux_ι"],
 ["simpNF", "CliffordAlgebra.ofBaseChange_tmul_one"],
 ["simpNF", "CliffordAlgebra.ofBaseChange_tmul_ι"],
 ["simpNF", "CliffordAlgebra.ofBaseChange_toBaseChange"],
 ["simpNF", "CliffordAlgebra.toBaseChange_ofBaseChange"],
 ["simpNF", "CliffordAlgebra.toBaseChange_ι"],
 ["simpNF", "CliffordAlgebraComplex.Q_apply"],
 ["simpNF", "CliffordAlgebraComplex.equiv_apply"],
 ["simpNF", "CliffordAlgebraComplex.equiv_symm_apply"],
 ["simpNF", "CliffordAlgebraComplex.ofComplex_I"],
 ["simpNF", "CliffordAlgebraComplex.ofComplex_conj"],
 ["simpNF", "CliffordAlgebraComplex.ofComplex_toComplex"],
 ["simpNF", "CliffordAlgebraComplex.toComplex_involute"],
 ["simpNF", "CliffordAlgebraComplex.toComplex_ofComplex"],
 ["simpNF", "CliffordAlgebraComplex.toComplex_ι"],
 ["simpNF", "CliffordAlgebraDualNumber.equiv_symm_eps"],
 ["simpNF", "CliffordAlgebraDualNumber.equiv_ι"],
 ["simpNF", "CliffordAlgebraQuaternion.Q_apply"],
 ["simpNF", "CliffordAlgebraQuaternion.equiv_apply"],
 ["simpNF", "CliffordAlgebraQuaternion.equiv_symm_apply"],
 ["simpNF", "CliffordAlgebraQuaternion.ofQuaternion_mk"],
 ["simpNF", "CliffordAlgebraQuaternion.ofQuaternion_star"],
 ["simpNF", "CliffordAlgebraQuaternion.ofQuaternion_toQuaternion"],
 ["simpNF", "CliffordAlgebraQuaternion.quaternionBasis_i"],
 ["simpNF", "CliffordAlgebraQuaternion.quaternionBasis_j"],
 ["simpNF", "CliffordAlgebraQuaternion.quaternionBasis_k"],
 ["simpNF", "CliffordAlgebraQuaternion.toQuaternion_ofQuaternion"],
 ["simpNF", "CliffordAlgebraQuaternion.toQuaternion_ι"],
 ["simpNF", "CommGroup.primaryComponent_coe"],
 ["simpNF", "CommMonoid.primaryComponent_coe"],
 ["simpNF", "CompHaus.homeoOfIso_apply"],
 ["simpNF", "CompHaus.homeoOfIso_symm_apply"],
 ["simpNF", "CompHaus.isoEquivHomeo_apply"],
 ["simpNF", "CompHaus.isoEquivHomeo_symm_apply"],
 ["simpNF", "CompHaus.isoOfHomeo_hom"],
 ["simpNF", "CompHaus.isoOfHomeo_inv"],
 ["simpNF", "Complementeds.coe_inf"],
 ["simpNF", "Complementeds.coe_sup"],
 ["simpNF", "Complementeds.mk_inf_mk"],
 ["simpNF", "Complementeds.mk_sup_mk"],
 ["simpNF", "CompleteLattice.independent_ne_bot_iff_independent"],
 ["simpNF", "CompleteSublattice.coe_sInf"],
 ["simpNF", "CompleteSublattice.coe_sSup"],
 ["simpNF", "CompleteSublattice.mem_map"],
 ["simpNF", "Complex.abs_I"],
 ["simpNF", "Complex.abs_abs"],
 ["simpNF", "Complex.abs_conj"],
 ["simpNF", "Complex.abs_cos_add_sin_mul_I"],
 ["simpNF", "Complex.abs_cpow_inv_nat"],
 ["simpNF", "Complex.abs_cpow_real"],
 ["simpNF", "Complex.abs_exp_ofReal"],
 ["simpNF", "Complex.abs_exp_ofReal_mul_I"],
 ["simpNF", "Complex.abs_im_eq_abs"],
 ["simpNF", "Complex.abs_im_lt_abs"],
 ["simpNF", "Complex.abs_mul_cos_add_sin_mul_I"],
 ["simpNF", "Complex.abs_mul_cos_arg"],
 ["simpNF", "Complex.abs_mul_exp_arg_mul_I"],
 ["simpNF", "Complex.abs_mul_sin_arg"],
 ["simpNF", "Complex.abs_natCast"],
 ["simpNF", "Complex.abs_ofNat"],
 ["simpNF", "Complex.abs_ofReal"],
 ["simpNF", "Complex.abs_re_eq_abs"],
 ["simpNF", "Complex.abs_re_lt_abs"],
 ["simpNF", "Complex.areaForm"],
 ["simpNF", "Complex.arg_conj_coe_angle"],
 ["simpNF", "Complex.closure_setOf_im_lt"],
 ["simpNF", "Complex.closure_setOf_lt_im"],
 ["simpNF", "Complex.closure_setOf_lt_re"],
 ["simpNF", "Complex.closure_setOf_re_lt"],
 ["simpNF", "Complex.coe_algebraMap"],
 ["simpNF", "Complex.coe_basisOneI"],
 ["simpNF", "Complex.coe_basisOneI_repr"],
 ["simpNF", "Complex.coe_orthonormalBasisOneI"],
 ["simpNF", "Complex.comap_abs_nhds_zero"],
 ["simpNF", "Complex.comap_exp_cobounded"],
 ["simpNF", "Complex.conjAe_coe"],
 ["simpNF", "Complex.conjCle_apply"],
 ["simpNF", "Complex.conjCle_norm"],
 ["simpNF", "Complex.conjLie_apply"],
 ["simpNF", "Complex.deriv_cos'"],
 ["simpNF", "Complex.det_conjAe"],
 ["simpNF", "Complex.det_conjLie"],
 ["simpNF", "Complex.dist_conj_conj"],
 ["simpNF", "Complex.equivRealProdAddHom_apply"],
 ["simpNF", "Complex.equivRealProdAddHom_symm_apply_im"],
 ["simpNF", "Complex.equivRealProdAddHom_symm_apply_re"],
 ["simpNF", "Complex.equivRealProdClm_apply"],
 ["simpNF", "Complex.equivRealProdClm_symm_apply_im"],
 ["simpNF", "Complex.equivRealProdClm_symm_apply_re"],
 ["simpNF", "Complex.equivRealProdLm_apply"],
 ["simpNF", "Complex.equivRealProdLm_symm_apply_im"],
 ["simpNF", "Complex.equivRealProdLm_symm_apply_re"],
 ["simpNF", "Complex.exp_conj"],
 ["simpNF", "Complex.frontier_setOf_im_le"],
 ["simpNF", "Complex.frontier_setOf_im_lt"],
 ["simpNF", "Complex.frontier_setOf_le_im"],
 ["simpNF", "Complex.frontier_setOf_le_re"],
 ["simpNF", "Complex.frontier_setOf_lt_im"],
 ["simpNF", "Complex.frontier_setOf_lt_re"],
 ["simpNF", "Complex.frontier_setOf_re_le"],
 ["simpNF", "Complex.frontier_setOf_re_lt"],
 ["simpNF", "Complex.hasSum_ofReal"],
 ["simpNF", "Complex.imClm_apply"],
 ["simpNF", "Complex.imClm_norm"],
 ["simpNF", "Complex.imLm_coe"],
 ["simpNF", "Complex.im_sum"],
 ["simpNF", "Complex.inner"],
 ["simpNF", "Complex.int_cast_abs"],
 ["simpNF", "Complex.interior_setOf_im_le"],
 ["simpNF", "Complex.interior_setOf_le_im"],
 ["simpNF", "Complex.interior_setOf_le_re"],
 ["simpNF", "Complex.interior_setOf_re_le"],
 ["simpNF", "Complex.kahler"],
 ["simpNF", "Complex.liftAux_apply"],
 ["simpNF", "Complex.lift_apply"],
 ["simpNF", "Complex.lift_symm_apply_coe"],
 ["simpNF", "Complex.linearEquiv_det_conjAe"],
 ["simpNF", "Complex.linearEquiv_det_conjLie"],
 ["simpNF", "Complex.map_exp_comap_re_atTop"],
 ["simpNF", "Complex.measurableEquivPi_apply"],
 ["simpNF", "Complex.measurableEquivPi_symm_apply"],
 ["simpNF", "Complex.measurableEquivRealProd_apply"],
 ["simpNF", "Complex.measurableEquivRealProd_symm_apply"],
 ["simpNF", "Complex.neg_re_eq_abs"],
 ["simpNF", "Complex.nndist_conj_conj"],
 ["simpNF", "Complex.norm_eq_abs"],
 ["simpNF", "Complex.norm_int"],
 ["simpNF", "Complex.oangle"],
 ["simpNF", "Complex.ofRealAm_coe"],
 ["simpNF", "Complex.ofRealClm_apply"],
 ["simpNF", "Complex.ofRealClm_norm"],
 ["simpNF", "Complex.ofReal_prod"],
 ["simpNF", "Complex.ofReal_sum"],
 ["simpNF", "Complex.orthonormalBasisOneI_repr_apply"],
 ["simpNF", "Complex.orthonormalBasisOneI_repr_symm_apply"],
 ["simpNF", "Complex.range_abs"],
 ["simpNF", "Complex.range_exp_mul_I"],
 ["simpNF", "Complex.range_normSq"],
 ["simpNF", "Complex.reClm_apply"],
 ["simpNF", "Complex.reClm_norm"],
 ["simpNF", "Complex.reLm_coe"],
 ["simpNF", "Complex.re_eq_abs"],
 ["simpNF", "Complex.re_eq_neg_abs"],
 ["simpNF", "Complex.re_sum"],
 ["simpNF", "Complex.rightAngleRotation"],
 ["simpNF", "Complex.rotation"],
 ["simpNF", "Complex.selfAdjointEquiv_apply"],
 ["simpNF", "Complex.selfAdjointEquiv_symm_apply"],
 ["simpNF", "Complex.sq_abs_sub_sq_im"],
 ["simpNF", "Complex.sq_abs_sub_sq_re"],
 ["simpNF", "Complex.star_def"],
 ["simpNF", "Complex.summable_ofReal"],
 ["simpNF", "Complex.toMatrix_conjAe"],
 ["simpNF", "Composition.one_le_blocks"],
 ["simpNF", "Composition.one_le_blocks'"],
 ["simpNF", "CompositionSeries.mem_toList"],
 ["simpNF", "Computation.bind_assoc"],
 ["simpNF", "Computation.corec_eq"],
 ["simpNF", "Computation.destruct_map"],
 ["simpNF", "Computation.empty_orElse"],
 ["simpNF", "Computation.liftRelAux_inl_inr"],
 ["simpNF", "Computation.liftRelAux_inr_inl"],
 ["simpNF", "Computation.liftRel_pure_left"],
 ["simpNF", "Computation.liftRel_pure_right"],
 ["simpNF", "Computation.orElse_empty"],
 ["simpNF", "Computation.orElse_pure"],
 ["simpNF", "Computation.orElse_think"],
 ["simpNF", "Computation.ret_orElse"],
 ["simpNF", "Con.coe_iInf"],
 ["simpNF", "Con.coe_inf"],
 ["simpNF", "Con.coe_sInf"],
 ["simpNF", "Concept.sInf_fst"],
 ["simpNF", "Concept.sInf_snd"],
 ["simpNF", "Concept.sSup_fst"],
 ["simpNF", "Concept.sSup_snd"],
 ["simpNF", "ConjAct.forall"],
 ["simpNF", "ConjAct.mem_orbit_conjAct"],
 ["simpNF", "ContMDiffMap.coeFn_mk"],
 ["simpNF", "ContMDiffMap.comp_apply"],
 ["simpNF", "ContMDiffSection.coeFn_mk"],
 ["simpNF", "ContMDiffSection.coe_add"],
 ["simpNF", "ContMDiffSection.coe_neg"],
 ["simpNF", "ContMDiffSection.coe_nsmul"],
 ["simpNF", "ContMDiffSection.coe_smul"],
 ["simpNF", "ContMDiffSection.coe_sub"],
 ["simpNF", "ContMDiffSection.coe_zero"],
 ["simpNF", "ContMDiffSection.coe_zsmul"],
 ["simpNF", "ContinuousAddMonoidHom.add_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.comp_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.coprod_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.diag_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.fst_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.id_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.inl_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.inr_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.neg_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.snd_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.sum_map_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.sum_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.swap_toFun"],
 ["simpNF", "ContinuousAddMonoidHom.zero_toFun"],
 ["simpNF", "ContinuousAffineMap.coe_add"],
 ["simpNF", "ContinuousAffineMap.coe_contLinear"],
 ["simpNF", "ContinuousAffineMap.coe_mk_const_linear_eq_linear"],
 ["simpNF", "ContinuousAffineMap.coe_neg"],
 ["simpNF", "ContinuousAffineMap.coe_smul"],
 ["simpNF", "ContinuousAffineMap.coe_sub"],
 ["simpNF", "ContinuousAffineMap.contLinear_map_vsub"],
 ["simpNF", "ContinuousAffineMap.map_vadd"],
 ["simpNF", "ContinuousAffineMap.norm_eq"],
 ["simpNF", "ContinuousAffineMap.toConstProdContinuousLinearMap_fst"],
 ["simpNF", "ContinuousAffineMap.toConstProdContinuousLinearMap_snd"],
 ["simpNF", "ContinuousAlternatingMap.coe_add"],
 ["simpNF", "ContinuousAlternatingMap.coe_neg"],
 ["simpNF", "ContinuousAlternatingMap.coe_pi"],
 ["simpNF", "ContinuousAlternatingMap.coe_smul"],
 ["simpNF", "ContinuousAlternatingMap.coe_sub"],
 ["simpNF", "ContinuousAlternatingMap.ofSubsingleton_symm_apply_apply"],
 ["simpNF", "ContinuousAlternatingMap.range_toAlternatingMap"],
 ["simpNF", "ContinuousAlternatingMap.sum_apply"],
 ["simpNF", "ContinuousLinearEquiv.arrowCongrSL_apply"],
 ["simpNF", "ContinuousLinearEquiv.arrowCongrSL_symm_apply"],
 ["simpNF", "ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply"],
 ["simpNF", "ContinuousLinearEquiv.coeFn_ofBijective"],
 ["simpNF", "ContinuousLinearEquiv.coe_toDiffeomorph"],
 ["simpNF", "ContinuousLinearEquiv.coe_toDiffeomorph_symm"],
 ["simpNF", "ContinuousLinearEquiv.coe_toSpanNonzeroSingleton_symm"],
 ["simpNF", "ContinuousLinearEquiv.compContinuousMultilinearMapL_apply"],
 ["simpNF", "ContinuousLinearEquiv.coord_norm"],
 ["simpNF", "ContinuousLinearEquiv.coord_self"],
 ["simpNF", "ContinuousLinearEquiv.coord_toSpanNonzeroSingleton"],
 ["simpNF", "ContinuousLinearEquiv.dimH_image"],
 ["simpNF", "ContinuousLinearEquiv.dimH_preimage"],
 ["simpNF", "ContinuousLinearEquiv.finTwoArrow_apply"],
 ["simpNF", "ContinuousLinearEquiv.finTwoArrow_symm_apply"],
 ["simpNF", "ContinuousLinearEquiv.ofBijective_apply_symm_apply"],
 ["simpNF", "ContinuousLinearEquiv.ofBijective_symm_apply_apply"],
 ["simpNF", "ContinuousLinearEquiv.piFinTwo_apply"],
 ["simpNF", "ContinuousLinearEquiv.piFinTwo_symm_apply"],
 ["simpNF", "ContinuousLinearEquiv.toSpanNonzeroSingleton_coord"],
 ["simpNF", "ContinuousLinearEquiv.uniqueDiffOn_image_iff"],
 ["simpNF", "ContinuousLinearEquiv.uniqueDiffOn_preimage_iff"],
 ["simpNF", "ContinuousLinearMap.adjointAux_apply"],
 ["simpNF", "ContinuousLinearMap.adjointAux_norm"],
 ["simpNF", "ContinuousLinearMap.adjoint_adjoint"],
 ["simpNF", "ContinuousLinearMap.adjoint_comp"],
 ["simpNF", "ContinuousLinearMap.adjoint_id"],
 ["simpNF", "ContinuousLinearMap.apply_apply"],
 ["simpNF", "ContinuousLinearMap.apply_apply'"],
 ["simpNF", "ContinuousLinearMap.bilinearComp_apply"],
 ["simpNF", "ContinuousLinearMap.coeFn_ofIsClosedGraph"],
 ["simpNF", "ContinuousLinearMap.coeFn_ofSeqClosedGraph"],
 ["simpNF", "ContinuousLinearMap.coe_deriv₂"],
 ["simpNF", "ContinuousLinearMap.coe_equivRange"],
 ["simpNF", "ContinuousLinearMap.coe_flipₗᵢ"],
 ["simpNF", "ContinuousLinearMap.coe_flipₗᵢ'"],
 ["simpNF", "ContinuousLinearMap.coe_mkOfIsCompactOperator"],
 ["simpNF", "ContinuousLinearMap.coe_mulₗᵢ"],
 ["simpNF", "ContinuousLinearMap.coe_pi"],
 ["simpNF", "ContinuousLinearMap.coe_pi'"],
 ["simpNF", "ContinuousLinearMap.coe_restrictScalarsIsometry"],
 ["simpNF", "ContinuousLinearMap.coe_restrict_scalarsL'"],
 ["simpNF", "ContinuousLinearMap.coe_smul'"],
 ["simpNF", "ContinuousLinearMap.coe_sub'"],
 ["simpNF", "ContinuousLinearMap.coe_sum"],
 ["simpNF", "ContinuousLinearMap.coe_sum'"],
 ["simpNF", "ContinuousLinearMap.compL_apply"],
 ["simpNF", "ContinuousLinearMap.compLeftContinuousBounded_apply"],
 ["simpNF", "ContinuousLinearMap.compLeftContinuousCompact_apply"],
 ["simpNF", "ContinuousLinearMap.compSL_apply"],
 ["simpNF", "ContinuousLinearMap.deriv"],
 ["simpNF", "ContinuousLinearMap.differentiable"],
 ["simpNF", "ContinuousLinearMap.differentiableAt"],
 ["simpNF", "ContinuousLinearMap.equivProdOfSurjectiveOfIsCompl_apply"],
 ["simpNF", "ContinuousLinearMap.extend_eq"],
 ["simpNF", "ContinuousLinearMap.fderiv"],
 ["simpNF", "ContinuousLinearMap.flipMultilinear_apply_apply"],
 ["simpNF", "ContinuousLinearMap.flip_apply"],
 ["simpNF", "ContinuousLinearMap.fpowerSeriesBilinear_apply_one"],
 ["simpNF", "ContinuousLinearMap.fpowerSeriesBilinear_apply_zero"],
 ["simpNF", "ContinuousLinearMap.fpowerSeries_apply_one"],
 ["simpNF", "ContinuousLinearMap.fpowerSeries_apply_zero"],
 ["simpNF", "ContinuousLinearMap.inverse_equiv"],
 ["simpNF", "ContinuousLinearMap.inverse_non_equiv"],
 ["simpNF", "ContinuousLinearMap.lsmul_apply"],
 ["simpNF", "ContinuousLinearMap.mulLeftRight_apply"],
 ["simpNF", "ContinuousLinearMap.mul_apply'"],
 ["simpNF", "ContinuousLinearMap.norm_smulRightL"],
 ["simpNF", "ContinuousLinearMap.norm_smulRightL_apply"],
 ["simpNF", "ContinuousLinearMap.ofMemClosureImageCoeBounded_apply"],
 ["simpNF", "ContinuousLinearMap.ofTendstoOfBoundedRange_apply"],
 ["simpNF", "ContinuousLinearMap.op_nnnorm_mul_apply"],
 ["simpNF", "ContinuousLinearMap.op_norm_mul_apply"],
 ["simpNF", "ContinuousLinearMap.op_norm_mul_apply_le"],
 ["simpNF", "ContinuousLinearMap.postcomp_apply"],
 ["simpNF", "ContinuousLinearMap.postcomp_toFun"],
 ["simpNF", "ContinuousLinearMap.precompR_apply"],
 ["simpNF", "ContinuousLinearMap.precomp_apply"],
 ["simpNF", "ContinuousLinearMap.precomp_toFun"],
 ["simpNF", "ContinuousLinearMap.prodMapL_apply"],
 ["simpNF", "ContinuousLinearMap.ring_inverse_equiv"],
 ["simpNF", "ContinuousLinearMap.toContinuousLinearEquivOfDetNeZero_apply"],
 ["simpNF", "ContinuousLinearMap.toSesqForm_apply_coe"],
 ["simpNF", "ContinuousLinearMap.uncurryBilinear_apply"],
 ["simpNF", "ContinuousLinearMap.uncurryLeft_apply"],
 ["simpNF", "ContinuousMap.addEquivBoundedOfCompact_apply"],
 ["simpNF", "ContinuousMap.addEquivBoundedOfCompact_symm_apply"],
 ["simpNF", "ContinuousMap.addUnitsLift_apply_neg_apply"],
 ["simpNF", "ContinuousMap.addUnitsLift_symm_apply_apply_neg'"],
 ["simpNF", "ContinuousMap.attachBound_apply_coe"],
 ["simpNF", "ContinuousMap.coeNNRealReal_apply"],
 ["simpNF", "ContinuousMap.coe_abs"],
 ["simpNF", "ContinuousMap.coe_add"],
 ["simpNF", "ContinuousMap.coe_addRight"],
 ["simpNF", "ContinuousMap.coe_div"],
 ["simpNF", "ContinuousMap.coe_inf"],
 ["simpNF", "ContinuousMap.coe_inf'"],
 ["simpNF", "ContinuousMap.coe_int_cast"],
 ["simpNF", "ContinuousMap.coe_inv"],
 ["simpNF", "ContinuousMap.coe_mabs"],
 ["simpNF", "ContinuousMap.coe_mul"],
 ["simpNF", "ContinuousMap.coe_mulRight"],
 ["simpNF", "ContinuousMap.coe_nat_cast"],
 ["simpNF", "ContinuousMap.coe_neg"],
 ["simpNF", "ContinuousMap.coe_pow"],
 ["simpNF", "ContinuousMap.coe_prod"],
 ["simpNF", "ContinuousMap.coe_smul"],
 ["simpNF", "ContinuousMap.coe_star"],
 ["simpNF", "ContinuousMap.coe_sub"],
 ["simpNF", "ContinuousMap.coe_sum"],
 ["simpNF", "ContinuousMap.coe_sup"],
 ["simpNF", "ContinuousMap.coe_sup'"],
 ["simpNF", "ContinuousMap.coe_toLp"],
 ["simpNF", "ContinuousMap.coe_vadd"],
 ["simpNF", "ContinuousMap.coe_zpow"],
 ["simpNF", "ContinuousMap.compRightContinuousMap_apply"],
 ["simpNF", "ContinuousMap.equivBoundedOfCompact_apply"],
 ["simpNF", "ContinuousMap.equivBoundedOfCompact_symm_apply"],
 ["simpNF", "ContinuousMap.isometryEquivBoundedOfCompact_apply"],
 ["simpNF", "ContinuousMap.isometryEquivBoundedOfCompact_symm_apply"],
 ["simpNF", "ContinuousMap.linearIsometryBoundedOfCompact_apply_apply"],
 ["simpNF", "ContinuousMap.linearIsometryBoundedOfCompact_symm_apply"],
 ["simpNF", "ContinuousMap.mem_idealOfSet_compl_singleton"],
 ["simpNF", "ContinuousMap.pi_eval"],
 ["simpNF", "ContinuousMap.toLp_comp_toContinuousMap"],
 ["simpNF", "ContinuousMap.uncurry_apply"],
 ["simpNF", "ContinuousMap.unitsLift_apply_inv_apply"],
 ["simpNF", "ContinuousMap.unitsLift_symm_apply_apply_inv'"],
 ["simpNF", "ContinuousMap.unitsOfForallIsUnit_apply"],
 ["simpNF", "ContinuousMap.val_addUnitsLift_apply_apply"],
 ["simpNF", "ContinuousMap.val_addUnitsLift_symm_apply_apply"],
 ["simpNF", "ContinuousMap.val_unitsLift_apply_apply"],
 ["simpNF", "ContinuousMap.val_unitsLift_symm_apply_apply"],
 ["simpNF", "ContinuousMonoidHom.comp_toFun"],
 ["simpNF", "ContinuousMonoidHom.coprod_toFun"],
 ["simpNF", "ContinuousMonoidHom.diag_toFun"],
 ["simpNF", "ContinuousMonoidHom.fst_toFun"],
 ["simpNF", "ContinuousMonoidHom.id_toFun"],
 ["simpNF", "ContinuousMonoidHom.inl_toFun"],
 ["simpNF", "ContinuousMonoidHom.inr_toFun"],
 ["simpNF", "ContinuousMonoidHom.inv_toFun"],
 ["simpNF", "ContinuousMonoidHom.mul_toFun"],
 ["simpNF", "ContinuousMonoidHom.one_toFun"],
 ["simpNF", "ContinuousMonoidHom.prod_map_toFun"],
 ["simpNF", "ContinuousMonoidHom.prod_toFun"],
 ["simpNF", "ContinuousMonoidHom.snd_toFun"],
 ["simpNF", "ContinuousMonoidHom.swap_toFun"],
 ["simpNF", "ContinuousMultilinearMap.apply_zero_curry0"],
 ["simpNF", "ContinuousMultilinearMap.coe_pi"],
 ["simpNF", "ContinuousMultilinearMap.compAlongComposition_apply"],
 ["simpNF", "ContinuousMultilinearMap.compContinuousLinearMapEquivL_apply"],
 ["simpNF", "ContinuousMultilinearMap.compContinuousLinearMapEquivL_symm"],
 ["simpNF", "ContinuousMultilinearMap.compContinuousLinearMapL_apply"],
 ["simpNF", "ContinuousMultilinearMap.compContinuousLinearMap_apply"],
 ["simpNF", "ContinuousMultilinearMap.curry0_apply"],
 ["simpNF", "ContinuousMultilinearMap.curryFinFinset_apply"],
 ["simpNF", "ContinuousMultilinearMap.curryFinFinset_symm_apply"],
 ["simpNF", "ContinuousMultilinearMap.curryFinFinset_symm_apply_const"],
 ["simpNF", "ContinuousMultilinearMap.curryLeft_apply"],
 ["simpNF", "ContinuousMultilinearMap.curryRight_apply"],
 ["simpNF", "ContinuousMultilinearMap.currySum_apply"],
 ["simpNF", "ContinuousMultilinearMap.domDomCongr_apply"],
 ["simpNF", "ContinuousMultilinearMap.fin0_apply_norm"],
 ["simpNF", "ContinuousMultilinearMap.mkPiField_apply"],
 ["simpNF", "ContinuousMultilinearMap.nnnorm_ofSubsingleton"],
 ["simpNF", "ContinuousMultilinearMap.norm_ofSubsingleton"],
 ["simpNF", "ContinuousMultilinearMap.ofSubsingleton_symm_apply_apply"],
 ["simpNF", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_apply"],
 ["simpNF", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_symm_apply"],
 ["simpNF", "ContinuousMultilinearMap.sum_apply"],
 ["simpNF", "ContinuousMultilinearMap.uncurry0_apply"],
 ["simpNF", "ContinuousMultilinearMap.uncurryRight_apply"],
 ["simpNF", "ContinuousMultilinearMap.uncurrySum_apply"],
 ["simpNF", "ConvexCone.coe_sInf"],
 ["simpNF", "ConvexCone.mem_add"],
 ["simpNF", "ConvexCone.mem_map"],
 ["simpNF", "Ctop.mem_nhds_toTopsp"],
 ["simpNF", "CuspForm.add_apply"],
 ["simpNF", "CuspForm.coeHom_apply"],
 ["simpNF", "CuspForm.coe_add"],
 ["simpNF", "CuspForm.coe_neg"],
 ["simpNF", "CuspForm.coe_smul"],
 ["simpNF", "CuspForm.coe_sub"],
 ["simpNF", "CuspForm.coe_zero"],
 ["simpNF", "CuspForm.neg_apply"],
 ["simpNF", "CuspForm.smul_apply"],
 ["simpNF", "CuspForm.sub_apply"],
 ["simpNF", "CuspForm.toSlashInvariantForm_coe"],
 ["simpNF", "CuspForm.zero_apply"],
 ["simpNF", "Cycle.mem_coe_iff"],
 ["simpNF", "Cycle.mem_map"],
 ["simpNF", "DFinsupp.add_closure_iUnion_range_single"],
 ["simpNF", "DFinsupp.card_pi"],
 ["simpNF", "DFinsupp.coe_add"],
 ["simpNF", "DFinsupp.coe_finset_sum"],
 ["simpNF", "DFinsupp.coe_inf"],
 ["simpNF", "DFinsupp.coe_neLocus"],
 ["simpNF", "DFinsupp.coe_neg"],
 ["simpNF", "DFinsupp.coe_smul"],
 ["simpNF", "DFinsupp.coe_sub"],
 ["simpNF", "DFinsupp.coe_sup"],
 ["simpNF", "DFinsupp.coe_tsub"],
 ["simpNF", "DFinsupp.coe_zsmul"],
 ["simpNF", "DFinsupp.comapDomain'_smul"],
 ["simpNF", "DFinsupp.comapDomain_smul"],
 ["simpNF", "DFinsupp.filter_ne_eq_erase"],
 ["simpNF", "DFinsupp.filter_ne_eq_erase'"],
 ["simpNF", "DFinsupp.finset_sum_apply"],
 ["simpNF", "DFinsupp.lsum_apply_apply"],
 ["simpNF", "DFinsupp.mapRange_id"],
 ["simpNF", "DFinsupp.mem_pi"],
 ["simpNF", "DFinsupp.mk_add"],
 ["simpNF", "DFinsupp.mk_neg"],
 ["simpNF", "DFinsupp.mk_smul"],
 ["simpNF", "DFinsupp.mk_sub"],
 ["simpNF", "DFinsupp.prod_eq_prod_fintype"],
 ["simpNF", "DFinsupp.prod_eq_zero_iff"],
 ["simpNF", "DFinsupp.prod_inv"],
 ["simpNF", "DFinsupp.prod_mul"],
 ["simpNF", "DFinsupp.prod_one"],
 ["simpNF", "DFinsupp.sigmaCurry_smul"],
 ["simpNF", "DFinsupp.sigmaUncurry_smul"],
 ["simpNF", "DFinsupp.single_le_iff"],
 ["simpNF", "DFinsupp.subtypeDomain_smul"],
 ["simpNF", "DFinsupp.subtypeSupportEqEquiv_symm_apply_coe"],
 ["simpNF", "DFinsupp.sumAddHom_add"],
 ["simpNF", "DFinsupp.sumAddHom_zero"],
 ["simpNF", "DFinsupp.sum_add"],
 ["simpNF", "DFinsupp.sum_apply"],
 ["simpNF", "DFinsupp.sum_eq_sum_fintype"],
 ["simpNF", "DFinsupp.sum_neg"],
 ["simpNF", "DFinsupp.sum_zero"],
 ["simpNF", "DFinsupp.support_filter"],
 ["simpNF", "DFinsupp.support_inf"],
 ["simpNF", "DFinsupp.support_sup"],
 ["simpNF", "DFinsupp.toFinsupp_smul"],
 ["simpNF", "DFinsupp.toMultiset_inf"],
 ["simpNF", "DFinsupp.toMultiset_le_toMultiset"],
 ["simpNF", "DFinsupp.toMultiset_lt_toMultiset"],
 ["simpNF", "DFinsupp.toMultiset_sup"],
 ["simpNF", "DMatrix.map_map"],
 ["simpNF", "DMatrix.map_zero"],
 ["simpNF", "Denumerable.decode_eq_ofNat"],
 ["simpNF", "Denumerable.encode_ofNat"],
 ["simpNF", "Denumerable.list_ofNat_succ"],
 ["simpNF", "Denumerable.list_ofNat_zero"],
 ["simpNF", "Denumerable.ofEquiv_ofNat"],
 ["simpNF", "Denumerable.ofNat_encode"],
 ["simpNF", "Denumerable.ofNat_nat"],
 ["simpNF", "Denumerable.ofNat_of_decode"],
 ["simpNF", "Denumerable.sigma_ofNat_val"],
 ["simpNF", "Derivation.coe_add"],
 ["simpNF", "Derivation.coe_neg"],
 ["simpNF", "Derivation.coe_smul"],
 ["simpNF", "Derivation.coe_sub"],
 ["simpNF", "Diffeomorph.apply_symm_apply"],
 ["simpNF", "Diffeomorph.coe_coe"],
 ["simpNF", "Diffeomorph.coe_prodComm"],
 ["simpNF", "Diffeomorph.coe_prodCongr"],
 ["simpNF", "Diffeomorph.coe_refl"],
 ["simpNF", "Diffeomorph.coe_toEquiv"],
 ["simpNF", "Diffeomorph.coe_toHomeomorph"],
 ["simpNF", "Diffeomorph.coe_toHomeomorph_symm"],
 ["simpNF", "Diffeomorph.coe_trans"],
 ["simpNF", "Diffeomorph.contMDiffAt_comp_diffeomorph_iff"],
 ["simpNF", "Diffeomorph.contMDiffAt_diffeomorph_comp_iff"],
 ["simpNF", "Diffeomorph.contMDiffOn_comp_diffeomorph_iff"],
 ["simpNF", "Diffeomorph.contMDiffOn_diffeomorph_comp_iff"],
 ["simpNF", "Diffeomorph.contMDiffWithinAt_comp_diffeomorph_iff"],
 ["simpNF", "Diffeomorph.contMDiffWithinAt_diffeomorph_comp_iff"],
 ["simpNF", "Diffeomorph.contMDiff_comp_diffeomorph_iff"],
 ["simpNF", "Diffeomorph.contMDiff_diffeomorph_comp_iff"],
 ["simpNF", "Diffeomorph.image_symm_image"],
 ["simpNF", "Diffeomorph.range_comp"],
 ["simpNF", "Diffeomorph.symm_apply_apply"],
 ["simpNF", "Diffeomorph.symm_image_image"],
 ["simpNF", "Diffeomorph.toEquiv_coe_symm"],
 ["simpNF", "Diffeomorph.uniqueDiffOn_image"],
 ["simpNF", "Diffeomorph.uniqueDiffOn_preimage"],
 ["simpNF", "Diffeomorph.uniqueMDiffOn_image"],
 ["simpNF", "Diffeomorph.uniqueMDiffOn_preimage"],
 ["simpNF", "Differentiable.add"],
 ["simpNF", "Differentiable.arctan"],
 ["simpNF", "Differentiable.ccos"],
 ["simpNF", "Differentiable.ccosh"],
 ["simpNF", "Differentiable.cexp"],
 ["simpNF", "Differentiable.cos"],
 ["simpNF", "Differentiable.cosh"],
 ["simpNF", "Differentiable.csin"],
 ["simpNF", "Differentiable.csinh"],
 ["simpNF", "Differentiable.div"],
 ["simpNF", "Differentiable.div_const"],
 ["simpNF", "Differentiable.exp"],
 ["simpNF", "Differentiable.fst"],
 ["simpNF", "Differentiable.inv"],
 ["simpNF", "Differentiable.inv'"],
 ["simpNF", "Differentiable.inverse"],
 ["simpNF", "Differentiable.log"],
 ["simpNF", "Differentiable.mul"],
 ["simpNF", "Differentiable.pow"],
 ["simpNF", "Differentiable.prod"],
 ["simpNF", "Differentiable.sin"],
 ["simpNF", "Differentiable.sinh"],
 ["simpNF", "Differentiable.smul"],
 ["simpNF", "Differentiable.snd"],
 ["simpNF", "Differentiable.sub"],
 ["simpNF", "Differentiable.sum"],
 ["simpNF", "DifferentiableAt.add"],
 ["simpNF", "DifferentiableAt.arctan"],
 ["simpNF", "DifferentiableAt.ccos"],
 ["simpNF", "DifferentiableAt.ccosh"],
 ["simpNF", "DifferentiableAt.cexp"],
 ["simpNF", "DifferentiableAt.cos"],
 ["simpNF", "DifferentiableAt.cosh"],
 ["simpNF", "DifferentiableAt.csin"],
 ["simpNF", "DifferentiableAt.csinh"],
 ["simpNF", "DifferentiableAt.div"],
 ["simpNF", "DifferentiableAt.div_const"],
 ["simpNF", "DifferentiableAt.exp"],
 ["simpNF", "DifferentiableAt.fst"],
 ["simpNF", "DifferentiableAt.inv"],
 ["simpNF", "DifferentiableAt.inv'"],
 ["simpNF", "DifferentiableAt.inverse"],
 ["simpNF", "DifferentiableAt.log"],
 ["simpNF", "DifferentiableAt.mul"],
 ["simpNF", "DifferentiableAt.pow"],
 ["simpNF", "DifferentiableAt.prod"],
 ["simpNF", "DifferentiableAt.prod_map"],
 ["simpNF", "DifferentiableAt.rpow_const"],
 ["simpNF", "DifferentiableAt.sin"],
 ["simpNF", "DifferentiableAt.sinh"],
 ["simpNF", "DifferentiableAt.smul"],
 ["simpNF", "DifferentiableAt.snd"],
 ["simpNF", "DifferentiableAt.sub"],
 ["simpNF", "DifferentiableAt.sum"],
 ["simpNF", "DihedralGroup.OddCommuteEquiv_apply"],
 ["simpNF", "DihedralGroup.OddCommuteEquiv_symm_apply"],
 ["simpNF", "Dilation.cancel_left"],
 ["simpNF", "Dilation.cancel_right"],
 ["simpNF", "Dilation.coe_comp"],
 ["simpNF", "Dilation.coe_id"],
 ["simpNF", "Dilation.coe_mk"],
 ["simpNF", "Dilation.coe_mkOfDistEq"],
 ["simpNF", "Dilation.coe_mkOfNNDistEq"],
 ["simpNF", "Dilation.coe_mul"],
 ["simpNF", "Dilation.coe_one"],
 ["simpNF", "Dilation.comap_cobounded"],
 ["simpNF", "Dilation.copy_toFun"],
 ["simpNF", "Dilation.dist_eq"],
 ["simpNF", "Dilation.edist_eq"],
 ["simpNF", "Dilation.mk_coe"],
 ["simpNF", "Dilation.mk_coe_of_dist_eq"],
 ["simpNF", "Dilation.mk_coe_of_nndist_eq"],
 ["simpNF", "Dilation.nndist_eq"],
 ["simpNF", "Dilation.ratioHom_apply"],
 ["simpNF", "Dilation.toFun_eq_coe"],
 ["simpNF", "DilationEquiv.apply_symm_apply"],
 ["simpNF", "DilationEquiv.coe_mul"],
 ["simpNF", "DilationEquiv.coe_one"],
 ["simpNF", "DilationEquiv.coe_toEquiv"],
 ["simpNF", "DilationEquiv.map_cobounded"],
 ["simpNF", "DilationEquiv.mulLeft_apply"],
 ["simpNF", "DilationEquiv.mulLeft_symm_apply"],
 ["simpNF", "DilationEquiv.mulRight_apply"],
 ["simpNF", "DilationEquiv.mulRight_symm_apply"],
 ["simpNF", "DilationEquiv.refl_apply"],
 ["simpNF", "DilationEquiv.symm_apply_apply"],
 ["simpNF", "DilationEquiv.toPerm_apply"],
 ["simpNF", "DilationEquiv.trans_apply"],
 ["simpNF", "DirectSum.decompose_smul"],
 ["simpNF", "DirectSum.decompose_sum"],
 ["simpNF", "DirectSum.decompose_symm_sum"],
 ["simpNF", "DirectSum.isInternal_ne_bot_iff"],
 ["simpNF", "DirectSum.linearEquivFunOnFintype_lof"],
 ["simpNF", "DirectSum.linearEquivFunOnFintype_symm_single"],
 ["simpNF", "DirectSum.toAlgebra_apply"],
 ["simpNF", "DirectSum.toLieAlgebra_apply"],
 ["simpNF", "DirichletCharacter.unit_norm_eq_one"],
 ["simpNF", "DomAddAct.dist_vadd_Lp"],
 ["simpNF", "DomAddAct.mk_vadd_mk_aeeqFun"],
 ["simpNF", "DomAddAct.vadd_Lp_const"],
 ["simpNF", "DomAddAct.vadd_Lp_val"],
 ["simpNF", "DomMulAct.mk_smul_mk_aeeqFun"],
 ["simpNF", "DomMulAct.smul_Lp_const"],
 ["simpNF", "DomMulAct.smul_Lp_val"],
 ["simpNF", "DoubleCentralizer.algebraMap_toProd"],
 ["simpNF", "DoubleCentralizer.coeHom_apply"],
 ["simpNF", "DoubleCentralizer.coe_fst"],
 ["simpNF", "DoubleCentralizer.coe_snd"],
 ["simpNF", "DoubleCentralizer.star_fst"],
 ["simpNF", "DoubleCentralizer.star_snd"],
 ["simpNF", "DoubleCentralizer.toProdHom_apply"],
 ["simpNF", "DoubleCentralizer.toProdMulOppositeHom_apply"],
 ["simpNF", "EMetric.preimage_add_right_ball"],
 ["simpNF", "EMetric.preimage_add_right_closedBall"],
 ["simpNF", "EMetric.preimage_mul_right_ball"],
 ["simpNF", "EMetric.preimage_mul_right_closedBall"],
 ["simpNF", "ENNReal.coe_finset_prod"],
 ["simpNF", "ENNReal.coe_finset_sum"],
 ["simpNF", "ENNReal.coe_finset_sup"],
 ["simpNF", "ENNReal.coe_indicator"],
 ["simpNF", "ENNReal.iInter_Ici_coe_nat"],
 ["simpNF", "ENNReal.iInter_Ioi_coe_nat"],
 ["simpNF", "ENNReal.iSup_eq_zero"],
 ["simpNF", "ENNReal.iUnion_Icc_coe_nat"],
 ["simpNF", "ENNReal.iUnion_Ico_coe_nat"],
 ["simpNF", "ENNReal.iUnion_Iic_coe_nat"],
 ["simpNF", "ENNReal.iUnion_Iio_coe_nat"],
 ["simpNF", "ENNReal.iUnion_Ioc_coe_nat"],
 ["simpNF", "ENNReal.iUnion_Ioo_coe_nat"],
 ["simpNF", "ENNReal.orderIsoRpow_apply"],
 ["simpNF", "ENNReal.tendsto_coe_nhds_top"],
 ["simpNF", "ENNReal.tendsto_inv_iff"],
 ["simpNF", "ENNReal.toNNReal_prod"],
 ["simpNF", "ENNReal.toReal_prod"],
 ["simpNF", "ENNReal.tsum_eq_zero"],
 ["simpNF", "ENNReal.tsum_iSup_eq"],
 ["simpNF", "ENNReal.tsum_top"],
 ["simpNF", "ENorm.coe_max"],
 ["simpNF", "Encodable.decode_list_succ"],
 ["simpNF", "Encodable.decode_prod_val"],
 ["simpNF", "Encodable.decode_sigma_val"],
 ["simpNF", "Encodable.mem_sortedUniv"],
 ["simpNF", "Equiv.coe_addRight"],
 ["simpNF", "Equiv.coe_constVSub_symm"],
 ["simpNF", "Equiv.coe_mulRight"],
 ["simpNF", "Equiv.coe_piCongr'"],
 ["simpNF", "Equiv.coe_piCongr_symm"],
 ["simpNF", "Equiv.coe_subtypeEquivCodomain"],
 ["simpNF", "Equiv.coe_vaddConst"],
 ["simpNF", "Equiv.coe_vaddConst_symm"],
 ["simpNF", "Equiv.funSplitAt_apply"],
 ["simpNF", "Equiv.funUnique_apply"],
 ["simpNF", "Equiv.mulRight₀_apply"],
 ["simpNF", "Equiv.mulRight₀_symm_apply"],
 ["simpNF", "Equiv.mul_swap_involutive"],
 ["simpNF", "Equiv.piEquivPiSubtypeProd_apply"],
 ["simpNF", "Equiv.piFinSuccAbove_apply"],
 ["simpNF", "Equiv.piFinSuccAbove_symm_apply"],
 ["simpNF", "Equiv.piFinSucc_apply"],
 ["simpNF", "Equiv.piFinSucc_symm_apply"],
 ["simpNF", "Equiv.piOptionEquivProd_apply"],
 ["simpNF", "Equiv.piSplitAt_apply"],
 ["simpNF", "Equiv.piUnique_apply"],
 ["simpNF", "Equiv.prodShear_apply"],
 ["simpNF", "Equiv.prodShear_symm_apply"],
 ["simpNF", "Equiv.sigmaSumDistrib_symm_apply"],
 ["simpNF", "Equiv.sumPiEquivProdPi_apply"],
 ["simpNF", "Erased.bind_def"],
 ["simpNF", "EuclideanGeometry.orthogonalProjectionFn_eq"],
 ["simpNF", "EuclideanGeometry.orthogonalProjection_mem_subspace_eq_self"],
 ["simpNF", "EuclideanGeometry.reflection_reflection"],
 ["simpNF", "EuclideanSpace.basisFun_apply"],
 ["simpNF", "EuclideanSpace.basisFun_repr"],
 ["simpNF", "EuclideanSpace.dist_single_same"],
 ["simpNF", "EuclideanSpace.edist_single_same"],
 ["simpNF", "EuclideanSpace.norm_single"],
 ["simpNF", "EuclideanSpace.proj_apply"],
 ["simpNF", "EuclideanSpace.projₗ_apply"],
 ["simpNF", "ExteriorAlgebra.liftAlternating_algebraMap"],
 ["simpNF", "ExteriorAlgebra.liftAlternating_apply_ιMulti"],
 ["simpNF", "ExteriorAlgebra.liftAlternating_comp"],
 ["simpNF", "ExteriorAlgebra.liftAlternating_one"],
 ["simpNF", "ExteriorAlgebra.liftAlternating_ι"],
 ["simpNF", "ExteriorAlgebra.lift_unique"],
 ["simpNF", "ExteriorAlgebra.ιMulti_succ_apply"],
 ["simpNF", "ExteriorAlgebra.ιMulti_zero_apply"],
 ["simpNF", "FdRep.char_tensor'"],
 ["simpNF", "Filter.add_pure"],
 ["simpNF", "Filter.biInter_finset_mem"],
 ["simpNF", "Filter.biInter_mem"],
 ["simpNF", "Filter.bliminf_false"],
 ["simpNF", "Filter.bliminf_inf_not"],
 ["simpNF", "Filter.bliminf_not_inf"],
 ["simpNF", "Filter.bliminf_or_eq_inf"],
 ["simpNF", "Filter.bliminf_or_le_inf_aux_left"],
 ["simpNF", "Filter.bliminf_or_le_inf_aux_right"],
 ["simpNF", "Filter.bliminf_sup_le_and_aux_left"],
 ["simpNF", "Filter.bliminf_sup_le_and_aux_right"],
 ["simpNF", "Filter.bliminf_sup_le_inf_aux_left"],
 ["simpNF", "Filter.bliminf_sup_le_inf_aux_right"],
 ["simpNF", "Filter.bliminf_sup_le_or_aux_left"],
 ["simpNF", "Filter.bliminf_sup_le_or_aux_right"],
 ["simpNF", "Filter.bliminf_true"],
 ["simpNF", "Filter.blimsup_false"],
 ["simpNF", "Filter.blimsup_not_sup"],
 ["simpNF", "Filter.blimsup_or_eq_sup"],
 ["simpNF", "Filter.blimsup_sup_not"],
 ["simpNF", "Filter.blimsup_true"],
 ["simpNF", "Filter.comap_mul_right_cobounded"],
 ["simpNF", "Filter.coprodᵢ_bot"],
 ["simpNF", "Filter.coprodᵢ_bot'"],
 ["simpNF", "Filter.coprodᵢ_eq_bot_iff"],
 ["simpNF", "Filter.coprodᵢ_neBot_iff"],
 ["simpNF", "Filter.div_pure"],
 ["simpNF", "Filter.eventuallyEq_bind"],
 ["simpNF", "Filter.eventuallyLE_bind"],
 ["simpNF", "Filter.eventually_all"],
 ["simpNF", "Filter.eventually_all_finite"],
 ["simpNF", "Filter.eventually_all_finset"],
 ["simpNF", "Filter.eventually_and"],
 ["simpNF", "Filter.eventually_atBot"],
 ["simpNF", "Filter.eventually_atTop"],
 ["simpNF", "Filter.eventually_bind"],
 ["simpNF", "Filter.eventually_cofinite"],
 ["simpNF", "Filter.eventually_comap"],
 ["simpNF", "Filter.eventually_const"],
 ["simpNF", "Filter.eventually_false_iff_eq_bot"],
 ["simpNF", "Filter.eventually_iSup"],
 ["simpNF", "Filter.eventually_map"],
 ["simpNF", "Filter.eventually_mem_set"],
 ["simpNF", "Filter.eventually_or_distrib_left"],
 ["simpNF", "Filter.eventually_or_distrib_right"],
 ["simpNF", "Filter.eventually_principal"],
 ["simpNF", "Filter.eventually_sSup"],
 ["simpNF", "Filter.eventually_smallSets_eventually"],
 ["simpNF", "Filter.eventually_smallSets_forall"],
 ["simpNF", "Filter.eventually_smallSets_subset"],
 ["simpNF", "Filter.eventually_top"],
 ["simpNF", "Filter.eventually_true"],
 ["simpNF", "Filter.frequently_and_distrib_left"],
 ["simpNF", "Filter.frequently_and_distrib_right"],
 ["simpNF", "Filter.frequently_comap"],
 ["simpNF", "Filter.frequently_const"],
 ["simpNF", "Filter.frequently_false"],
 ["simpNF", "Filter.frequently_iSup"],
 ["simpNF", "Filter.frequently_map"],
 ["simpNF", "Filter.frequently_or_distrib"],
 ["simpNF", "Filter.frequently_principal"],
 ["simpNF", "Filter.frequently_sSup"],
 ["simpNF", "Filter.frequently_true_iff_neBot"],
 ["simpNF", "Filter.iInf_principal"],
 ["simpNF", "Filter.iInf_principal_finset"],
 ["simpNF", "Filter.iInter_mem"],
 ["simpNF", "Filter.isBoundedUnder_ge_inf"],
 ["simpNF", "Filter.isBoundedUnder_ge_inv"],
 ["simpNF", "Filter.isBoundedUnder_ge_neg"],
 ["simpNF", "Filter.isBoundedUnder_le_inv"],
 ["simpNF", "Filter.isBoundedUnder_le_neg"],
 ["simpNF", "Filter.isBoundedUnder_le_sup"],
 ["simpNF", "Filter.isUnit_iff_singleton"],
 ["simpNF", "Filter.ker_sInf"],
 ["simpNF", "Filter.le_add_iff"],
 ["simpNF", "Filter.le_div_iff"],
 ["simpNF", "Filter.le_map₂_iff"],
 ["simpNF", "Filter.le_mul_iff"],
 ["simpNF", "Filter.le_smul_iff"],
 ["simpNF", "Filter.le_sub_iff"],
 ["simpNF", "Filter.le_vadd_iff"],
 ["simpNF", "Filter.le_vsub_iff"],
 ["simpNF", "Filter.lift_const"],
 ["simpNF", "Filter.lift_inf"],
 ["simpNF", "Filter.map_id'"],
 ["simpNF", "Filter.map_mul_right_cobounded"],
 ["simpNF", "Filter.map₂_left"],
 ["simpNF", "Filter.map₂_pure_right"],
 ["simpNF", "Filter.map₂_right"],
 ["simpNF", "Filter.mem_atBot_sets"],
 ["simpNF", "Filter.mem_atTop_sets"],
 ["simpNF", "Filter.mem_bind"],
 ["simpNF", "Filter.mem_comap"],
 ["simpNF", "Filter.mem_iSup"],
 ["simpNF", "Filter.mem_ker"],
 ["simpNF", "Filter.mem_map₂_iff"],
 ["simpNF", "Filter.mem_rcomap'"],
 ["simpNF", "Filter.mem_sSup"],
 ["simpNF", "Filter.mul_pure"],
 ["simpNF", "Filter.not_eventually"],
 ["simpNF", "Filter.not_frequently"],
 ["simpNF", "Filter.pi_eq_bot"],
 ["simpNF", "Filter.pi_inf_principal_pi_eq_bot"],
 ["simpNF", "Filter.pi_inf_principal_pi_neBot"],
 ["simpNF", "Filter.pi_inf_principal_univ_pi_eq_bot"],
 ["simpNF", "Filter.pi_inf_principal_univ_pi_neBot"],
 ["simpNF", "Filter.pi_le_pi"],
 ["simpNF", "Filter.pi_mem_pi_iff"],
 ["simpNF", "Filter.pi_neBot"],
 ["simpNF", "Filter.prod_pure"],
 ["simpNF", "Filter.sInter_mem"],
 ["simpNF", "Filter.seq_pure"],
 ["simpNF", "Filter.smul_pure"],
 ["simpNF", "Filter.sub_pure"],
 ["simpNF", "Filter.subset_ker"],
 ["simpNF", "Filter.tendsto_iInf"],
 ["simpNF", "Filter.tendsto_iSup"],
 ["simpNF", "Filter.tendsto_neg_atBot_iff"],
 ["simpNF", "Filter.tendsto_neg_atTop_iff"],
 ["simpNF", "Filter.tendsto_one"],
 ["simpNF", "Filter.tendsto_pow_atTop_iff"],
 ["simpNF", "Filter.tendsto_principal"],
 ["simpNF", "Filter.tendsto_pure"],
 ["simpNF", "Filter.tendsto_zero"],
 ["simpNF", "Filter.vadd_pure"],
 ["simpNF", "Filter.vsub_pure"],
 ["simpNF", "Fin.addNatEmb_toEmbedding"],
 ["simpNF", "Fin.dist_insertNth_insertNth"],
 ["simpNF", "Fin.exists_succAbove_eq_iff"],
 ["simpNF", "Fin.exists_succ_eq_iff"],
 ["simpNF", "Fin.insertNth_add"],
 ["simpNF", "Fin.insertNth_div"],
 ["simpNF", "Fin.insertNth_mul"],
 ["simpNF", "Fin.insertNth_sub"],
 ["simpNF", "Fin.insertNth_sub_same"],
 ["simpNF", "Fin.nndist_insertNth_insertNth"],
 ["simpNF", "Fin.pred_apply"],
 ["simpNF", "Fin.pred_eq"],
 ["simpNF", "Fin.range_castLE"],
 ["simpNF", "Fin.range_castSucc"],
 ["simpNF", "Fin.range_cons"],
 ["simpNF", "Fin.succ_apply"],
 ["simpNF", "Fin.succ_eq"],
 ["simpNF", "FinEnum.mem_toList"],
 ["simpNF", "FinVec.forall_iff"],
 ["simpNF", "FinVec.seq_eq"],
 ["simpNF", "FiniteDimensional.finrank_directSum"],
 ["simpNF", "FiniteDimensional.finrank_fintype_fun_eq_card"],
 ["simpNF", "FiniteField.sum_subgroup_pow_eq_zero"],
 ["simpNF", "FiniteField.sum_subgroup_units"],
 ["simpNF", "Finmap.sigma_keys_lookup"],
 ["simpNF", "Finpartition.avoid_parts_val"],
 ["simpNF", "Finpartition.bind_parts"],
 ["simpNF", "Finpartition.coe_energy"],
 ["simpNF", "Finpartition.mem_avoid"],
 ["simpNF", "Finpartition.parts_inf"],
 ["simpNF", "Finset.Ico_filter_le"],
 ["simpNF", "Finset.Ico_filter_lt"],
 ["simpNF", "Finset.Iio_filter_lt"],
 ["simpNF", "Finset.Ioo_filter_lt"],
 ["simpNF", "Finset.affineCombination_affineCombinationLineMapWeights"],
 ["simpNF", "Finset.affineCombination_affineCombinationSingleWeights"],
 ["simpNF", "Finset.affineCombination_apply_const"],
 ["simpNF", "Finset.affineCombination_eq_linear_combination"],
 ["simpNF", "Finset.affineCombination_of_eq_one_of_eq_zero"],
 ["simpNF", "Finset.attach_insert"],
 ["simpNF", "Finset.biUnion_nonempty"],
 ["simpNF", "Finset.biUnion_op_smul_finset"],
 ["simpNF", "Finset.biUnion_op_vadd_finset"],
 ["simpNF", "Finset.biUnion_smul_finset"],
 ["simpNF", "Finset.biUnion_subset_iff_forall_subset"],
 ["simpNF", "Finset.biUnion_vadd_finset"],
 ["simpNF", "Finset.biUnion_val"],
 ["simpNF", "Finset.card_dfinsupp"],
 ["simpNF", "Finset.card_disjiUnion"],
 ["simpNF", "Finset.card_finsupp"],
 ["simpNF", "Finset.card_pi"],
 ["simpNF", "Finset.card_sigma"],
 ["simpNF", "Finset.card_subtype"],
 ["simpNF", "Finset.centerMass_neg_left"],
 ["simpNF", "Finset.closure_biUnion"],
 ["simpNF", "Finset.coe_biUnion"],
 ["simpNF", "Finset.coe_bipartiteAbove"],
 ["simpNF", "Finset.coe_bipartiteBelow"],
 ["simpNF", "Finset.coe_disjiUnion"],
 ["simpNF", "Finset.coe_filter"],
 ["simpNF", "Finset.coe_filterMap"],
 ["simpNF", "Finset.coe_prod"],
 ["simpNF", "Finset.coe_sigma"],
 ["simpNF", "Finset.coe_sort_coe"],
 ["simpNF", "Finset.coe_sum"],
 ["simpNF", "Finset.compl_filter"],
 ["simpNF", "Finset.compl_inf"],
 ["simpNF", "Finset.compl_sup"],
 ["simpNF", "Finset.diag_mem_sym2_mem_iff"],
 ["simpNF", "Finset.diffs_singleton"],
 ["simpNF", "Finset.diffs_subset_iff"],
 ["simpNF", "Finset.disjSups_subset_iff"],
 ["simpNF", "Finset.disjiUnion_map_sigma_mk"],
 ["simpNF", "Finset.disjiUnion_val"],
 ["simpNF", "Finset.div_singleton"],
 ["simpNF", "Finset.erase_inter"],
 ["simpNF", "Finset.filter_congr_decidable"],
 ["simpNF", "Finset.filter_const"],
 ["simpNF", "Finset.filter_false_of_mem"],
 ["simpNF", "Finset.filter_subset"],
 ["simpNF", "Finset.filter_true_of_mem"],
 ["simpNF", "Finset.filter_univ_mem"],
 ["simpNF", "Finset.filter_val"],
 ["simpNF", "Finset.fin_map"],
 ["simpNF", "Finset.fmap_def"],
 ["simpNF", "Finset.fold_image"],
 ["simpNF", "Finset.fold_inf_univ"],
 ["simpNF", "Finset.fold_map"],
 ["simpNF", "Finset.fold_sup_univ"],
 ["simpNF", "Finset.forall_mem_not_eq"],
 ["simpNF", "Finset.forall_mem_not_eq'"],
 ["simpNF", "Finset.image_add_right"],
 ["simpNF", "Finset.image_add_right_Icc"],
 ["simpNF", "Finset.image_erase"],
 ["simpNF", "Finset.image_id'"],
 ["simpNF", "Finset.image_insert"],
 ["simpNF", "Finset.image_mul_right"],
 ["simpNF", "Finset.image₂_insert_right"],
 ["simpNF", "Finset.image₂_left"],
 ["simpNF", "Finset.image₂_right"],
 ["simpNF", "Finset.image₂_singleton_right"],
 ["simpNF", "Finset.image₂_subset_iff"],
 ["simpNF", "Finset.inf'_apply"],
 ["simpNF", "Finset.inf'_cons"],
 ["simpNF", "Finset.inf'_const"],
 ["simpNF", "Finset.inf'_image"],
 ["simpNF", "Finset.inf'_insert"],
 ["simpNF", "Finset.inf'_inv"],
 ["simpNF", "Finset.inf'_le_iff"],
 ["simpNF", "Finset.inf'_lt_iff"],
 ["simpNF", "Finset.inf'_map"],
 ["simpNF", "Finset.inf'_neg"],
 ["simpNF", "Finset.inf_apply"],
 ["simpNF", "Finset.inf_biUnion"],
 ["simpNF", "Finset.inf_cons"],
 ["simpNF", "Finset.inf_eq_top_iff"],
 ["simpNF", "Finset.inf_insert"],
 ["simpNF", "Finset.inf_inv"],
 ["simpNF", "Finset.inf_le_iff"],
 ["simpNF", "Finset.inf_lt_iff"],
 ["simpNF", "Finset.inf_neg"],
 ["simpNF", "Finset.inf_set_eq_iInter"],
 ["simpNF", "Finset.inf_top"],
 ["simpNF", "Finset.infs_singleton"],
 ["simpNF", "Finset.infs_subset_iff"],
 ["simpNF", "Finset.interior_iInter"],
 ["simpNF", "Finset.isAddUnit_coe"],
 ["simpNF", "Finset.isAddUnit_iff"],
 ["simpNF", "Finset.isPWO_bUnion"],
 ["simpNF", "Finset.isUnit_coe"],
 ["simpNF", "Finset.isUnit_iff"],
 ["simpNF", "Finset.isUnit_iff_singleton_aux"],
 ["simpNF", "Finset.isWF_bUnion"],
 ["simpNF", "Finset.lcm_dvd_iff"],
 ["simpNF", "Finset.le_inf'_iff"],
 ["simpNF", "Finset.le_inf'_image₂"],
 ["simpNF", "Finset.le_inf_add"],
 ["simpNF", "Finset.le_inf_div"],
 ["simpNF", "Finset.le_inf_iff"],
 ["simpNF", "Finset.le_inf_image₂"],
 ["simpNF", "Finset.le_inf_mul"],
 ["simpNF", "Finset.le_inf_sub"],
 ["simpNF", "Finset.le_min'_iff"],
 ["simpNF", "Finset.le_sup'_iff"],
 ["simpNF", "Finset.le_sup_iff"],
 ["simpNF", "Finset.lt_inf'_iff"],
 ["simpNF", "Finset.lt_inf_iff"],
 ["simpNF", "Finset.lt_min'_iff"],
 ["simpNF", "Finset.lt_sup'_iff"],
 ["simpNF", "Finset.lt_sup_iff"],
 ["simpNF", "Finset.map_comp_coe"],
 ["simpNF", "Finset.max'_le_iff"],
 ["simpNF", "Finset.max'_lt_iff"],
 ["simpNF", "Finset.mem_biUnion"],
 ["simpNF", "Finset.mem_dfinsupp_iff_of_support_subset"],
 ["simpNF", "Finset.mem_diffs"],
 ["simpNF", "Finset.mem_disjSups"],
 ["simpNF", "Finset.mem_disjiUnion"],
 ["simpNF", "Finset.mem_filter"],
 ["simpNF", "Finset.mem_filterMap"],
 ["simpNF", "Finset.mem_finsupp_iff_of_support_subset"],
 ["simpNF", "Finset.mem_image"],
 ["simpNF", "Finset.mem_image₂"],
 ["simpNF", "Finset.mem_infs"],
 ["simpNF", "Finset.mem_insertNone"],
 ["simpNF", "Finset.mem_map"],
 ["simpNF", "Finset.mem_pi"],
 ["simpNF", "Finset.mem_pimage"],
 ["simpNF", "Finset.mem_sort"],
 ["simpNF", "Finset.mem_sups"],
 ["simpNF", "Finset.mem_sym2_iff"],
 ["simpNF", "Finset.mem_sym_iff"],
 ["simpNF", "Finset.mem_toList"],
 ["simpNF", "Finset.memberSubfamily_image_erase"],
 ["simpNF", "Finset.nonempty_Iio"],
 ["simpNF", "Finset.nonempty_Ioi"],
 ["simpNF", "Finset.ofDual_inf'"],
 ["simpNF", "Finset.ofDual_sup'"],
 ["simpNF", "Finset.op_sum"],
 ["simpNF", "Finset.pairwiseDisjoint_coe"],
 ["simpNF", "Finset.partiallyWellOrderedOn_bUnion"],
 ["simpNF", "Finset.pi_insert"],
 ["simpNF", "Finset.pi_nonempty"],
 ["simpNF", "Finset.pi_val"],
 ["simpNF", "Finset.piecewise_erase_univ"],
 ["simpNF", "Finset.pimage_some"],
 ["simpNF", "Finset.preimage_add_right_singleton"],
 ["simpNF", "Finset.preimage_add_right_zero"],
 ["simpNF", "Finset.preimage_mul_right_one"],
 ["simpNF", "Finset.preimage_mul_right_singleton"],
 ["simpNF", "Finset.prod_Ico_id_eq_factorial"],
 ["simpNF", "Finset.prod_apply"],
 ["simpNF", "Finset.prod_attach_univ"],
 ["simpNF", "Finset.prod_const"],
 ["simpNF", "Finset.prod_const_one"],
 ["simpNF", "Finset.prod_diag"],
 ["simpNF", "Finset.prod_disj_sum"],
 ["simpNF", "Finset.prod_dite_eq"],
 ["simpNF", "Finset.prod_dite_eq'"],
 ["simpNF", "Finset.prod_dite_irrel"],
 ["simpNF", "Finset.prod_div_distrib"],
 ["simpNF", "Finset.prod_eq_one_iff'"],
 ["simpNF", "Finset.prod_image"],
 ["simpNF", "Finset.prod_insert"],
 ["simpNF", "Finset.prod_insertNone"],
 ["simpNF", "Finset.prod_insert_of_eq_one_if_not_mem"],
 ["simpNF", "Finset.prod_insert_one"],
 ["simpNF", "Finset.prod_inv_distrib"],
 ["simpNF", "Finset.prod_inv_index"],
 ["simpNF", "Finset.prod_ite_eq"],
 ["simpNF", "Finset.prod_ite_eq'"],
 ["simpNF", "Finset.prod_ite_irrel"],
 ["simpNF", "Finset.prod_ite_mem"],
 ["simpNF", "Finset.prod_map"],
 ["simpNF", "Finset.prod_neg_index"],
 ["simpNF", "Finset.prod_pi_mulSingle"],
 ["simpNF", "Finset.prod_range_add_one_eq_factorial"],
 ["simpNF", "Finset.prod_val"],
 ["simpNF", "Finset.product_biUnion"],
 ["simpNF", "Finset.product_singleton"],
 ["simpNF", "Finset.range_filter_eq"],
 ["simpNF", "Finset.seqLeft_def"],
 ["simpNF", "Finset.seqRight_def"],
 ["simpNF", "Finset.seq_def"],
 ["simpNF", "Finset.setOf_mem"],
 ["simpNF", "Finset.set_biUnion_preimage_singleton"],
 ["simpNF", "Finset.sigma_eq_empty"],
 ["simpNF", "Finset.sigma_nonempty"],
 ["simpNF", "Finset.sub_singleton"],
 ["simpNF", "Finset.subtype_eq_univ"],
 ["simpNF", "Finset.subtype_map"],
 ["simpNF", "Finset.sum_apply"],
 ["simpNF", "Finset.sum_attach_univ"],
 ["simpNF", "Finset.sum_boole"],
 ["simpNF", "Finset.sum_card_slice"],
 ["simpNF", "Finset.sum_const"],
 ["simpNF", "Finset.sum_const_zero"],
 ["simpNF", "Finset.sum_diag"],
 ["simpNF", "Finset.sum_disj_sum"],
 ["simpNF", "Finset.sum_dite_eq"],
 ["simpNF", "Finset.sum_dite_eq'"],
 ["simpNF", "Finset.sum_dite_irrel"],
 ["simpNF", "Finset.sum_eq_zero_iff"],
 ["simpNF", "Finset.sum_image"],
 ["simpNF", "Finset.sum_insert"],
 ["simpNF", "Finset.sum_insertNone"],
 ["simpNF", "Finset.sum_insert_of_eq_zero_if_not_mem"],
 ["simpNF", "Finset.sum_insert_zero"],
 ["simpNF", "Finset.sum_inv_index"],
 ["simpNF", "Finset.sum_ite_eq"],
 ["simpNF", "Finset.sum_ite_eq'"],
 ["simpNF", "Finset.sum_ite_irrel"],
 ["simpNF", "Finset.sum_ite_mem"],
 ["simpNF", "Finset.sum_map"],
 ["simpNF", "Finset.sum_neg_distrib"],
 ["simpNF", "Finset.sum_neg_index"],
 ["simpNF", "Finset.sum_pi_single"],
 ["simpNF", "Finset.sum_sub_distrib"],
 ["simpNF", "Finset.sum_val"],
 ["simpNF", "Finset.sup'_apply"],
 ["simpNF", "Finset.sup'_cons"],
 ["simpNF", "Finset.sup'_const"],
 ["simpNF", "Finset.sup'_image"],
 ["simpNF", "Finset.sup'_image₂_le"],
 ["simpNF", "Finset.sup'_insert"],
 ["simpNF", "Finset.sup'_inv"],
 ["simpNF", "Finset.sup'_le_iff"],
 ["simpNF", "Finset.sup'_lt_iff"],
 ["simpNF", "Finset.sup'_map"],
 ["simpNF", "Finset.sup'_neg"],
 ["simpNF", "Finset.sup_add_le"],
 ["simpNF", "Finset.sup_apply"],
 ["simpNF", "Finset.sup_biUnion"],
 ["simpNF", "Finset.sup_bot"],
 ["simpNF", "Finset.sup_cons"],
 ["simpNF", "Finset.sup_div_le"],
 ["simpNF", "Finset.sup_eq_bot_iff"],
 ["simpNF", "Finset.sup_image₂_le"],
 ["simpNF", "Finset.sup_insert"],
 ["simpNF", "Finset.sup_inv"],
 ["simpNF", "Finset.sup_le_iff"],
 ["simpNF", "Finset.sup_lt_iff"],
 ["simpNF", "Finset.sup_mul_le"],
 ["simpNF", "Finset.sup_neg"],
 ["simpNF", "Finset.sup_set_eq_biUnion"],
 ["simpNF", "Finset.sup_singleton''"],
 ["simpNF", "Finset.sup_sub_le"],
 ["simpNF", "Finset.sup_toFinset"],
 ["simpNF", "Finset.sups_singleton"],
 ["simpNF", "Finset.sups_subset_iff"],
 ["simpNF", "Finset.sym_empty"],
 ["simpNF", "Finset.sym_succ"],
 ["simpNF", "Finset.toDual_inf'"],
 ["simpNF", "Finset.toDual_sup'"],
 ["simpNF", "Finset.univ_filter_card_eq"],
 ["simpNF", "Finset.univ_filter_exists"],
 ["simpNF", "Finset.univ_pi_univ"],
 ["simpNF", "Finset.univ_sigma_univ"],
 ["simpNF", "Finset.unop_sum"],
 ["simpNF", "Finset.vsub_singleton"],
 ["simpNF", "Finset.weightedVSubOfPoint_apply"],
 ["simpNF", "Finset.weightedVSubOfPoint_apply_const"],
 ["simpNF", "Finset.weightedVSubOfPoint_erase"],
 ["simpNF", "Finset.weightedVSubOfPoint_insert"],
 ["simpNF", "Finset.weightedVSub_apply_const"],
 ["simpNF", "Finset.weightedVSub_eq_linear_combination"],
 ["simpNF", "Finset.wellFoundedOn_bUnion"],
 ["simpNF", "Finsupp.add_closure_setOf_eq_single"],
 ["simpNF", "Finsupp.card_pi"],
 ["simpNF", "Finsupp.coe_add"],
 ["simpNF", "Finsupp.coe_basis"],
 ["simpNF", "Finsupp.coe_basisSingleOne"],
 ["simpNF", "Finsupp.coe_le_coe"],
 ["simpNF", "Finsupp.coe_lsum"],
 ["simpNF", "Finsupp.coe_lt_coe"],
 ["simpNF", "Finsupp.coe_neLocus"],
 ["simpNF", "Finsupp.coe_neg"],
 ["simpNF", "Finsupp.coe_pointwise_smul"],
 ["simpNF", "Finsupp.coe_smul"],
 ["simpNF", "Finsupp.coe_sub"],
 ["simpNF", "Finsupp.coe_tsub"],
 ["simpNF", "Finsupp.equivFunOnFinite_single"],
 ["simpNF", "Finsupp.equivFunOnFinite_symm_single"],
 ["simpNF", "Finsupp.erase_add"],
 ["simpNF", "Finsupp.erase_sub"],
 ["simpNF", "Finsupp.liftAddHom_apply"],
 ["simpNF", "Finsupp.lift_apply"],
 ["simpNF", "Finsupp.linearEquivFunOnFinite_single"],
 ["simpNF", "Finsupp.linearEquivFunOnFinite_symm_single"],
 ["simpNF", "Finsupp.llift_apply"],
 ["simpNF", "Finsupp.mem_pi"],
 ["simpNF", "Finsupp.prod_div_prod_filter"],
 ["simpNF", "Finsupp.prod_eq_zero_iff"],
 ["simpNF", "Finsupp.prod_equivMapDomain"],
 ["simpNF", "Finsupp.prod_filter_mul_prod_filter_not"],
 ["simpNF", "Finsupp.prod_hom_add_index"],
 ["simpNF", "Finsupp.prod_indicator_index"],
 ["simpNF", "Finsupp.prod_indicator_index_eq_prod_attach"],
 ["simpNF", "Finsupp.prod_inv"],
 ["simpNF", "Finsupp.prod_ite_eq"],
 ["simpNF", "Finsupp.prod_ite_eq'"],
 ["simpNF", "Finsupp.prod_mul"],
 ["simpNF", "Finsupp.prod_pow"],
 ["simpNF", "Finsupp.rangeIcc_support"],
 ["simpNF", "Finsupp.restrictDom_apply"],
 ["simpNF", "Finsupp.sum_add"],
 ["simpNF", "Finsupp.sum_apply"],
 ["simpNF", "Finsupp.sum_equivMapDomain"],
 ["simpNF", "Finsupp.sum_filter_add_sum_filter_not"],
 ["simpNF", "Finsupp.sum_hom_add_index"],
 ["simpNF", "Finsupp.sum_indicator_index"],
 ["simpNF", "Finsupp.sum_indicator_index_eq_sum_attach"],
 ["simpNF", "Finsupp.sum_ite_eq"],
 ["simpNF", "Finsupp.sum_ite_eq'"],
 ["simpNF", "Finsupp.sum_mapDomain_index_addMonoidHom"],
 ["simpNF", "Finsupp.sum_neg"],
 ["simpNF", "Finsupp.sum_smul_index_linearMap'"],
 ["simpNF", "Finsupp.sum_sub"],
 ["simpNF", "Finsupp.sum_sub_sum_filter"],
 ["simpNF", "Finsupp.sum_toMultiset"],
 ["simpNF", "Finsupp.sum_zero"],
 ["simpNF", "Finsupp.support_filter"],
 ["simpNF", "Finsupp.toDFinsupp_smul"],
 ["simpNF", "Finsupp.univ_sum_single"],
 ["simpNF", "Finsupp.univ_sum_single_apply'"],
 ["simpNF", "Fintype.card_finset_len"],
 ["simpNF", "Fintype.card_fun"],
 ["simpNF", "Fintype.card_pi"],
 ["simpNF", "Fintype.card_piFinset"],
 ["simpNF", "Fintype.card_sigma"],
 ["simpNF", "Fintype.coe_piFinset"],
 ["simpNF", "Fintype.mem_piFinset"],
 ["simpNF", "Fintype.piFinset_empty"],
 ["simpNF", "Fintype.piFinset_inv"],
 ["simpNF", "Fintype.piFinset_neg"],
 ["simpNF", "Fintype.piFinset_nonempty"],
 ["simpNF", "Fintype.piFinset_singleton"],
 ["simpNF", "Fintype.piFinset_univ"],
 ["simpNF", "Fintype.prod_option"],
 ["simpNF", "Fintype.prod_prod_type"],
 ["simpNF", "Fintype.prod_sum_type"],
 ["simpNF", "Fintype.sum_option"],
 ["simpNF", "Fintype.sum_prod_type"],
 ["simpNF", "Fintype.sum_sum_type"],
 ["simpNF", "Fintype.total_apply_single"],
 ["simpNF", "FintypeCat.toProfinite_map_apply"],
 ["simpNF", "Flag.mem_rangeFin"],
 ["simpNF", "Flow.omegaLimit_image_eq"],
 ["simpNF", "FormalMultilinearSeries.apply_eq_pow_smul_coeff"],
 ["simpNF", "FormalMultilinearSeries.apply_eq_prod_smul_coeff"],
 ["simpNF", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_fst"],
 ["simpNF", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_snd"],
 ["simpNF", "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_fst"],
 ["simpNF",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_fst"],
 ["simpNF",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_snd_coe"],
 ["simpNF", "FormalMultilinearSeries.compAlongComposition_apply"],
 ["simpNF", "FormalMultilinearSeries.compContinuousLinearMap_apply"],
 ["simpNF", "FormalMultilinearSeries.compContinuousLinearMap_applyComposition"],
 ["simpNF", "FormalMultilinearSeries.comp_coeff_zero'"],
 ["simpNF", "FormalMultilinearSeries.id_apply_one"],
 ["simpNF", "FormalMultilinearSeries.leftInv_coeff_one"],
 ["simpNF", "FormalMultilinearSeries.mem_compPartialSumSource_iff"],
 ["simpNF", "FormalMultilinearSeries.mem_compPartialSumTarget_iff"],
 ["simpNF", "FormalMultilinearSeries.rightInv_coeff_one"],
 ["simpNF", "FractionalIdeal.exists_mem_algebraMap_eq"],
 ["simpNF", "FractionalIdeal.mem_canonicalEquiv_apply"],
 ["simpNF", "FractionalIdeal.mem_coeIdeal"],
 ["simpNF", "FractionalIdeal.mem_map"],
 ["simpNF", "FractionalIdeal.mem_spanSingleton"],
 ["simpNF", "FractionalIdeal.spanFinset_eq_zero"],
 ["simpNF", "FreeAbelianGroup.add_seq"],
 ["simpNF", "FreeAbelianGroup.neg_seq"],
 ["simpNF", "FreeAbelianGroup.pure_seq"],
 ["simpNF", "FreeAbelianGroup.seq_add"],
 ["simpNF", "FreeAbelianGroup.seq_neg"],
 ["simpNF", "FreeAbelianGroup.seq_sub"],
 ["simpNF", "FreeAbelianGroup.seq_zero"],
 ["simpNF", "FreeAbelianGroup.sub_seq"],
 ["simpNF", "FreeAbelianGroup.zero_seq"],
 ["simpNF", "FreeAddGroup.sum_mk"],
 ["simpNF", "FreeAddMagma.add_seq"],
 ["simpNF", "FreeAddMagma.pure_seq"],
 ["simpNF", "FreeAddMagma.traverse_add"],
 ["simpNF", "FreeAddMagma.traverse_add'"],
 ["simpNF", "FreeAddMagma.traverse_pure'"],
 ["simpNF", "FreeAddSemigroup.add_seq"],
 ["simpNF", "FreeAddSemigroup.pure_seq"],
 ["simpNF", "FreeAddSemigroup.traverse_add"],
 ["simpNF", "FreeAddSemigroup.traverse_add'"],
 ["simpNF", "FreeAddSemigroup.traverse_pure'"],
 ["simpNF", "FreeGroup.prod_mk"],
 ["simpNF", "FreeGroup.sum_mk"],
 ["simpNF", "FreeMagma.mul_seq"],
 ["simpNF", "FreeMagma.pure_seq"],
 ["simpNF", "FreeMagma.traverse_mul"],
 ["simpNF", "FreeMagma.traverse_mul'"],
 ["simpNF", "FreeMagma.traverse_pure'"],
 ["simpNF", "FreeSemigroup.mul_seq"],
 ["simpNF", "FreeSemigroup.pure_seq"],
 ["simpNF", "FreeSemigroup.traverse_mul"],
 ["simpNF", "FreeSemigroup.traverse_mul'"],
 ["simpNF", "FreeSemigroup.traverse_pure'"],
 ["simpNF", "Function.const_le_const"],
 ["simpNF", "Function.const_le_one"],
 ["simpNF", "Function.const_lt_const"],
 ["simpNF", "Function.const_lt_one"],
 ["simpNF", "Function.const_neg"],
 ["simpNF", "Function.const_nonneg"],
 ["simpNF", "Function.const_nonpos"],
 ["simpNF", "Function.const_pos"],
 ["simpNF", "Function.extend_apply'"],
 ["simpNF", "Function.mem_periodicOrbit_iff"],
 ["simpNF", "Function.mulSupport_along_fiber_finite_of_finite"],
 ["simpNF", "Function.mulSupport_inv"],
 ["simpNF", "Function.mulSupport_inv'"],
 ["simpNF", "Function.mulSupport_one"],
 ["simpNF", "Function.mulSupport_subset_iff"],
 ["simpNF", "Function.ofArity_succ"],
 ["simpNF", "Function.one_le_const"],
 ["simpNF", "Function.one_lt_const"],
 ["simpNF", "Function.support_along_fiber_finite_of_finite"],
 ["simpNF", "Function.support_div"],
 ["simpNF", "Function.support_inv"],
 ["simpNF", "Function.support_mul"],
 ["simpNF", "Function.support_neg"],
 ["simpNF", "Function.support_neg'"],
 ["simpNF", "Function.support_subset_iff"],
 ["simpNF", "Function.support_zero"],
 ["simpNF", "FundamentalGroupoid.equiv_apply"],
 ["simpNF", "FundamentalGroupoid.equiv_symm_apply_as"],
 ["simpNF", "GaussianInt.int_cast_complex_norm"],
 ["simpNF", "GaussianInt.int_cast_real_norm"],
 ["simpNF", "GaussianInt.toComplex_eq_zero"],
 ["simpNF", "GaussianInt.toComplex_im"],
 ["simpNF", "GaussianInt.toComplex_inj"],
 ["simpNF", "GaussianInt.toComplex_re"],
 ["simpNF", "GaussianInt.toComplex_star"],
 ["simpNF", "GaussianInt.to_real_im"],
 ["simpNF", "GaussianInt.to_real_re"],
 ["simpNF", "GenLoop.const_apply"],
 ["simpNF", "GenLoop.homotopyFrom_apply"],
 ["simpNF", "GenLoop.loopHomeo_apply"],
 ["simpNF", "GenLoop.loopHomeo_symm_apply"],
 ["simpNF", "GenLoop.mk_apply"],
 ["simpNF", "GenLoop.toLoop_apply_coe"],
 ["simpNF", "GroupNorm.coe_add"],
 ["simpNF", "GroupNorm.coe_le_coe"],
 ["simpNF", "GroupNorm.coe_lt_coe"],
 ["simpNF", "GroupNorm.coe_sup"],
 ["simpNF", "GroupSeminorm.coe_add"],
 ["simpNF", "GroupSeminorm.coe_le_coe"],
 ["simpNF", "GroupSeminorm.coe_lt_coe"],
 ["simpNF", "GroupSeminorm.coe_smul"],
 ["simpNF", "GroupSeminorm.coe_sup"],
 ["simpNF", "GroupSeminorm.inf_apply"],
 ["simpNF", "HahnSeries.add_coeff'"],
 ["simpNF", "HahnSeries.embDomainAlgHom_apply_coeff"],
 ["simpNF", "HahnSeries.neg_coeff'"],
 ["simpNF", "HahnSeries.ofPowerSeriesAlg_apply_coeff"],
 ["simpNF", "HahnSeries.sub_coeff'"],
 ["simpNF", "Hamming.dist_eq_hammingDist"],
 ["simpNF", "Hamming.nndist_eq_hammingDist"],
 ["simpNF", "Hamming.nnnorm_eq_hammingNorm"],
 ["simpNF", "Hamming.norm_eq_hammingNorm"],
 ["simpNF", "Hamming.ofHamming_add"],
 ["simpNF", "Hamming.ofHamming_neg"],
 ["simpNF", "Hamming.ofHamming_smul"],
 ["simpNF", "Hamming.ofHamming_sub"],
 ["simpNF", "Hamming.ofHamming_toHamming"],
 ["simpNF", "Hamming.ofHamming_zero"],
 ["simpNF", "Hamming.toHamming_add"],
 ["simpNF", "Hamming.toHamming_neg"],
 ["simpNF", "Hamming.toHamming_ofHamming"],
 ["simpNF", "Hamming.toHamming_smul"],
 ["simpNF", "Hamming.toHamming_sub"],
 ["simpNF", "Hamming.toHamming_zero"],
 ["simpNF", "HilbertBasis.coe_mk"],
 ["simpNF", "HilbertBasis.coe_mkOfOrthogonalEqBot"],
 ["simpNF", "HilbertBasis.coe_toOrthonormalBasis"],
 ["simpNF", "HilbertBasis.dense_span"],
 ["simpNF", "HilbertBasis.orthonormal"],
 ["simpNF", "Holor.sum_unitVec_mul_slice"],
 ["simpNF", "Homeomorph.coe_addRight"],
 ["simpNF", "Homeomorph.coe_mulRight"],
 ["simpNF", "Homeomorph.coe_mulRight₀"],
 ["simpNF", "Homeomorph.coe_toHomotopyEquiv"],
 ["simpNF", "Homeomorph.coe_unitBall_apply_zero"],
 ["simpNF", "Homeomorph.finTwoArrow_apply"],
 ["simpNF", "Homeomorph.finTwoArrow_symm_apply"],
 ["simpNF", "Homeomorph.funSplitAt_apply"],
 ["simpNF", "Homeomorph.funUnique_apply"],
 ["simpNF", "Homeomorph.isPathConnected_image"],
 ["simpNF", "Homeomorph.isPathConnected_preimage"],
 ["simpNF", "Homeomorph.mulRight₀_symm_apply"],
 ["simpNF", "Homeomorph.piCongrRight_symm"],
 ["simpNF", "Homeomorph.piCongrRight_toEquiv"],
 ["simpNF", "Homeomorph.piCongr_apply"],
 ["simpNF", "Homeomorph.piCongr_toEquiv"],
 ["simpNF", "Homeomorph.piEquivPiSubtypeProd_apply"],
 ["simpNF", "Homeomorph.piFinTwo_apply"],
 ["simpNF", "Homeomorph.piFinTwo_symm_apply"],
 ["simpNF", "Homeomorph.piSplitAt_apply"],
 ["simpNF", "Homeomorph.shearAddRight_coe"],
 ["simpNF", "Homeomorph.shearAddRight_symm_coe"],
 ["simpNF", "Homeomorph.shearMulRight_coe"],
 ["simpNF", "Homeomorph.shearMulRight_symm_coe"],
 ["simpNF", "Homeomorph.toMeasurableEquiv_coe"],
 ["simpNF", "Homeomorph.toMeasurableEquiv_symm_coe"],
 ["simpNF", "HomogeneousIdeal.toIdeal_sInf"],
 ["simpNF", "HomogeneousIdeal.toIdeal_sSup"],
 ["simpNF", "HomologicalComplex.asFunctor_map"],
 ["simpNF", "HomologicalComplex.asFunctor_obj"],
 ["simpNF", "HomologicalComplex.coconeOfHasColimitEval_pt_d"],
 ["simpNF", "HomologicalComplex.coneOfHasLimitEval_pt_d"],
 ["simpNF", "HomologicalComplex.opInverse_map"],
 ["simpNF", "HomologicalComplex.unopInverse_map"],
 ["simpNF", "Homotopy.nullHomotopicMap'_f"],
 ["simpNF", "Homotopy.nullHomotopicMap'_f_eq_zero"],
 ["simpNF", "Homotopy.nullHomotopicMap'_f_of_not_rel_left"],
 ["simpNF", "Homotopy.nullHomotopicMap'_f_of_not_rel_right"],
 ["simpNF", "Homotopy.nullHomotopicMap_f"],
 ["simpNF", "Homotopy.nullHomotopicMap_f_eq_zero"],
 ["simpNF", "Homotopy.nullHomotopicMap_f_of_not_rel_left"],
 ["simpNF", "Homotopy.nullHomotopicMap_f_of_not_rel_right"],
 ["simpNF", "Homotopy.ofEq_hom"],
 ["simpNF", "Ideal.mem_iInf"],
 ["simpNF", "Ideal.multiset_prod_span_singleton"],
 ["simpNF", "InfHom.coe_bot"],
 ["simpNF", "InfHom.coe_top"],
 ["simpNF", "InfHom.withBot'_toFun"],
 ["simpNF", "InfHom.withTop'_toInfHom_toFun"],
 ["simpNF", "InfTopHom.coe_top"],
 ["simpNF", "InnerProductSpace.continuousLinearMapOfBilin_apply"],
 ["simpNF", "InnerProductSpace.toDualMap_apply"],
 ["simpNF", "InnerProductSpace.toDual_apply"],
 ["simpNF", "InnerProductSpace.toDual_symm_apply"],
 ["simpNF", "Int.bodd_neg"],
 ["simpNF", "Int.cast_finsupp_prod"],
 ["simpNF", "Int.cast_finsupp_sum"],
 ["simpNF", "Int.cast_neg"],
 ["simpNF", "Int.cast_prod"],
 ["simpNF", "Int.cast_sum"],
 ["simpNF", "Int.clog_inv"],
 ["simpNF", "Int.floor_le_neg_one_iff"],
 ["simpNF", "Int.gcd_neg_left"],
 ["simpNF", "Int.gcd_neg_right"],
 ["simpNF", "Int.log_inv"],
 ["simpNF", "Int.modEq_neg"],
 ["simpNF", "Int.negOnePow_neg"],
 ["simpNF", "Int.neg_emod_two"],
 ["simpNF", "Int.neg_modEq_neg"],
 ["simpNF", "Int.shiftLeft_neg"],
 ["simpNF", "Int.shiftRight_neg"],
 ["simpNF", "Int.toNat_add_toNat_neg_eq_nnnorm"],
 ["simpNF", "Int.toNat_add_toNat_neg_eq_norm"],
 ["simpNF", "Int.toNat_pred_coe_of_pos"],
 ["simpNF", "IntermediateField.coe_sInf"],
 ["simpNF", "IntermediateField.coe_sum"],
 ["simpNF", "Interval.coe_sInf"],
 ["simpNF", "IntervalIntegrable.add"],
 ["simpNF", "IntervalIntegrable.const_mul"],
 ["simpNF", "IntervalIntegrable.div_const"],
 ["simpNF", "IntervalIntegrable.log"],
 ["simpNF", "IntervalIntegrable.mul_const"],
 ["simpNF", "IntervalIntegrable.sub"],
 ["simpNF", "IsBoundedBilinearMap.deriv_apply"],
 ["simpNF", "IsCoercive.continuousLinearEquivOfBilin_apply"],
 ["simpNF", "IsCyclotomicExtension.autEquivPow_apply"],
 ["simpNF", "IsCyclotomicExtension.autEquivPow_symm_apply"],
 ["simpNF", "IsDedekindDomain.quotientEquivPiFactors_mk"],
 ["simpNF", "IsHilbertSum.linearIsometryEquiv_apply_dfinsupp_sum_single"],
 ["simpNF", "IsHilbertSum.linearIsometryEquiv_symm_apply_dfinsupp_sum_single"],
 ["simpNF", "IsHilbertSum.linearIsometryEquiv_symm_apply_single"],
 ["simpNF", "IsLocalization.mem_localizationLocalizationSubmodule"],
 ["simpNF", "IsMax.not_infIrred"],
 ["simpNF", "IsMax.not_infPrime"],
 ["simpNF", "IsMetricSeparated.finset_iUnion_left_iff"],
 ["simpNF", "IsMetricSeparated.finset_iUnion_right_iff"],
 ["simpNF", "IsNoetherian.coeSort_finsetBasisIndex"],
 ["simpNF", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_apply"],
 ["simpNF", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_symm_apply"],
 ["simpNF", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_apply"],
 ["simpNF", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_symm_apply"],
 ["simpNF", "IsPrimitiveRoot.card_nthRootsFinset"],
 ["simpNF", "IsPrimitiveRoot.embeddingsEquivPrimitiveRoots_apply_coe"],
 ["simpNF", "IsROrC.I_im"],
 ["simpNF", "IsROrC.I_im'"],
 ["simpNF", "IsROrC.I_re"],
 ["simpNF", "IsROrC.bit1_im"],
 ["simpNF", "IsROrC.bit1_re"],
 ["simpNF", "IsROrC.conjAe_coe"],
 ["simpNF", "IsROrC.conjCle_apply"],
 ["simpNF", "IsROrC.conjCle_norm"],
 ["simpNF", "IsROrC.conjLie_apply"],
 ["simpNF", "IsROrC.conj_I"],
 ["simpNF", "IsROrC.conj_im"],
 ["simpNF", "IsROrC.conj_ofReal"],
 ["simpNF", "IsROrC.conj_re"],
 ["simpNF", "IsROrC.hasSum_conj"],
 ["simpNF", "IsROrC.hasSum_ofReal"],
 ["simpNF", "IsROrC.imClm_apply"],
 ["simpNF", "IsROrC.imLm_coe"],
 ["simpNF", "IsROrC.im_to_complex"],
 ["simpNF", "IsROrC.im_to_real"],
 ["simpNF", "IsROrC.inner_apply"],
 ["simpNF", "IsROrC.intCast_im"],
 ["simpNF", "IsROrC.intCast_re"],
 ["simpNF", "IsROrC.inv_im"],
 ["simpNF", "IsROrC.inv_re"],
 ["simpNF", "IsROrC.mul_im"],
 ["simpNF", "IsROrC.mul_re"],
 ["simpNF", "IsROrC.natCast_im"],
 ["simpNF", "IsROrC.natCast_re"],
 ["simpNF", "IsROrC.normSq_conj"],
 ["simpNF", "IsROrC.normSq_neg"],
 ["simpNF", "IsROrC.normSq_pos"],
 ["simpNF", "IsROrC.normSq_to_complex"],
 ["simpNF", "IsROrC.normSq_to_real"],
 ["simpNF", "IsROrC.ofNat_im"],
 ["simpNF", "IsROrC.ofNat_re"],
 ["simpNF", "IsROrC.ofRealAm_coe"],
 ["simpNF", "IsROrC.ofRealClm_apply"],
 ["simpNF", "IsROrC.ofRealLi_apply"],
 ["simpNF", "IsROrC.ofReal_finsupp_prod"],
 ["simpNF", "IsROrC.ofReal_finsupp_sum"],
 ["simpNF", "IsROrC.ofReal_im"],
 ["simpNF", "IsROrC.ofReal_prod"],
 ["simpNF", "IsROrC.ofReal_re"],
 ["simpNF", "IsROrC.ofReal_sum"],
 ["simpNF", "IsROrC.one_im"],
 ["simpNF", "IsROrC.one_re"],
 ["simpNF", "IsROrC.ratCast_im"],
 ["simpNF", "IsROrC.ratCast_re"],
 ["simpNF", "IsROrC.reClm_apply"],
 ["simpNF", "IsROrC.reLm_coe"],
 ["simpNF", "IsROrC.re_add_im"],
 ["simpNF", "IsROrC.re_to_complex"],
 ["simpNF", "IsROrC.re_to_real"],
 ["simpNF", "IsROrC.star_def"],
 ["simpNF", "IsROrC.summable_conj"],
 ["simpNF", "IsROrC.summable_ofReal"],
 ["simpNF", "Isometry.affineIsometryOfStrictConvexSpace_apply"],
 ["simpNF", "Isometry.coe_affineIsometryOfStrictConvexSpace"],
 ["simpNF", "Isometry.isometryEquivOnRange_apply"],
 ["simpNF", "IsometryEquiv.addLeft_apply"],
 ["simpNF", "IsometryEquiv.addRight_apply"],
 ["simpNF", "IsometryEquiv.apply_inv_self"],
 ["simpNF", "IsometryEquiv.apply_symm_apply"],
 ["simpNF", "IsometryEquiv.coeFn_toRealAffineIsometryEquiv"],
 ["simpNF", "IsometryEquiv.coe_mk"],
 ["simpNF", "IsometryEquiv.coe_mul"],
 ["simpNF", "IsometryEquiv.coe_one"],
 ["simpNF", "IsometryEquiv.coe_toEquiv"],
 ["simpNF", "IsometryEquiv.coe_toHomeomorph"],
 ["simpNF", "IsometryEquiv.coe_toHomeomorph_symm"],
 ["simpNF", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero"],
 ["simpNF", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero_symm"],
 ["simpNF", "IsometryEquiv.comp_continuousOn_iff"],
 ["simpNF", "IsometryEquiv.comp_continuous_iff"],
 ["simpNF", "IsometryEquiv.comp_continuous_iff'"],
 ["simpNF", "IsometryEquiv.constSMul_apply"],
 ["simpNF", "IsometryEquiv.constVAdd_apply"],
 ["simpNF", "IsometryEquiv.constVSub_apply"],
 ["simpNF", "IsometryEquiv.constVSub_symm_apply"],
 ["simpNF", "IsometryEquiv.constVSub_toFun"],
 ["simpNF", "IsometryEquiv.diam_image"],
 ["simpNF", "IsometryEquiv.diam_preimage"],
 ["simpNF", "IsometryEquiv.dimH_image"],
 ["simpNF", "IsometryEquiv.dimH_preimage"],
 ["simpNF", "IsometryEquiv.divLeft_apply"],
 ["simpNF", "IsometryEquiv.divLeft_symm_apply"],
 ["simpNF", "IsometryEquiv.divRight_apply"],
 ["simpNF", "IsometryEquiv.ediam_image"],
 ["simpNF", "IsometryEquiv.ediam_preimage"],
 ["simpNF", "IsometryEquiv.funUnique_apply"],
 ["simpNF", "IsometryEquiv.funUnique_symm_apply"],
 ["simpNF", "IsometryEquiv.funUnique_toFun"],
 ["simpNF", "IsometryEquiv.hausdorffMeasure_image"],
 ["simpNF", "IsometryEquiv.hausdorffMeasure_preimage"],
 ["simpNF", "IsometryEquiv.image_ball"],
 ["simpNF", "IsometryEquiv.image_closedBall"],
 ["simpNF", "IsometryEquiv.image_emetric_ball"],
 ["simpNF", "IsometryEquiv.image_emetric_closedBall"],
 ["simpNF", "IsometryEquiv.image_sphere"],
 ["simpNF", "IsometryEquiv.inv_apply"],
 ["simpNF", "IsometryEquiv.inv_apply_self"],
 ["simpNF", "IsometryEquiv.map_hausdorffMeasure"],
 ["simpNF", "IsometryEquiv.mulLeft_apply"],
 ["simpNF", "IsometryEquiv.mulRight_apply"],
 ["simpNF", "IsometryEquiv.neg_apply"],
 ["simpNF", "IsometryEquiv.piFinTwo_apply"],
 ["simpNF", "IsometryEquiv.piFinTwo_symm_apply"],
 ["simpNF", "IsometryEquiv.piFinTwo_toFun"],
 ["simpNF", "IsometryEquiv.preimage_ball"],
 ["simpNF", "IsometryEquiv.preimage_closedBall"],
 ["simpNF", "IsometryEquiv.preimage_emetric_ball"],
 ["simpNF", "IsometryEquiv.preimage_emetric_closedBall"],
 ["simpNF", "IsometryEquiv.preimage_sphere"],
 ["simpNF", "IsometryEquiv.range_eq_univ"],
 ["simpNF", "IsometryEquiv.subLeft_apply"],
 ["simpNF", "IsometryEquiv.subLeft_symm_apply"],
 ["simpNF", "IsometryEquiv.subRight_apply"],
 ["simpNF", "IsometryEquiv.symm_apply_apply"],
 ["simpNF", "IsometryEquiv.symm_trans_apply"],
 ["simpNF", "IsometryEquiv.toRealLinearIsometryEquiv_apply"],
 ["simpNF", "IsometryEquiv.toRealLinearIsometryEquiv_symm_apply"],
 ["simpNF", "IsometryEquiv.trans_apply"],
 ["simpNF", "IsometryEquiv.vaddConst_apply"],
 ["simpNF", "IsometryEquiv.vaddConst_symm_apply"],
 ["simpNF", "IsometryEquiv.vaddConst_toFun"],
 ["simpNF", "LTSeries.comap_toFun"],
 ["simpNF", "Lagrange.interpolate_apply"],
 ["simpNF", "LatticeHom.withTop'_toSupHom_toFun"],
 ["simpNF", "LaurentPolynomial.invOf_T"],
 ["simpNF", "LaurentPolynomial.invert_T"],
 ["simpNF", "LaurentPolynomial.invert_apply"],
 ["simpNF", "LeftInvariantDerivation.coeFnAddMonoidHom_apply"],
 ["simpNF", "LeftInvariantDerivation.coe_add"],
 ["simpNF", "LeftInvariantDerivation.coe_neg"],
 ["simpNF", "LeftInvariantDerivation.coe_smul"],
 ["simpNF", "LeftInvariantDerivation.coe_sub"],
 ["simpNF", "LeftInvariantDerivation.coe_zero"],
 ["simpNF", "LeftInvariantDerivation.commutator_coe_derivation"],
 ["simpNF", "LeftInvariantDerivation.evalAt_coe"],
 ["simpNF", "LeftInvariantDerivation.leibniz"],
 ["simpNF", "Lex.exists"],
 ["simpNF", "Lex.forall"],
 ["simpNF", "LieHom.mem_idealRange_iff"],
 ["simpNF", "LieHom.mem_range"],
 ["simpNF", "LieIdeal.mem_killingCompl"],
 ["simpNF", "LieModule.iSup_weightSpaceOf_eq_top"],
 ["simpNF", "LieModule.mem_ker"],
 ["simpNF", "LieModule.mem_maxTrivSubmodule"],
 ["simpNF", "LieModuleHom.coe_add"],
 ["simpNF", "LieModuleHom.coe_neg"],
 ["simpNF", "LieModuleHom.coe_nsmul"],
 ["simpNF", "LieModuleHom.coe_smul"],
 ["simpNF", "LieModuleHom.coe_sub"],
 ["simpNF", "LieModuleHom.coe_zsmul"],
 ["simpNF", "LieModuleHom.mem_range"],
 ["simpNF", "LieSubalgebra.mem_map"],
 ["simpNF", "LieSubalgebra.sInf_coe"],
 ["simpNF", "LieSubalgebra.sInf_coe_to_submodule"],
 ["simpNF", "LieSubmodule.mem_iInf"],
 ["simpNF", "LieSubmodule.mem_idealizer"],
 ["simpNF", "LieSubmodule.mem_map"],
 ["simpNF", "LieSubmodule.mem_normalizer"],
 ["simpNF", "LieSubmodule.sInf_coe"],
 ["simpNF", "LieSubmodule.sInf_coe_toSubmodule"],
 ["simpNF", "LieSubmodule.sSup_coe_toSubmodule"],
 ["simpNF", "LieSubmodule.sSup_image_lieSpan_singleton"],
 ["simpNF", "LightProfinite.instCategoryLightProfinite_comp_apply"],
 ["simpNF", "LightProfinite.instCategoryLightProfinite_id_apply"],
 ["simpNF", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous"],
 ["simpNF", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous_symm"],
 ["simpNF", "LinearEquiv.coe_isometryOfInner"],
 ["simpNF", "LinearEquiv.coe_isometryOfOrthonormal"],
 ["simpNF", "LinearEquiv.coe_neg"],
 ["simpNF", "LinearEquiv.coe_toContinuousLinearEquiv'"],
 ["simpNF", "LinearEquiv.coe_toContinuousLinearEquiv_symm'"],
 ["simpNF", "LinearEquiv.finTwoArrow_apply"],
 ["simpNF", "LinearEquiv.finTwoArrow_symm_apply"],
 ["simpNF", "LinearEquiv.map_dfinsupp_sumAddHom"],
 ["simpNF", "LinearEquiv.piCongrRight_refl"],
 ["simpNF", "LinearEquiv.piCongrRight_symm"],
 ["simpNF", "LinearEquiv.piCongrRight_trans"],
 ["simpNF", "LinearEquiv.piFinTwo_apply"],
 ["simpNF", "LinearEquiv.piFinTwo_symm_apply"],
 ["simpNF", "LinearEquiv.piRing_apply"],
 ["simpNF", "LinearEquiv.piRing_symm_apply"],
 ["simpNF", "LinearIsometry.angle_map"],
 ["simpNF", "LinearIsometry.coe_comp"],
 ["simpNF", "LinearIsometry.coe_id"],
 ["simpNF", "LinearIsometry.coe_mk"],
 ["simpNF", "LinearIsometry.coe_mul"],
 ["simpNF", "LinearIsometry.coe_one"],
 ["simpNF", "LinearIsometry.coe_toAffineIsometry"],
 ["simpNF", "LinearIsometry.coe_toContinuousLinearMap"],
 ["simpNF", "LinearIsometry.coe_toLinearIsometryEquiv"],
 ["simpNF", "LinearIsometry.coe_toLinearMap"],
 ["simpNF", "LinearIsometry.comp_continuous_iff"],
 ["simpNF", "LinearIsometry.dist_map"],
 ["simpNF", "LinearIsometry.edist_map"],
 ["simpNF", "LinearIsometry.equivRange_apply_coe"],
 ["simpNF", "LinearIsometry.id_apply"],
 ["simpNF", "LinearIsometry.inner_map_map"],
 ["simpNF", "LinearIsometry.isComplete_image_iff"],
 ["simpNF", "LinearIsometry.map_eq_iff"],
 ["simpNF", "LinearIsometry.norm_map"],
 ["simpNF", "LinearIsometry.preimage_ball"],
 ["simpNF", "LinearIsometry.preimage_closedBall"],
 ["simpNF", "LinearIsometry.preimage_sphere"],
 ["simpNF", "LinearIsometry.toLinearIsometryEquiv_apply"],
 ["simpNF", "LinearIsometry.toSpanSingleton_apply"],
 ["simpNF", "LinearIsometryEquiv.apply_symm_apply"],
 ["simpNF", "LinearIsometryEquiv.coe_coe"],
 ["simpNF", "LinearIsometryEquiv.coe_coe''"],
 ["simpNF", "LinearIsometryEquiv.coe_inv"],
 ["simpNF", "LinearIsometryEquiv.coe_mk"],
 ["simpNF", "LinearIsometryEquiv.coe_mul"],
 ["simpNF", "LinearIsometryEquiv.coe_neg"],
 ["simpNF", "LinearIsometryEquiv.coe_ofEq_apply"],
 ["simpNF", "LinearIsometryEquiv.coe_ofLinearIsometry"],
 ["simpNF", "LinearIsometryEquiv.coe_ofLinearIsometry_symm"],
 ["simpNF", "LinearIsometryEquiv.coe_ofSurjective"],
 ["simpNF", "LinearIsometryEquiv.coe_one"],
 ["simpNF", "LinearIsometryEquiv.coe_prodAssoc"],
 ["simpNF", "LinearIsometryEquiv.coe_prodAssoc_symm"],
 ["simpNF", "LinearIsometryEquiv.coe_refl"],
 ["simpNF", "LinearIsometryEquiv.coe_toAffineIsometryEquiv"],
 ["simpNF", "LinearIsometryEquiv.coe_toContinuousLinearEquiv"],
 ["simpNF", "LinearIsometryEquiv.coe_toHomeomorph"],
 ["simpNF", "LinearIsometryEquiv.coe_toIsometryEquiv"],
 ["simpNF", "LinearIsometryEquiv.coe_toLinearEquiv"],
 ["simpNF", "LinearIsometryEquiv.coe_toLinearIsometry"],
 ["simpNF", "LinearIsometryEquiv.coe_trans"],
 ["simpNF", "LinearIsometryEquiv.comp_continuousOn_iff"],
 ["simpNF", "LinearIsometryEquiv.comp_continuous_iff"],
 ["simpNF", "LinearIsometryEquiv.diam_image"],
 ["simpNF", "LinearIsometryEquiv.dist_map"],
 ["simpNF", "LinearIsometryEquiv.ediam_image"],
 ["simpNF", "LinearIsometryEquiv.edist_map"],
 ["simpNF", "LinearIsometryEquiv.image_ball"],
 ["simpNF", "LinearIsometryEquiv.image_closedBall"],
 ["simpNF", "LinearIsometryEquiv.image_sphere"],
 ["simpNF", "LinearIsometryEquiv.inner_map_map"],
 ["simpNF", "LinearIsometryEquiv.norm_map"],
 ["simpNF", "LinearIsometryEquiv.ofTop_apply"],
 ["simpNF", "LinearIsometryEquiv.ofTop_symm_apply_coe"],
 ["simpNF", "LinearIsometryEquiv.piLpCongrLeft_apply"],
 ["simpNF", "LinearIsometryEquiv.piLpCongrLeft_single"],
 ["simpNF", "LinearIsometryEquiv.preimage_ball"],
 ["simpNF", "LinearIsometryEquiv.preimage_closedBall"],
 ["simpNF", "LinearIsometryEquiv.preimage_sphere"],
 ["simpNF", "LinearIsometryEquiv.self_comp_symm"],
 ["simpNF", "LinearIsometryEquiv.symm_apply_apply"],
 ["simpNF", "LinearIsometryEquiv.symm_comp_self"],
 ["simpNF", "LinearIsometryEquiv.trans_apply"],
 ["simpNF", "LinearMap.adjoint_adjoint"],
 ["simpNF", "LinearMap.adjoint_comp"],
 ["simpNF", "LinearMap.clmOfExistsBoundedImage_apply"],
 ["simpNF", "LinearMap.coeFn_sum"],
 ["simpNF", "LinearMap.coe_inl"],
 ["simpNF", "LinearMap.coe_isometryOfInner"],
 ["simpNF", "LinearMap.coe_isometryOfOrthonormal"],
 ["simpNF", "LinearMap.coe_single"],
 ["simpNF", "LinearMap.coe_smulRight"],
 ["simpNF", "LinearMap.coe_toContinuousLinearMap"],
 ["simpNF", "LinearMap.coe_toContinuousLinearMap'"],
 ["simpNF", "LinearMap.coe_toContinuousLinearMap_symm"],
 ["simpNF", "LinearMap.compAlternatingMap_apply"],
 ["simpNF", "LinearMap.deriv"],
 ["simpNF", "LinearMap.det_toContinuousLinearMap"],
 ["simpNF", "LinearMap.det_toLin"],
 ["simpNF", "LinearMap.det_toLin'"],
 ["simpNF", "LinearMap.det_toMatrix"],
 ["simpNF", "LinearMap.det_toMatrix'"],
 ["simpNF", "LinearMap.dfinsupp_sum_apply"],
 ["simpNF", "LinearMap.extendTo𝕜'_apply_re"],
 ["simpNF", "LinearMap.finsupp_sum_apply"],
 ["simpNF", "LinearMap.im_inner_adjoint_mul_self_eq_zero"],
 ["simpNF", "LinearMap.ker_toContinuousLinearMap"],
 ["simpNF", "LinearMap.lsum_apply"],
 ["simpNF", "LinearMap.map_dfinsupp_sumAddHom"],
 ["simpNF", "LinearMap.mem_range"],
 ["simpNF", "LinearMap.mem_submoduleImage"],
 ["simpNF", "LinearMap.mkContinuousOfExistsBound_apply"],
 ["simpNF", "LinearMap.mkContinuous_apply"],
 ["simpNF", "LinearMap.mkContinuous₂_apply"],
 ["simpNF", "LinearMap.range_toContinuousLinearMap"],
 ["simpNF", "LinearMap.toContinuousLinearMap₁_apply"],
 ["simpNF", "LinearMap.toMatrix'_algebraMap"],
 ["simpNF", "LinearMap.toMatrix'_apply"],
 ["simpNF", "LinearMap.toMatrixAlgEquiv'_apply"],
 ["simpNF", "LinearMap.toMatrixOrthonormal_apply"],
 ["simpNF", "LinearMap.toMatrixOrthonormal_symm_apply"],
 ["simpNF", "LinearMap.toMatrix_algebraMap"],
 ["simpNF", "LinearMap.toSeminormFamily_apply"],
 ["simpNF", "LinearMap.toSeminorm_apply"],
 ["simpNF", "LinearOrderedField.coe_inducedOrderRingIso"],
 ["simpNF", "LinearOrderedField.inducedOrderRingHom_toFun"],
 ["simpNF", "LinearOrderedField.mem_cutMap_iff"],
 ["simpNF", "LinearPMap.adjointDomainMkClmExtend_apply"],
 ["simpNF", "LinearPMap.coe_smul"],
 ["simpNF", "LinearPMap.coe_vadd"],
 ["simpNF", "LinearPMap.mem_graph_iff"],
 ["simpNF", "LipschitzWith.coe_toLocallyBoundedMap"],
 ["simpNF", "List.bind_eq_nil"],
 ["simpNF", "List.bind_singleton'"],
 ["simpNF", "List.card_cons_of_mem"],
 ["simpNF", "List.card_cons_of_not_mem"],
 ["simpNF", "List.card_insert_of_mem"],
 ["simpNF", "List.card_insert_of_not_mem"],
 ["simpNF", "List.coe_toFinset"],
 ["simpNF", "List.cons_bagInter_of_neg"],
 ["simpNF", "List.cons_bagInter_of_pos"],
 ["simpNF", "List.count_add_count_not"],
 ["simpNF", "List.count_attach"],
 ["simpNF", "List.count_bagInter"],
 ["simpNF", "List.count_eq_one_of_mem"],
 ["simpNF", "List.count_false_add_count_true"],
 ["simpNF", "List.count_map_of_injective"],
 ["simpNF", "List.count_not_add_count"],
 ["simpNF", "List.count_true_add_count_false"],
 ["simpNF", "List.dedup_cons_of_mem"],
 ["simpNF", "List.dedup_cons_of_not_mem"],
 ["simpNF", "List.dlookup_kerase"],
 ["simpNF", "List.dlookup_kerase_ne"],
 ["simpNF", "List.dlookup_kunion_eq_some"],
 ["simpNF", "List.dlookup_kunion_left"],
 ["simpNF", "List.dlookup_kunion_right"],
 ["simpNF", "List.dropWhile_eq_nil_iff"],
 ["simpNF", "List.dropWhile_eq_self_iff"],
 ["simpNF", "List.duplicate_cons_self_iff"],
 ["simpNF", "List.filter_false"],
 ["simpNF", "List.filter_true"],
 ["simpNF", "List.find?_mem"],
 ["simpNF", "List.finite_toSet"],
 ["simpNF", "List.foldl_fixed"],
 ["simpNF", "List.foldrRecOn_cons"],
 ["simpNF", "List.foldr_fixed"],
 ["simpNF", "List.foldr_join"],
 ["simpNF", "List.forall_cons"],
 ["simpNF", "List.forall_mem_ne"],
 ["simpNF", "List.forall_mem_ofFn_iff"],
 ["simpNF", "List.forall₂_map_left_iff"],
 ["simpNF", "List.forall₂_map_right_iff"],
 ["simpNF", "List.forall₂_same"],
 ["simpNF", "List.indexOf_cons_ne"],
 ["simpNF", "List.indexOf_cons_self"],
 ["simpNF", "List.indexOf_finRange"],
 ["simpNF", "List.indexOf_get"],
 ["simpNF", "List.indexOf_get?"],
 ["simpNF", "List.indexOf_nthLe"],
 ["simpNF", "List.indexOf_of_not_mem"],
 ["simpNF", "List.inter_cons_of_mem"],
 ["simpNF", "List.inter_cons_of_not_mem"],
 ["simpNF", "List.join_eq_nil"],
 ["simpNF", "List.join_filter_isEmpty_eq_false"],
 ["simpNF", "List.join_filter_ne_nil"],
 ["simpNF", "List.kerase_cons_eq"],
 ["simpNF", "List.kerase_cons_ne"],
 ["simpNF", "List.kerase_of_not_mem_keys"],
 ["simpNF", "List.kextract_eq_dlookup_kerase"],
 ["simpNF", "List.kinsert_def"],
 ["simpNF", "List.kunion_cons"],
 ["simpNF", "List.kunion_kerase"],
 ["simpNF", "List.length_eraseP_add_one"],
 ["simpNF", "List.length_erase_add_one"],
 ["simpNF", "List.lookmap_cons_none"],
 ["simpNF", "List.lookmap_cons_some"],
 ["simpNF", "List.mapIdx_cons"],
 ["simpNF", "List.map_const'"],
 ["simpNF", "List.map₂Left'_nil_right"],
 ["simpNF", "List.map₂Left_nil_right"],
 ["simpNF", "List.mem_attach"],
 ["simpNF", "List.mem_bagInter"],
 ["simpNF", "List.mem_cyclicPermutations_iff"],
 ["simpNF", "List.mem_dedup"],
 ["simpNF", "List.mem_finRange"],
 ["simpNF", "List.mem_inits"],
 ["simpNF", "List.mem_keys_kerase_of_ne"],
 ["simpNF", "List.mem_keys_kunion"],
 ["simpNF", "List.mem_map_swap"],
 ["simpNF", "List.mem_permutations"],
 ["simpNF", "List.mem_permutations'"],
 ["simpNF", "List.mem_pmap"],
 ["simpNF", "List.mem_product"],
 ["simpNF", "List.mem_pure"],
 ["simpNF", "List.mem_rotate"],
 ["simpNF", "List.mem_sigma"],
 ["simpNF", "List.mem_sublists"],
 ["simpNF", "List.mem_sublists'"],
 ["simpNF", "List.mem_sublistsLen"],
 ["simpNF", "List.mem_tails"],
 ["simpNF", "List.mem_toFinset"],
 ["simpNF", "List.nodupKeys_cons"],
 ["simpNF", "List.nodup_cons"],
 ["simpNF", "List.not_mem_keys_kerase"],
 ["simpNF", "List.nthLe_index_of"],
 ["simpNF", "List.ofFn_const"],
 ["simpNF", "List.ofFn_succ"],
 ["simpNF", "List.pairwise_ofFn"],
 ["simpNF", "List.permutationsAux2_snd_cons"],
 ["simpNF", "List.permutationsAux_cons"],
 ["simpNF", "List.pmap_eq_map"],
 ["simpNF", "List.prod_eq_zero_iff"],
 ["simpNF", "List.prod_erase"],
 ["simpNF", "List.prod_map_mul"],
 ["simpNF", "List.rdropWhile_eq_nil_iff"],
 ["simpNF", "List.rdropWhile_eq_self_iff"],
 ["simpNF", "List.reverse_foldl"],
 ["simpNF", "List.rotate'_zero"],
 ["simpNF", "List.rtakeWhile_eq_nil_iff"],
 ["simpNF", "List.rtakeWhile_eq_self_iff"],
 ["simpNF", "List.sigma_nil"],
 ["simpNF", "List.sorted_cons"],
 ["simpNF", "List.splitOnP_cons"],
 ["simpNF", "List.sublists_concat"],
 ["simpNF", "List.suffix_insert"],
 ["simpNF", "List.sum_erase"],
 ["simpNF", "List.sum_map_add"],
 ["simpNF", "List.sum_zipWith_distrib_left"],
 ["simpNF", "List.tails_append"],
 ["simpNF", "List.takeWhile_eq_nil_iff"],
 ["simpNF", "List.takeWhile_eq_self_iff"],
 ["simpNF", "List.toFinset_cons"],
 ["simpNF", "List.traverse_append"],
 ["simpNF", "List.traverse_cons"],
 ["simpNF", "List.zipLeft'_nil_right"],
 ["simpNF", "List.zipLeft_nil_right"],
 ["simpNF", "List.zipWith3_same_left"],
 ["simpNF", "List.zipWith3_same_mid"],
 ["simpNF", "List.zipWith3_same_right"],
 ["simpNF", "List.zipWith_same"],
 ["simpNF", "Locale.localePointOfSpacePoint_toFun"],
 ["simpNF", "Locale.openOfElementHom_toFun"],
 ["simpNF", "LocalizedModule.divBy_apply"],
 ["simpNF", "LocallyConstant.coe_add"],
 ["simpNF", "LocallyConstant.coe_algebraMap"],
 ["simpNF", "LocallyConstant.coe_inv"],
 ["simpNF", "LocallyConstant.coe_mul"],
 ["simpNF", "LocallyConstant.coe_neg"],
 ["simpNF", "LocallyConstant.coe_smul"],
 ["simpNF", "LocallyConstant.coe_vadd"],
 ["simpNF", "LowerSet.Iic_sInf"],
 ["simpNF", "LowerSet.coe_sInf"],
 ["simpNF", "LowerSet.coe_sSup"],
 ["simpNF", "LowerSet.iSup_Iic"],
 ["simpNF", "LowerSet.mem_iInf_iff"],
 ["simpNF", "LowerSet.mem_sInf_iff"],
 ["simpNF", "LowerSet.mem_sSup_iff"],
 ["simpNF", "LowerSet.supIrred_iff_of_finite"],
 ["simpNF", "ManyOneDegree.liftOn₂_eq"],
 ["simpNF", "Matrix.add_cons"],
 ["simpNF", "Matrix.add_dotProduct"],
 ["simpNF", "Matrix.adjugate_diagonal"],
 ["simpNF", "Matrix.blockDiag'_add"],
 ["simpNF", "Matrix.blockDiag'_diagonal"],
 ["simpNF", "Matrix.blockDiag'_neg"],
 ["simpNF", "Matrix.blockDiag'_smul"],
 ["simpNF", "Matrix.blockDiag'_sub"],
 ["simpNF", "Matrix.blockDiag_add"],
 ["simpNF", "Matrix.blockDiag_diagonal"],
 ["simpNF", "Matrix.blockDiag_neg"],
 ["simpNF", "Matrix.blockDiag_smul"],
 ["simpNF", "Matrix.blockDiag_sub"],
 ["simpNF", "Matrix.blockDiagonal'_add"],
 ["simpNF", "Matrix.blockDiagonal'_conjTranspose"],
 ["simpNF", "Matrix.blockDiagonal'_diagonal"],
 ["simpNF", "Matrix.blockDiagonal'_mul"],
 ["simpNF", "Matrix.blockDiagonal'_neg"],
 ["simpNF", "Matrix.blockDiagonal'_pow"],
 ["simpNF", "Matrix.blockDiagonal'_smul"],
 ["simpNF", "Matrix.blockDiagonal'_sub"],
 ["simpNF", "Matrix.blockDiagonal'_transpose"],
 ["simpNF", "Matrix.blockDiagonal_add"],
 ["simpNF", "Matrix.blockDiagonal_conjTranspose"],
 ["simpNF", "Matrix.blockDiagonal_diagonal"],
 ["simpNF", "Matrix.blockDiagonal_mul"],
 ["simpNF", "Matrix.blockDiagonal_neg"],
 ["simpNF", "Matrix.blockDiagonal_pow"],
 ["simpNF", "Matrix.blockDiagonal_smul"],
 ["simpNF", "Matrix.blockDiagonal_sub"],
 ["simpNF", "Matrix.blockDiagonal_transpose"],
 ["simpNF", "Matrix.circulant_single"],
 ["simpNF", "Matrix.circulant_single_one"],
 ["simpNF", "Matrix.col_add"],
 ["simpNF", "Matrix.col_cons"],
 ["simpNF", "Matrix.col_smul"],
 ["simpNF", "Matrix.conjTranspose_col"],
 ["simpNF", "Matrix.conjTranspose_row"],
 ["simpNF", "Matrix.conjTranspose_smul_non_comm"],
 ["simpNF", "Matrix.cons_add"],
 ["simpNF", "Matrix.cons_sub"],
 ["simpNF", "Matrix.cons_transpose"],
 ["simpNF", "Matrix.cons_val'"],
 ["simpNF", "Matrix.cons_vecMul"],
 ["simpNF", "Matrix.cons_vecMulVec"],
 ["simpNF", "Matrix.det_blockDiagonal"],
 ["simpNF", "Matrix.det_conjTranspose"],
 ["simpNF", "Matrix.det_diagonal"],
 ["simpNF", "Matrix.det_fin_two_of"],
 ["simpNF", "Matrix.det_fin_zero"],
 ["simpNF", "Matrix.det_fromBlocks_one₁₁"],
 ["simpNF", "Matrix.det_fromBlocks_one₂₂"],
 ["simpNF", "Matrix.det_fromBlocks_zero₁₂"],
 ["simpNF", "Matrix.det_fromBlocks_zero₂₁"],
 ["simpNF", "Matrix.det_mul"],
 ["simpNF", "Matrix.det_nonsing_inv"],
 ["simpNF", "Matrix.det_one"],
 ["simpNF", "Matrix.det_permutation"],
 ["simpNF", "Matrix.det_pow"],
 ["simpNF", "Matrix.det_smul_inv_mulVec_eq_cramer"],
 ["simpNF", "Matrix.det_smul_inv_vecMul_eq_cramer_transpose"],
 ["simpNF", "Matrix.det_smul_of_tower"],
 ["simpNF", "Matrix.det_submatrix_equiv_self"],
 ["simpNF", "Matrix.det_toSquareBlock_id"],
 ["simpNF", "Matrix.det_transpose"],
 ["simpNF", "Matrix.det_transvection_of_ne"],
 ["simpNF", "Matrix.det_unique"],
 ["simpNF", "Matrix.det_vandermonde_add"],
 ["simpNF", "Matrix.det_vandermonde_sub"],
 ["simpNF", "Matrix.diag_add"],
 ["simpNF", "Matrix.diag_col_mul_row"],
 ["simpNF", "Matrix.diag_conjTranspose"],
 ["simpNF", "Matrix.diag_list_sum"],
 ["simpNF", "Matrix.diag_multiset_sum"],
 ["simpNF", "Matrix.diag_neg"],
 ["simpNF", "Matrix.diag_smul"],
 ["simpNF", "Matrix.diag_sub"],
 ["simpNF", "Matrix.diag_sum"],
 ["simpNF", "Matrix.diagonal_add"],
 ["simpNF", "Matrix.diagonal_conjTranspose"],
 ["simpNF", "Matrix.diagonal_eq_diagonal_iff"],
 ["simpNF", "Matrix.diagonal_map"],
 ["simpNF", "Matrix.diagonal_mul_diagonal"],
 ["simpNF", "Matrix.diagonal_neg"],
 ["simpNF", "Matrix.diagonal_one"],
 ["simpNF", "Matrix.diagonal_smul"],
 ["simpNF", "Matrix.diagonal_sub"],
 ["simpNF", "Matrix.diagonal_zero"],
 ["simpNF", "Matrix.dotProduct_add"],
 ["simpNF", "Matrix.dotProduct_diagonal'"],
 ["simpNF", "Matrix.dotProduct_neg"],
 ["simpNF", "Matrix.dotProduct_self_star_eq_zero"],
 ["simpNF", "Matrix.dotProduct_single"],
 ["simpNF", "Matrix.dotProduct_smul"],
 ["simpNF", "Matrix.dotProduct_star_self_eq_zero"],
 ["simpNF", "Matrix.dotProduct_sub"],
 ["simpNF", "Matrix.dotProduct_zero'"],
 ["simpNF", "Matrix.dualNumberEquiv_apply"],
 ["simpNF", "Matrix.dualNumberEquiv_symm_apply"],
 ["simpNF", "Matrix.empty_add_empty"],
 ["simpNF", "Matrix.empty_sub_empty"],
 ["simpNF", "Matrix.frobenius_nnnorm_col"],
 ["simpNF", "Matrix.frobenius_nnnorm_diagonal"],
 ["simpNF", "Matrix.frobenius_nnnorm_map_eq"],
 ["simpNF", "Matrix.frobenius_nnnorm_row"],
 ["simpNF", "Matrix.frobenius_norm_col"],
 ["simpNF", "Matrix.frobenius_norm_diagonal"],
 ["simpNF", "Matrix.frobenius_norm_map_eq"],
 ["simpNF", "Matrix.frobenius_norm_row"],
 ["simpNF", "Matrix.head_add"],
 ["simpNF", "Matrix.head_fin_const"],
 ["simpNF", "Matrix.head_neg"],
 ["simpNF", "Matrix.head_sub"],
 ["simpNF", "Matrix.inv_inv_inv"],
 ["simpNF", "Matrix.inv_mul_cancel_left_of_invertible"],
 ["simpNF", "Matrix.inv_mul_cancel_right_of_invertible"],
 ["simpNF", "Matrix.inv_mul_of_invertible"],
 ["simpNF", "Matrix.isHermitian_submatrix_equiv"],
 ["simpNF", "Matrix.isUnit_diagonal"],
 ["simpNF", "Matrix.kroneckerMapBilinear_apply_apply"],
 ["simpNF", "Matrix.kroneckerMap_one_one"],
 ["simpNF", "Matrix.kroneckerMap_zero_left"],
 ["simpNF", "Matrix.kroneckerMap_zero_right"],
 ["simpNF", "Matrix.linfty_op_nnnorm_diagonal"],
 ["simpNF", "Matrix.linfty_op_nnnorm_row"],
 ["simpNF", "Matrix.linfty_op_nnnorm_toMatrix"],
 ["simpNF", "Matrix.linfty_op_norm_col"],
 ["simpNF", "Matrix.linfty_op_norm_diagonal"],
 ["simpNF", "Matrix.linfty_op_norm_row"],
 ["simpNF", "Matrix.linfty_op_norm_toMatrix"],
 ["simpNF", "Matrix.map_id'"],
 ["simpNF", "Matrix.mem_glpos"],
 ["simpNF", "Matrix.mulVec_cons"],
 ["simpNF", "Matrix.mulVec_cramer"],
 ["simpNF", "Matrix.mulVec_single"],
 ["simpNF", "Matrix.mul_empty"],
 ["simpNF", "Matrix.mul_inv_cancel_left_of_invertible"],
 ["simpNF", "Matrix.mul_inv_cancel_right_of_invertible"],
 ["simpNF", "Matrix.mul_inv_of_invertible"],
 ["simpNF", "Matrix.mul_mul_left"],
 ["simpNF", "Matrix.mul_mul_right"],
 ["simpNF", "Matrix.mul_nonsing_inv"],
 ["simpNF", "Matrix.mul_nonsing_inv_cancel_left"],
 ["simpNF", "Matrix.mul_nonsing_inv_cancel_right"],
 ["simpNF", "Matrix.neg_cons"],
 ["simpNF", "Matrix.neg_dotProduct"],
 ["simpNF", "Matrix.neg_empty"],
 ["simpNF", "Matrix.neg_of"],
 ["simpNF", "Matrix.nnnorm_col"],
 ["simpNF", "Matrix.nnnorm_diagonal"],
 ["simpNF", "Matrix.nnnorm_map_eq"],
 ["simpNF", "Matrix.nnnorm_row"],
 ["simpNF", "Matrix.nonsing_inv_mul"],
 ["simpNF", "Matrix.nonsing_inv_mul_cancel_left"],
 ["simpNF", "Matrix.nonsing_inv_mul_cancel_right"],
 ["simpNF", "Matrix.nonsing_inv_nonsing_inv"],
 ["simpNF", "Matrix.norm_col"],
 ["simpNF", "Matrix.norm_diagonal"],
 ["simpNF", "Matrix.norm_map_eq"],
 ["simpNF", "Matrix.norm_row"],
 ["simpNF", "Matrix.of_add_of"],
 ["simpNF", "Matrix.of_sub_of"],
 ["simpNF", "Matrix.one_kroneckerTMul_one"],
 ["simpNF", "Matrix.piLp_equiv_toEuclideanClm"],
 ["simpNF", "Matrix.piLp_equiv_toEuclideanLin"],
 ["simpNF", "Matrix.posSemidef_submatrix_equiv"],
 ["simpNF", "Matrix.range_cons"],
 ["simpNF", "Matrix.row_add"],
 ["simpNF", "Matrix.row_cons"],
 ["simpNF", "Matrix.row_empty"],
 ["simpNF", "Matrix.row_smul"],
 ["simpNF", "Matrix.scalar_apply"],
 ["simpNF", "Matrix.single_dotProduct"],
 ["simpNF", "Matrix.single_vecMul"],
 ["simpNF", "Matrix.smul_cons"],
 ["simpNF", "Matrix.smul_dotProduct"],
 ["simpNF", "Matrix.smul_empty"],
 ["simpNF", "Matrix.smul_of"],
 ["simpNF", "Matrix.sub_cons"],
 ["simpNF", "Matrix.sub_dotProduct"],
 ["simpNF", "Matrix.submatrix_cons_row"],
 ["simpNF", "Matrix.tail_add"],
 ["simpNF", "Matrix.tail_neg"],
 ["simpNF", "Matrix.tail_sub"],
 ["simpNF", "Matrix.toBilin_apply"],
 ["simpNF", "Matrix.toBlocks₁₁_diagonal"],
 ["simpNF", "Matrix.toBlocks₂₂_diagonal"],
 ["simpNF", "Matrix.toEuclideanClm_piLp_equiv_symm"],
 ["simpNF", "Matrix.toEuclideanLin_piLp_equiv_symm"],
 ["simpNF", "Matrix.toLinAlgEquiv_self"],
 ["simpNF", "Matrix.toLin_self"],
 ["simpNF", "Matrix.toLinearMap₂_apply"],
 ["simpNF", "Matrix.trace_sum"],
 ["simpNF", "Matrix.transpose_empty_cols"],
 ["simpNF", "Matrix.updateColumn_eq_self"],
 ["simpNF", "Matrix.vandermonde_cons"],
 ["simpNF", "Matrix.vecCons_const"],
 ["simpNF", "Matrix.vecMulVec_cons"],
 ["simpNF", "Matrix.vecMulVec_empty"],
 ["simpNF", "Matrix.vecMul_cons"],
 ["simpNF", "Matrix.zero_dotProduct'"],
 ["simpNF", "Matrix.zpow_neg_coe_nat"],
 ["simpNF", "Matrix.zpow_neg_one"],
 ["simpNF", "Matroid.dualIndepMatroid_Indep"],
 ["simpNF", "Matroid.dual_indep_iff_exists"],
 ["simpNF", "MeasurableEquiv.coe_addLeft"],
 ["simpNF", "MeasurableEquiv.coe_addRight"],
 ["simpNF", "MeasurableEquiv.coe_mulLeft"],
 ["simpNF", "MeasurableEquiv.coe_mulLeft₀"],
 ["simpNF", "MeasurableEquiv.coe_mulRight"],
 ["simpNF", "MeasurableEquiv.coe_mulRight₀"],
 ["simpNF", "MeasurableEquiv.coe_smul₀"],
 ["simpNF", "MeasurableEquiv.finTwoArrow_apply"],
 ["simpNF", "MeasurableEquiv.finTwoArrow_symm_apply"],
 ["simpNF", "MeasurableEquiv.funUnique_apply"],
 ["simpNF", "MeasurableEquiv.inv_apply"],
 ["simpNF", "MeasurableEquiv.map_map_symm"],
 ["simpNF", "MeasurableEquiv.map_symm_map"],
 ["simpNF", "MeasurableEquiv.neg_apply"],
 ["simpNF", "MeasurableEquiv.piEquivPiSubtypeProd_apply"],
 ["simpNF", "MeasurableEquiv.piEquivPiSubtypeProd_symm_apply"],
 ["simpNF", "MeasurableEquiv.piFinSuccAbove_apply"],
 ["simpNF", "MeasurableEquiv.piFinSuccAbove_symm_apply"],
 ["simpNF", "MeasurableEquiv.piFinTwo_apply"],
 ["simpNF", "MeasurableEquiv.piFinTwo_symm_apply"],
 ["simpNF", "MeasurableEquiv.piUnique_apply"],
 ["simpNF", "MeasurableEquiv.smul_apply"],
 ["simpNF", "MeasurableEquiv.vadd_apply"],
 ["simpNF", "MeasurableSet.disjointed"],
 ["simpNF", "MeasurableSpace.comap_const"],
 ["simpNF", "MeasurableSpace.comap_not"],
 ["simpNF", "MeasurableSpace.generateFrom_singleton"],
 ["simpNF", "MeasurableSpace.map_const"],
 ["simpNF", "MeasurableSpace.measurableSet_sInf"],
 ["simpNF", "MeasureTheory.ae_eq_set_compl_compl"],
 ["simpNF", "MeasureTheory.ae_restrict_biUnion_finset_iff"],
 ["simpNF", "MeasureTheory.ae_restrict_iUnion_eq"],
 ["simpNF", "MeasureTheory.average_const"],
 ["simpNF", "MeasureTheory.average_neg"],
 ["simpNF", "MeasureTheory.average_zero"],
 ["simpNF", "MeasureTheory.extend_top"],
 ["simpNF", "MeasureTheory.hasFiniteIntegral_neg_iff"],
 ["simpNF", "MeasureTheory.hasFiniteIntegral_zero"],
 ["simpNF", "MeasureTheory.indicatorConstLp_univ"],
 ["simpNF", "MeasureTheory.integrableOn_const"],
 ["simpNF", "MeasureTheory.integrableOn_finite_biUnion"],
 ["simpNF", "MeasureTheory.integrableOn_finite_iUnion"],
 ["simpNF", "MeasureTheory.integrableOn_finset_iUnion"],
 ["simpNF", "MeasureTheory.integrable_const"],
 ["simpNF", "MeasureTheory.integrable_neg_iff"],
 ["simpNF", "MeasureTheory.integrable_zero"],
 ["simpNF", "MeasureTheory.integral_const"],
 ["simpNF", "MeasureTheory.integral_indicator_const"],
 ["simpNF", "MeasureTheory.integral_zero"],
 ["simpNF", "MeasureTheory.laverage_const"],
 ["simpNF", "MeasureTheory.laverage_zero"],
 ["simpNF", "MeasureTheory.lintegral_add_left"],
 ["simpNF", "MeasureTheory.lintegral_add_right"],
 ["simpNF", "MeasureTheory.lintegral_const"],
 ["simpNF", "MeasureTheory.lintegral_const_mul"],
 ["simpNF", "MeasureTheory.lintegral_finset_sum_measure"],
 ["simpNF", "MeasureTheory.lintegral_sum_measure"],
 ["simpNF", "MeasureTheory.lmarginal_univ"],
 ["simpNF", "MeasureTheory.measure_iUnion_toMeasurable"],
 ["simpNF", "MeasureTheory.measure_preimage_add_right"],
 ["simpNF", "MeasureTheory.measure_preimage_mul_right"],
 ["simpNF", "MeasureTheory.mem_addFundamentalFrontier"],
 ["simpNF", "MeasureTheory.mem_addFundamentalInterior"],
 ["simpNF", "MeasureTheory.mem_cylinder"],
 ["simpNF", "MeasureTheory.mem_fundamentalFrontier"],
 ["simpNF", "MeasureTheory.mem_fundamentalInterior"],
 ["simpNF", "MeasureTheory.mem_measurableCylinders"],
 ["simpNF", "MeasureTheory.snorm'_neg"],
 ["simpNF", "MeasureTheory.snorm'_norm"],
 ["simpNF", "MeasureTheory.snorm_neg"],
 ["simpNF", "MeasureTheory.snorm_norm"],
 ["simpNF", "MeasureTheory.snorm_zero'"],
 ["simpNF", "MeasureTheory.tilted_const'"],
 ["simpNF", "MeasureTheory.tilted_neg_same"],
 ["simpNF", "MeasureTheory.tilted_neg_same'"],
 ["simpNF", "MeasureTheory.tilted_of_not_aemeasurable"],
 ["simpNF", "MeasureTheory.tilted_of_not_integrable"],
 ["simpNF", "MeasureTheory.tilted_zero'"],
 ["simpNF", "MeasureTheory.tilted_zero_measure"],
 ["simpNF", "MeasureTheory.upperCrossingTime_zero"],
 ["simpNF", "MeasureTheory.withDensitySMulLI_apply"],
 ["simpNF", "MeasureTheory.withDensity_const"],
 ["simpNF", "MeasureTheory.withDensityᵥ_add"],
 ["simpNF", "MeasureTheory.withDensityᵥ_neg"],
 ["simpNF", "MeasureTheory.withDensityᵥ_smul"],
 ["simpNF", "MeasureTheory.withDensityᵥ_sub"],
 ["simpNF", "Memℓp.neg_iff"],
 ["simpNF", "Memℓp.star_iff"],
 ["simpNF", "MeromorphicAt.inv_iff"],
 ["simpNF", "MeromorphicAt.neg_iff"],
 ["simpNF", "Metric.comap_dist_right_atTop"],
 ["simpNF", "Metric.iUnion_ball_nat"],
 ["simpNF", "Metric.iUnion_ball_nat_succ"],
 ["simpNF", "Metric.iUnion_closedBall_nat"],
 ["simpNF", "Metric.preimage_add_right_ball"],
 ["simpNF", "Metric.preimage_add_right_closedBall"],
 ["simpNF", "Metric.preimage_mul_right_ball"],
 ["simpNF", "Metric.preimage_mul_right_closedBall"],
 ["simpNF", "Metric.tendsto_dist_left_atTop_iff"],
 ["simpNF", "Metric.tendsto_dist_right_atTop_iff"],
 ["simpNF", "ModelWithCorners.coe_transDiffeomorph"],
 ["simpNF", "ModelWithCorners.coe_transDiffeomorph_symm"],
 ["simpNF", "ModelWithCorners.right_inv"],
 ["simpNF", "ModelWithCorners.toHomeomorph_apply"],
 ["simpNF", "ModelWithCorners.toHomeomorph_symm_apply"],
 ["simpNF", "ModularForm.add_apply"],
 ["simpNF", "ModularForm.coeHom_apply"],
 ["simpNF", "ModularForm.coe_add"],
 ["simpNF", "ModularForm.coe_intCast"],
 ["simpNF", "ModularForm.coe_natCast"],
 ["simpNF", "ModularForm.coe_neg"],
 ["simpNF", "ModularForm.coe_smul"],
 ["simpNF", "ModularForm.coe_sub"],
 ["simpNF", "ModularForm.coe_zero"],
 ["simpNF", "ModularForm.const_toFun"],
 ["simpNF", "ModularForm.mul_coe"],
 ["simpNF", "ModularForm.neg_apply"],
 ["simpNF", "ModularForm.one_coe_eq_one"],
 ["simpNF", "ModularForm.smul_apply"],
 ["simpNF", "ModularForm.sub_apply"],
 ["simpNF", "ModularForm.toSlashInvariantForm_coe"],
 ["simpNF", "ModularForm.zero_apply"],
 ["simpNF", "ModularGroup.lcRow0Extend_apply"],
 ["simpNF", "ModularGroup.lcRow0Extend_symm_apply"],
 ["simpNF", "ModularGroup.lcRow0_apply"],
 ["simpNF", "Monoid.le_minOrder"],
 ["simpNF", "Monoid.not_isTorsionFree_iff"],
 ["simpNF", "Monoid.not_isTorsion_iff"],
 ["simpNF", "MonoidAlgebra.liftMagma_apply_apply"],
 ["simpNF", "MonoidHom.coe_dfinsupp_prod"],
 ["simpNF", "MonoidHom.finset_prod_apply"],
 ["simpNF", "MonoidHom.finsupp_prod_apply"],
 ["simpNF", "MonoidHom.mem_mrange"],
 ["simpNF", "MonoidHom.mem_range"],
 ["simpNF", "MonoidHom.noncommPiCoprod_mulSingle"],
 ["simpNF", "MonoidHom.single_apply"],
 ["simpNF", "MulAction.mem_fixedPoints"],
 ["simpNF", "MulAction.stabilizer_smul_eq_left"],
 ["simpNF", "MulChar.coeToFun_mul"],
 ["simpNF", "MulEquiv.piCongrRight_refl"],
 ["simpNF", "MulEquiv.piCongrRight_symm"],
 ["simpNF", "MulEquiv.piCongrRight_trans"],
 ["simpNF", "MulHom.mem_srange"],
 ["simpNF", "MulRingSeminorm.apply_one"],
 ["simpNF", "MulRingSeminorm.toFun_eq_coe"],
 ["simpNF", "MultilinearMap.coe_mkContinuous"],
 ["simpNF", "MultilinearMap.coe_sum"],
 ["simpNF", "MultilinearMap.compLinearMap_apply"],
 ["simpNF", "MultilinearMap.compLinearMap_id"],
 ["simpNF", "MultilinearMap.comp_linearEquiv_eq_zero_iff"],
 ["simpNF", "MultilinearMap.curryFinFinset_apply"],
 ["simpNF", "MultilinearMap.curryFinFinset_apply_const_aux"],
 ["simpNF", "MultilinearMap.curryFinFinset_symm_apply"],
 ["simpNF", "MultilinearMap.curryFinFinset_symm_apply_const"],
 ["simpNF", "MultilinearMap.curryFinFinset_symm_apply_piecewise_const_aux"],
 ["simpNF", "MultilinearMap.domCoprod_apply"],
 ["simpNF", "MultilinearMap.domDomCongr_apply"],
 ["simpNF", "MultilinearMap.domDomRestrict_apply"],
 ["simpNF", "MultilinearMap.linearDeriv_apply"],
 ["simpNF", "MultilinearMap.map_update_smul"],
 ["simpNF", "MultilinearMap.mkContinuousMultilinear_apply"],
 ["simpNF", "MultilinearMap.ofSubsingleton_symm_apply_apply"],
 ["simpNF", "Multiset.Ico_filter_lt"],
 ["simpNF", "Multiset.antidiagonal_cons"],
 ["simpNF", "Multiset.bind_add"],
 ["simpNF", "Multiset.bind_cons"],
 ["simpNF", "Multiset.bind_singleton"],
 ["simpNF", "Multiset.bind_zero"],
 ["simpNF", "Multiset.card_bind"],
 ["simpNF", "Multiset.card_sigma"],
 ["simpNF", "Multiset.coe_bind"],
 ["simpNF", "Multiset.coe_count"],
 ["simpNF", "Multiset.coe_countP"],
 ["simpNF", "Multiset.coe_erase"],
 ["simpNF", "Multiset.coe_filter"],
 ["simpNF", "Multiset.coe_ndinsert"],
 ["simpNF", "Multiset.coe_sigma"],
 ["simpNF", "Multiset.countP_False"],
 ["simpNF", "Multiset.countP_True"],
 ["simpNF", "Multiset.countP_filter"],
 ["simpNF", "Multiset.count_filter_of_neg"],
 ["simpNF", "Multiset.count_filter_of_pos"],
 ["simpNF", "Multiset.count_inter"],
 ["simpNF", "Multiset.exists_coe"],
 ["simpNF", "Multiset.filterMap_cons_none"],
 ["simpNF", "Multiset.filterMap_cons_some"],
 ["simpNF", "Multiset.filter_filter"],
 ["simpNF", "Multiset.finite_toSet"],
 ["simpNF", "Multiset.finite_toSet_toFinset"],
 ["simpNF", "Multiset.forall_coe"],
 ["simpNF", "Multiset.inf_add"],
 ["simpNF", "Multiset.inf_cons"],
 ["simpNF", "Multiset.inf_ndinsert"],
 ["simpNF", "Multiset.inf_ndunion"],
 ["simpNF", "Multiset.inf_union"],
 ["simpNF", "Multiset.le_inf"],
 ["simpNF", "Multiset.map_const'"],
 ["simpNF", "Multiset.map_count_True_eq_filter_card"],
 ["simpNF", "Multiset.map_id'"],
 ["simpNF", "Multiset.map_map"],
 ["simpNF", "Multiset.map_univ"],
 ["simpNF", "Multiset.mem_bind"],
 ["simpNF", "Multiset.mem_coe"],
 ["simpNF", "Multiset.mem_filterMap"],
 ["simpNF", "Multiset.mem_join"],
 ["simpNF", "Multiset.mem_map"],
 ["simpNF", "Multiset.mem_pmap"],
 ["simpNF", "Multiset.mem_powersetAux"],
 ["simpNF", "Multiset.mem_powersetCardAux"],
 ["simpNF", "Multiset.mem_sort"],
 ["simpNF", "Multiset.mem_toList"],
 ["simpNF", "Multiset.nodup_bind"],
 ["simpNF", "Multiset.pi_cons"],
 ["simpNF", "Multiset.prod_bind"],
 ["simpNF", "Multiset.prod_map_div"],
 ["simpNF", "Multiset.prod_map_inv"],
 ["simpNF", "Multiset.prod_map_mul"],
 ["simpNF", "Multiset.product_cons"],
 ["simpNF", "Multiset.sections_add"],
 ["simpNF", "Multiset.sections_cons"],
 ["simpNF", "Multiset.sigma_add"],
 ["simpNF", "Multiset.sigma_singleton"],
 ["simpNF", "Multiset.sum_bind"],
 ["simpNF", "Multiset.sum_map_add"],
 ["simpNF", "Multiset.sum_map_neg"],
 ["simpNF", "Multiset.sum_map_sub"],
 ["simpNF", "Multiset.sup_add"],
 ["simpNF", "Multiset.sup_cons"],
 ["simpNF", "Multiset.sup_le"],
 ["simpNF", "Multiset.sup_ndinsert"],
 ["simpNF", "Multiset.sup_ndunion"],
 ["simpNF", "Multiset.sup_union"],
 ["simpNF", "Multiset.toDFinsupp_inter"],
 ["simpNF", "Multiset.toDFinsupp_le_toDFinsupp"],
 ["simpNF", "Multiset.toDFinsupp_lt_toDFinsupp"],
 ["simpNF", "Multiset.toDFinsupp_union"],
 ["simpNF", "Multiset.toFinset_sum_count_eq"],
 ["simpNF", "Multiset.toFinset_sum_count_nsmul_eq"],
 ["simpNF", "MvFunctor.id_map'"],
 ["simpNF", "MvPolynomial.aeval_zero'"],
 ["simpNF", "MvPolynomial.coe_basisMonomials"],
 ["simpNF", "MvPolynomial.comp_eval₂Hom"],
 ["simpNF", "MvPolynomial.eval_zero'"],
 ["simpNF", "MvPolynomial.eval₂Hom_zero'"],
 ["simpNF", "MvPolynomial.eval₂_monomial"],
 ["simpNF", "MvPolynomial.eval₂_prod"],
 ["simpNF", "MvPolynomial.eval₂_sum"],
 ["simpNF", "MvPolynomial.eval₂_zero'_apply"],
 ["simpNF", "MvPolynomial.expand_monomial"],
 ["simpNF", "MvPolynomial.finSuccEquiv_apply"],
 ["simpNF", "MvPolynomial.map_aeval"],
 ["simpNF", "MvPolynomial.mem_vanishingIdeal_iff"],
 ["simpNF", "MvPolynomial.mem_zeroLocus_iff"],
 ["simpNF", "MvPolynomial.optionEquivLeft_apply"],
 ["simpNF", "MvPolynomial.pUnitAlgEquiv_apply"],
 ["simpNF", "MvPolynomial.support_sum_monomial_coeff"],
 ["simpNF", "MvPolynomial.totalDegree_monomial"],
 ["simpNF", "MvPolynomial.weightedHomogeneousComponent_zero"],
 ["simpNF", "MvPowerSeries.commute_monomial"],
 ["simpNF", "NNRat.coe_indicator"],
 ["simpNF", "NNReal.coe_indicator"],
 ["simpNF", "NNReal.mul_self_sqrt"],
 ["simpNF", "NNReal.orderIsoRpow_apply"],
 ["simpNF", "NNReal.rpowMonoidHom_apply"],
 ["simpNF", "NNReal.sq_sqrt"],
 ["simpNF", "NNReal.sqrt_eq_zero"],
 ["simpNF", "NNReal.sqrt_mul_self"],
 ["simpNF", "NNReal.sqrt_one"],
 ["simpNF", "NNReal.sqrt_pos"],
 ["simpNF", "NNReal.sqrt_sq"],
 ["simpNF", "NNReal.sqrt_zero"],
 ["simpNF", "NNReal.summable_rpow"],
 ["simpNF", "NNReal.summable_rpow_inv"],
 ["simpNF", "NNReal.tendsto_coe"],
 ["simpNF", "NNReal.tendsto_coe_atTop"],
 ["simpNF", "Nat.bit_cases_on_inj"],
 ["simpNF", "Nat.bits_append_bit"],
 ["simpNF", "Nat.card_zmultiples"],
 ["simpNF", "Nat.card_zpowers"],
 ["simpNF", "Nat.cast_finsupp_prod"],
 ["simpNF", "Nat.cast_finsupp_sum"],
 ["simpNF", "Nat.cast_pred"],
 ["simpNF", "Nat.cast_prod"],
 ["simpNF", "Nat.cast_sum"],
 ["simpNF", "Nat.filter_dvd_eq_divisors"],
 ["simpNF", "Nat.filter_dvd_eq_properDivisors"],
 ["simpNF", "Nat.findGreatest_pos"],
 ["simpNF", "Nat.find_le_iff"],
 ["simpNF", "Nat.find_lt_iff"],
 ["simpNF", "Nat.le_find_iff"],
 ["simpNF", "Nat.lt_find_iff"],
 ["simpNF", "Nat.mem_factors'"],
 ["simpNF", "Nat.mem_rfind"],
 ["simpNF", "Nat.one_le_cast"],
 ["simpNF", "Nat.one_le_ceil_iff"],
 ["simpNF", "Nat.one_le_floor_iff"],
 ["simpNF", "Nat.prod_divisors_prime_pow"],
 ["simpNF", "Nat.prod_properDivisors_prime_pow"],
 ["simpNF", "Nat.prod_range_factorial_succ"],
 ["simpNF", "Nat.rfind_dom"],
 ["simpNF", "Nat.size_bit"],
 ["simpNF", "Nat.sum_divisors_prime_pow"],
 ["simpNF", "Nat.sum_properDivisors_prime_nsmul"],
 ["simpNF", "NonUnitalAlgHom.coe_Lmul"],
 ["simpNF", "NonUnitalAlgHom.coe_inl"],
 ["simpNF", "NonUnitalAlgHom.mem_range"],
 ["simpNF", "NonUnitalAlgebra.coe_sInf"],
 ["simpNF", "NonUnitalRingHom.mem_range"],
 ["simpNF", "NonUnitalRingHom.mem_srange"],
 ["simpNF", "NonUnitalStarAlgHom.coe_inl"],
 ["simpNF", "NonUnitalStarAlgHom.mem_range"],
 ["simpNF", "NonUnitalStarAlgebra.coe_sInf"],
 ["simpNF", "NonUnitalStarSubalgebra.mem_map"],
 ["simpNF", "NonUnitalSubalgebra.mem_map"],
 ["simpNF", "NonUnitalSubalgebra.starClosure_carrier"],
 ["simpNF", "NonUnitalSubring.coe_sInf"],
 ["simpNF", "NonUnitalSubring.mem_map"],
 ["simpNF", "NonUnitalSubring.sInf_toAddSubgroup"],
 ["simpNF", "NonUnitalSubring.sInf_toSubsemigroup"],
 ["simpNF", "NonUnitalSubsemiring.coe_sInf"],
 ["simpNF", "NonUnitalSubsemiring.mem_map"],
 ["simpNF", "NonUnitalSubsemiring.sInf_toAddSubmonoid"],
 ["simpNF", "NonUnitalSubsemiring.sInf_toSubsemigroup"],
 ["simpNF", "NonarchAddGroupNorm.coe_le_coe"],
 ["simpNF", "NonarchAddGroupNorm.coe_lt_coe"],
 ["simpNF", "NonarchAddGroupNorm.coe_sup"],
 ["simpNF", "NonarchAddGroupSeminorm.coe_le_coe"],
 ["simpNF", "NonarchAddGroupSeminorm.coe_lt_coe"],
 ["simpNF", "NonarchAddGroupSeminorm.coe_smul"],
 ["simpNF", "NonarchAddGroupSeminorm.coe_sup"],
 ["simpNF", "Nonempty.forall"],
 ["simpNF", "NonemptyInterval.dual_map₂"],
 ["simpNF", "NonemptyInterval.length_sum"],
 ["simpNF", "NormedAddCommGroup.toCompl_apply"],
 ["simpNF", "NormedAddGroupHom.add_apply"],
 ["simpNF", "NormedAddGroupHom.coeAddHom_apply"],
 ["simpNF", "NormedAddGroupHom.coe_add"],
 ["simpNF", "NormedAddGroupHom.coe_mkNormedAddGroupHom"],
 ["simpNF", "NormedAddGroupHom.coe_mkNormedAddGroupHom'"],
 ["simpNF", "NormedAddGroupHom.coe_neg"],
 ["simpNF", "NormedAddGroupHom.coe_nsmul"],
 ["simpNF", "NormedAddGroupHom.coe_smul"],
 ["simpNF", "NormedAddGroupHom.coe_sub"],
 ["simpNF", "NormedAddGroupHom.coe_sum"],
 ["simpNF", "NormedAddGroupHom.coe_toAddMonoidHom"],
 ["simpNF", "NormedAddGroupHom.coe_zero"],
 ["simpNF", "NormedAddGroupHom.coe_zsmul"],
 ["simpNF", "NormedAddGroupHom.comp_apply"],
 ["simpNF", "NormedAddGroupHom.completion_coe'"],
 ["simpNF", "NormedAddGroupHom.completion_coe_to_fun"],
 ["simpNF", "NormedAddGroupHom.extension_coe"],
 ["simpNF", "NormedAddGroupHom.id_apply"],
 ["simpNF", "NormedAddGroupHom.incl_apply"],
 ["simpNF", "NormedAddGroupHom.mem_range_self"],
 ["simpNF", "NormedAddGroupHom.neg_apply"],
 ["simpNF", "NormedAddGroupHom.nsmul_apply"],
 ["simpNF", "NormedAddGroupHom.smul_apply"],
 ["simpNF", "NormedAddGroupHom.sub_apply"],
 ["simpNF", "NormedAddGroupHom.toFun_eq_coe"],
 ["simpNF", "NormedAddGroupHom.zero_apply"],
 ["simpNF", "NormedAddGroupHom.zsmul_apply"],
 ["simpNF", "NormedField.continuousAt_zpow"],
 ["simpNF", "NormedRing.algEquivComplexOfComplete_apply"],
 ["simpNF", "NormedRing.algEquivComplexOfComplete_symm_apply"],
 ["simpNF", "NormedSpace.dualPairing_apply"],
 ["simpNF", "NormedSpace.dual_def"],
 ["simpNF", "NumberField.place_apply"],
 ["simpNF", "ONote.fastGrowing_two"],
 ["simpNF", "OnePoint.insert_infty_range_coe"],
 ["simpNF", "Option.map₂_coe_right"],
 ["simpNF", "Option.mem_toList"],
 ["simpNF", "Option.none_orElse'"],
 ["simpNF", "Option.orElse_eq_none"],
 ["simpNF", "Option.orElse_eq_none'"],
 ["simpNF", "Option.orElse_none'"],
 ["simpNF", "Option.seq_some"],
 ["simpNF", "Option.some_orElse'"],
 ["simpNF", "OptionT.run_bind"],
 ["simpNF", "OptionT.run_monadLift"],
 ["simpNF", "Order.isPredLimit_iff"],
 ["simpNF", "Order.isPredLimit_iff_of_noMin"],
 ["simpNF", "Order.isSuccLimit_iff"],
 ["simpNF", "Order.isSuccLimit_iff_of_noMax"],
 ["simpNF", "Order.le_pred_iff_isMin"],
 ["simpNF", "Order.lt_succ_iff_not_isMax"],
 ["simpNF", "Order.pred_eq_iff_isMin"],
 ["simpNF", "Order.pred_lt_iff_not_isMin"],
 ["simpNF", "Order.pred_succ_of_not_isMax"],
 ["simpNF", "Order.succ_eq_iff_isMax"],
 ["simpNF", "Order.succ_le_iff_isMax"],
 ["simpNF", "Order.succ_pred_of_not_isMin"],
 ["simpNF", "OrderAddMonoidHom.coe_add"],
 ["simpNF", "OrderDual.exists"],
 ["simpNF", "OrderDual.forall"],
 ["simpNF", "OrderHom.coe_iInf"],
 ["simpNF", "OrderHom.coe_iSup"],
 ["simpNF", "OrderHom.coe_inf"],
 ["simpNF", "OrderHom.coe_le_coe"],
 ["simpNF", "OrderHom.coe_sup"],
 ["simpNF", "OrderHom.mk_le_mk"],
 ["simpNF", "OrderHom.sInf_apply"],
 ["simpNF", "OrderHom.sSup_apply"],
 ["simpNF", "OrderIso.isBoundedUnder_ge_comp"],
 ["simpNF", "OrderIso.isBoundedUnder_le_comp"],
 ["simpNF", "OrderIso.tendsto_atBot_iff"],
 ["simpNF", "OrderIso.tendsto_atTop_iff"],
 ["simpNF", "OrderMonoidHom.coe_mul"],
 ["simpNF", "OrderMonoidWithZeroHom.coe_mul"],
 ["simpNF", "Ordinal.blsub_id"],
 ["simpNF", "Ordinal.brange_const"],
 ["simpNF", "Ordinal.bsup_eq_blsub"],
 ["simpNF", "Ordinal.bsup_eq_zero_iff"],
 ["simpNF", "Ordinal.bsup_id_succ"],
 ["simpNF", "Ordinal.cof_eq_one_iff_is_succ"],
 ["simpNF", "Ordinal.lift_is_succ"],
 ["simpNF", "Ordinal.limitRecOn_limit"],
 ["simpNF", "Ordinal.lsub_const"],
 ["simpNF", "Ordinal.lsub_sum"],
 ["simpNF", "Ordinal.sup_add_nat"],
 ["simpNF", "Ordinal.sup_const"],
 ["simpNF", "Ordinal.sup_eq_zero_iff"],
 ["simpNF", "Ordinal.sup_iterate_eq_nfp"],
 ["simpNF", "Ordinal.sup_mul_nat"],
 ["simpNF", "Ordinal.sup_sum"],
 ["simpNF", "Orientation.areaForm'_apply"],
 ["simpNF", "Orientation.areaForm_apply_self"],
 ["simpNF", "Orientation.areaForm_rightAngleRotation_left"],
 ["simpNF", "Orientation.areaForm_rightAngleRotation_right"],
 ["simpNF", "Orientation.coe_basisRightAngleRotation"],
 ["simpNF", "Orientation.det_rotation"],
 ["simpNF", "Orientation.eq_rotation_self_iff_angle_eq_zero"],
 ["simpNF", "Orientation.inner_rightAngleRotationAux₁_left"],
 ["simpNF", "Orientation.inner_rightAngleRotationAux₁_right"],
 ["simpNF", "Orientation.inner_rightAngleRotation_left"],
 ["simpNF", "Orientation.inner_rightAngleRotation_right"],
 ["simpNF", "Orientation.inner_rotation_pi_div_two_left"],
 ["simpNF", "Orientation.inner_rotation_pi_div_two_left_smul"],
 ["simpNF", "Orientation.inner_rotation_pi_div_two_right"],
 ["simpNF", "Orientation.inner_rotation_pi_div_two_right_smul"],
 ["simpNF", "Orientation.inner_smul_rotation_pi_div_two_left"],
 ["simpNF", "Orientation.inner_smul_rotation_pi_div_two_right"],
 ["simpNF", "Orientation.inner_smul_rotation_pi_div_two_smul_left"],
 ["simpNF", "Orientation.inner_smul_rotation_pi_div_two_smul_right"],
 ["simpNF", "Orientation.kahler_apply_self"],
 ["simpNF", "Orientation.kahler_neg_orientation"],
 ["simpNF", "Orientation.kahler_rightAngleRotation_left"],
 ["simpNF", "Orientation.kahler_rightAngleRotation_right"],
 ["simpNF", "Orientation.kahler_rotation_left"],
 ["simpNF", "Orientation.kahler_rotation_right"],
 ["simpNF", "Orientation.linearEquiv_det_rotation"],
 ["simpNF", "Orientation.neg_rotation_neg_pi_div_two"],
 ["simpNF", "Orientation.oangle_map"],
 ["simpNF", "Orientation.oangle_rotation"],
 ["simpNF", "Orientation.oangle_rotation_left"],
 ["simpNF", "Orientation.oangle_rotation_oangle_left"],
 ["simpNF", "Orientation.oangle_rotation_oangle_right"],
 ["simpNF", "Orientation.oangle_rotation_right"],
 ["simpNF", "Orientation.oangle_rotation_self_left"],
 ["simpNF", "Orientation.oangle_rotation_self_right"],
 ["simpNF", "Orientation.oangle_sign_smul_left"],
 ["simpNF", "Orientation.oangle_sign_smul_right"],
 ["simpNF", "Orientation.rightAngleRotationAux₁_rightAngleRotationAux₁"],
 ["simpNF", "Orientation.rightAngleRotation_rightAngleRotation"],
 ["simpNF", "Orientation.rotationAux_apply"],
 ["simpNF", "Orientation.rotation_eq_self_iff_angle_eq_zero"],
 ["simpNF", "Orientation.rotation_oangle_eq_iff_norm_eq"],
 ["simpNF", "Orientation.rotation_rotation"],
 ["simpNF", "Orientation.volumeForm_zero_pos"],
 ["simpNF", "OrthogonalFamily.linearIsometry_apply_single"],
 ["simpNF", "Orthonormal.equiv_apply"],
 ["simpNF", "OrthonormalBasis.coe_mk"],
 ["simpNF", "OrthonormalBasis.coe_ofRepr"],
 ["simpNF", "OrthonormalBasis.coe_of_orthogonal_eq_bot_mk"],
 ["simpNF", "OrthonormalBasis.coe_reindex"],
 ["simpNF", "OrthonormalBasis.coe_toBasis"],
 ["simpNF", "OrthonormalBasis.coe_toBasis_repr_apply"],
 ["simpNF", "OrthonormalBasis.coe_toHilbertBasis"],
 ["simpNF", "OrthonormalBasis.det_to_matrix_orthonormalBasis"],
 ["simpNF", "OrthonormalBasis.map_apply"],
 ["simpNF", "OrthonormalBasis.orthonormal"],
 ["simpNF", "OrthonormalBasis.repr_reindex"],
 ["simpNF", "OrthonormalBasis.repr_self"],
 ["simpNF", "OrthonormalBasis.repr_symm_single"],
 ["simpNF", "OrthonormalBasis.span_apply"],
 ["simpNF", "PFun.bind_apply"],
 ["simpNF", "PFun.dom_mk"],
 ["simpNF", "PFun.dom_prodLift"],
 ["simpNF", "PFun.dom_prodMap"],
 ["simpNF", "PFun.dom_toSubtype"],
 ["simpNF", "PFun.mem_core"],
 ["simpNF", "PFun.mem_dom"],
 ["simpNF", "PFun.mem_preimage"],
 ["simpNF", "PLift.forall"],
 ["simpNF", "PLift.seq_up"],
 ["simpNF", "PMF.bernoulli_apply"],
 ["simpNF", "PMF.bindOnSupport_apply"],
 ["simpNF", "PMF.bindOnSupport_bindOnSupport"],
 ["simpNF", "PMF.bindOnSupport_eq_bind"],
 ["simpNF", "PMF.bind_apply"],
 ["simpNF", "PMF.bind_bind"],
 ["simpNF", "PMF.bind_const"],
 ["simpNF", "PMF.binomial_apply_last"],
 ["simpNF", "PMF.binomial_apply_zero"],
 ["simpNF", "PMF.coe_ne_zero"],
 ["simpNF", "PMF.filter_apply"],
 ["simpNF", "PMF.map_apply"],
 ["simpNF", "PMF.mem_support_iff"],
 ["simpNF", "PMF.normalize_apply"],
 ["simpNF", "PMF.ofFinset_apply"],
 ["simpNF", "PMF.ofFintype_apply"],
 ["simpNF", "PMF.ofMultiset_apply"],
 ["simpNF", "PMF.pure_apply"],
 ["simpNF", "PMF.seq_apply"],
 ["simpNF", "PMF.support_bernoulli"],
 ["simpNF", "PMF.support_bind"],
 ["simpNF", "PMF.support_bindOnSupport"],
 ["simpNF", "PMF.support_ofMultiset"],
 ["simpNF", "PMF.support_seq"],
 ["simpNF", "PMF.toMeasure_apply_finset"],
 ["simpNF", "PMF.toMeasure_apply_fintype"],
 ["simpNF", "PMF.toMeasure_bindOnSupport_apply"],
 ["simpNF", "PMF.toMeasure_bind_apply"],
 ["simpNF", "PMF.toMeasure_ofMultiset_apply"],
 ["simpNF", "PMF.toMeasure_uniformOfFinset_apply"],
 ["simpNF", "PMF.toOuterMeasure_apply_finset"],
 ["simpNF", "PMF.toOuterMeasure_apply_fintype"],
 ["simpNF", "PMF.toOuterMeasure_bindOnSupport_apply"],
 ["simpNF", "PMF.toOuterMeasure_bind_apply"],
 ["simpNF", "PMF.toOuterMeasure_ofMultiset_apply"],
 ["simpNF", "PMF.toOuterMeasure_uniformOfFinset_apply"],
 ["simpNF", "PMF.tsum_coe"],
 ["simpNF", "PMF.uniformOfFinset_apply"],
 ["simpNF", "PMF.uniformOfFintype_apply"],
 ["simpNF", "PNat.find_le_iff"],
 ["simpNF", "PNat.find_lt_iff"],
 ["simpNF", "PNat.le_find_iff"],
 ["simpNF", "PNat.lt_find_iff"],
 ["simpNF", "PProd.forall"],
 ["simpNF", "PSet.mem_sUnion"],
 ["simpNF", "PSet.toSet_sUnion"],
 ["simpNF", "PSigma.forall"],
 ["simpNF", "PadicInt.algebraMap_apply"],
 ["simpNF", "PadicInt.cast_toZModPow"],
 ["simpNF", "PadicInt.coe_one"],
 ["simpNF", "PadicInt.lift_self"],
 ["simpNF", "PadicInt.unitCoeff_coe"],
 ["simpNF", "Part.bind_map"],
 ["simpNF", "Part.coe_toFinset"],
 ["simpNF", "Part.map_bind"],
 ["simpNF", "Part.mem_bind_iff"],
 ["simpNF", "Part.mem_map_iff"],
 ["simpNF", "PartialEquiv.pi_apply"],
 ["simpNF", "PartialEquiv.pi_refl"],
 ["simpNF", "PartialEquiv.pi_source"],
 ["simpNF", "PartialEquiv.pi_symm"],
 ["simpNF", "PartialEquiv.pi_target"],
 ["simpNF", "PartialEquiv.pi_trans"],
 ["simpNF", "PartialEquiv.prod_coe"],
 ["simpNF", "PartialHomeomorph.pi_toPartialEquiv"],
 ["simpNF", "PartialHomeomorph.prod_apply"],
 ["simpNF", "PartialHomeomorph.restrContDiff_source"],
 ["simpNF", "PartialHomeomorph.restrContDiff_target"],
 ["simpNF", "PartitionOfUnity.coe_finsupport"],
 ["simpNF", "PartitionOfUnity.mem_finsupport"],
 ["simpNF", "Path.cast_coe"],
 ["simpNF", "Path.coe_mk"],
 ["simpNF", "Path.coe_mk_mk"],
 ["simpNF", "Path.coe_reparam"],
 ["simpNF", "Path.coe_toContinuousMap"],
 ["simpNF", "Path.extend_extends"],
 ["simpNF", "Path.extend_extends'"],
 ["simpNF", "Path.extend_range"],
 ["simpNF", "Path.map_coe"],
 ["simpNF", "Path.pi_coe"],
 ["simpNF", "Path.prod_coe"],
 ["simpNF", "Path.refl_apply"],
 ["simpNF", "Path.refl_extend"],
 ["simpNF", "Path.refl_range"],
 ["simpNF", "Path.source"],
 ["simpNF", "Path.symm_apply"],
 ["simpNF", "Path.symm_range"],
 ["simpNF", "Path.target"],
 ["simpNF", "Path.toHomotopyConst_apply"],
 ["simpNF", "Perfection.coeff_mk"],
 ["simpNF", "Perfection.lift_apply_apply_coe"],
 ["simpNF", "Perfection.lift_symm_apply"],
 ["simpNF", "Perfection.map_apply_coe"],
 ["simpNF", "PerfectionMap.lift_apply"],
 ["simpNF", "PerfectionMap.lift_symm_apply"],
 ["simpNF", "Pi.bihimp_apply"],
 ["simpNF", "Pi.coe_int"],
 ["simpNF", "Pi.coe_nat"],
 ["simpNF", "Pi.constRingHom_eq_algebraMap"],
 ["simpNF", "Pi.const_add"],
 ["simpNF", "Pi.const_div"],
 ["simpNF", "Pi.const_mul"],
 ["simpNF", "Pi.const_pow"],
 ["simpNF", "Pi.const_sub"],
 ["simpNF", "Pi.exp_apply"],
 ["simpNF", "Pi.lt_toLex_update_self_iff"],
 ["simpNF", "Pi.mulSupport_mulSingle_of_ne"],
 ["simpNF", "Pi.smul_const"],
 ["simpNF", "Pi.support_single_of_ne"],
 ["simpNF", "Pi.symmDiff_apply"],
 ["simpNF", "Pi.toLex_update_lt_self_iff"],
 ["simpNF", "Pi.vadd_const"],
 ["simpNF", "PiLp.add_apply"],
 ["simpNF", "PiLp.basisFun_apply"],
 ["simpNF", "PiLp.basisFun_repr"],
 ["simpNF", "PiLp.continuousLinearEquiv_apply"],
 ["simpNF", "PiLp.continuousLinearEquiv_symm_apply"],
 ["simpNF", "PiLp.dist_equiv_symm_single_same"],
 ["simpNF", "PiLp.edist_equiv_symm_single_same"],
 ["simpNF", "PiLp.inner_apply"],
 ["simpNF", "PiLp.neg_apply"],
 ["simpNF", "PiLp.nndist_equiv_symm_single_same"],
 ["simpNF", "PiLp.nnnorm_equiv"],
 ["simpNF", "PiLp.nnnorm_equiv_symm"],
 ["simpNF", "PiLp.nnnorm_equiv_symm_single"],
 ["simpNF", "PiLp.norm_equiv"],
 ["simpNF", "PiLp.norm_equiv_symm"],
 ["simpNF", "PiLp.norm_equiv_symm_single"],
 ["simpNF", "PiLp.zero_apply"],
 ["simpNF", "PiNat.mem_cylinder_iff"],
 ["simpNF", "PiTensorProduct.reindex_tprod"],
 ["simpNF", "PiTensorProduct.subsingletonEquiv_symm_apply"],
 ["simpNF", "PiTensorProduct.tmulEquiv_symm_apply"],
 ["simpNF", "PointedCone.coe_comap"],
 ["simpNF", "PointedCone.coe_map"],
 ["simpNF", "PointedCone.mem_comap"],
 ["simpNF", "PointedCone.mem_dual"],
 ["simpNF", "PointedCone.mem_map"],
 ["simpNF", "Poly.coe_add"],
 ["simpNF", "Poly.coe_mul"],
 ["simpNF", "Poly.coe_neg"],
 ["simpNF", "Poly.coe_sub"],
 ["simpNF", "Poly.neg_apply"],
 ["simpNF", "PolyEquivTensor.toFunAlgHom_apply_tmul"],
 ["simpNF", "Polynomial.aeval_continuousMap_apply"],
 ["simpNF", "Polynomial.algebraMap_pi_eq_aeval"],
 ["simpNF", "Polynomial.algebraMap_pi_self_eq_eval"],
 ["simpNF", "Polynomial.coe_basisMonomials"],
 ["simpNF", "Polynomial.coe_compRingHom"],
 ["simpNF", "Polynomial.count_roots"],
 ["simpNF", "Polynomial.cyclotomic_expand_eq_cyclotomic"],
 ["simpNF", "Polynomial.cyclotomic_expand_eq_cyclotomic_mul"],
 ["simpNF", "Polynomial.deriv"],
 ["simpNF", "Polynomial.deriv_aeval"],
 ["simpNF", "Polynomial.fderiv"],
 ["simpNF", "Polynomial.fderiv_aeval"],
 ["simpNF", "Polynomial.finset_sum_coeff"],
 ["simpNF", "Polynomial.iterate_comp_eval"],
 ["simpNF", "Polynomial.iterate_comp_eval₂"],
 ["simpNF", "Polynomial.lsum_apply"],
 ["simpNF", "Polynomial.natDegree_multiset_prod_X_sub_C_eq_card"],
 ["simpNF", "Polynomial.rootMultiplicity_eq_zero_iff"],
 ["simpNF", "Polynomial.roots_multiset_prod_X_sub_C"],
 ["simpNF", "Polynomial.sum_bernoulli"],
 ["simpNF", "Polynomial.sum_comp"],
 ["simpNF", "Polynomial.toContinuousMapAlgHom_apply"],
 ["simpNF", "Polynomial.toContinuousMapOnAlgHom_apply"],
 ["simpNF", "Polynomial.toContinuousMapOn_apply"],
 ["simpNF", "Polynomial.toContinuousMap_apply"],
 ["simpNF", "PontryaginDual.map_apply"],
 ["simpNF", "PowerBasis.coe_basis"],
 ["simpNF", "PowerBasis.liftEquiv'_symm_apply_apply"],
 ["simpNF", "Pretrivialization.linearEquivAt_apply"],
 ["simpNF", "Pretrivialization.linearEquivAt_symm_apply"],
 ["simpNF", "Pretrivialization.symmₗ_apply"],
 ["simpNF", "ProbabilityTheory.cgf_const"],
 ["simpNF", "ProbabilityTheory.cgf_const'"],
 ["simpNF", "ProbabilityTheory.mgf_const'"],
 ["simpNF", "Prod.exists"],
 ["simpNF", "Prod.forall"],
 ["simpNF", "Profinite.coe_comp"],
 ["simpNF", "Profinite.homeoOfIso_apply"],
 ["simpNF", "Profinite.homeoOfIso_symm_apply"],
 ["simpNF", "Profinite.isoEquivHomeo_apply_apply"],
 ["simpNF", "Profinite.isoEquivHomeo_apply_symm_apply"],
 ["simpNF", "Profinite.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpNF", "Profinite.isoEquivHomeo_symm_apply_inv"],
 ["simpNF", "Profinite.isoOfHomeo_hom"],
 ["simpNF", "Profinite.isoOfHomeo_inv"],
 ["simpNF", "Prop.disjoint_iff"],
 ["simpNF", "ProperCone.coe_comap"],
 ["simpNF", "ProperCone.mem_comap"],
 ["simpNF", "ProperCone.mem_dual"],
 ["simpNF", "ProperCone.mem_map"],
 ["simpNF", "QuadraticForm.basisRepr_apply"],
 ["simpNF", "QuadraticForm.coeFn_add"],
 ["simpNF", "QuadraticForm.coeFn_neg"],
 ["simpNF", "QuadraticForm.coeFn_smul"],
 ["simpNF", "QuadraticForm.coeFn_sub"],
 ["simpNF", "QuadraticForm.coeFn_sum"],
 ["simpNF", "QuadraticForm.pi_apply"],
 ["simpNF", "QuadraticForm.sum_apply"],
 ["simpNF", "QuadraticForm.weightedSumSquares_apply"],
 ["simpNF", "Quaternion.coe_ofComplex"],
 ["simpNF", "Quaternion.hasSum_coe"],
 ["simpNF", "Quaternion.linearIsometryEquivTuple_apply"],
 ["simpNF", "Quaternion.linearIsometryEquivTuple_symm_apply"],
 ["simpNF", "Quaternion.summable_coe"],
 ["simpNF", "Quotient.choice_eq"],
 ["simpNF", "QuotientAddGroup.mk_sum"],
 ["simpNF", "QuotientGroup.mk_prod"],
 ["simpNF", "QuotientMap.lift_apply"],
 ["simpNF", "Rat.cast_finsupp_prod"],
 ["simpNF", "Rat.cast_finsupp_sum"],
 ["simpNF", "Rat.cast_prod"],
 ["simpNF", "Rat.cast_sum"],
 ["simpNF", "Rat.divInt_neg_den"],
 ["simpNF", "Rat.divInt_neg_one_one"],
 ["simpNF", "Rat.neg_def"],
 ["simpNF", "Rat.num_neg_eq_neg_num"],
 ["simpNF", "Rat.numberField_discr"],
 ["simpNF", "RatFunc.denom_div"],
 ["simpNF", "RatFunc.liftOn'_div"],
 ["simpNF", "RatFunc.liftOn_div"],
 ["simpNF", "RatFunc.numDenom_div"],
 ["simpNF", "RatFunc.num_div"],
 ["simpNF", "RatFunc.num_div_dvd'"],
 ["simpNF", "Real.cobounded_eq"],
 ["simpNF", "Real.coe_comp_expOrderIso"],
 ["simpNF", "Real.coe_expOrderIso_apply"],
 ["simpNF", "Real.coe_sinOrderIso_apply"],
 ["simpNF", "Real.coe_sqrt"],
 ["simpNF", "Real.deriv_arccos"],
 ["simpNF", "Real.deriv_arcsin"],
 ["simpNF", "Real.deriv_arctan"],
 ["simpNF", "Real.deriv_cos'"],
 ["simpNF", "Real.isBigO_exp_comp_exp_comp"],
 ["simpNF", "Real.isBigO_one_exp_comp"],
 ["simpNF", "Real.isBoundedUnder_ge_exp_comp"],
 ["simpNF", "Real.isBoundedUnder_le_exp_comp"],
 ["simpNF", "Real.isLittleO_exp_comp_exp_comp"],
 ["simpNF", "Real.isTheta_exp_comp_exp_comp"],
 ["simpNF", "Real.isTheta_exp_comp_one"],
 ["simpNF", "Real.sinhEquiv_apply"],
 ["simpNF", "Real.sinhEquiv_symm_apply"],
 ["simpNF", "Real.sinhHomeomorph_apply"],
 ["simpNF", "Real.sinhHomeomorph_symm_apply"],
 ["simpNF", "Real.sinhOrderIso_apply"],
 ["simpNF", "Real.sinhOrderIso_symm_apply"],
 ["simpNF", "Real.summable_nat_rpow"],
 ["simpNF", "Real.summable_nat_rpow_inv"],
 ["simpNF", "Real.tendsto_exp_comp_atTop"],
 ["simpNF", "Real.tendsto_exp_comp_nhds_zero"],
 ["simpNF", "Real.volume_Icc_pi_toReal"],
 ["simpNF", "Real.volume_pi_Ico_toReal"],
 ["simpNF", "Real.volume_pi_Ioc_toReal"],
 ["simpNF", "Real.volume_pi_Ioo_toReal"],
 ["simpNF", "Real.volume_pi_ball"],
 ["simpNF", "Real.volume_pi_closedBall"],
 ["simpNF", "Real.volume_preimage_mul_right"],
 ["simpNF", "Rel.comp_left_top"],
 ["simpNF", "Rel.comp_right_top"],
 ["simpNF", "Rep.leftRegularHom_hom"],
 ["simpNF", "Representation.mem_invariants"],
 ["simpNF", "RingCon.coe_iInf"],
 ["simpNF", "RingCon.coe_inf"],
 ["simpNF", "RingCon.coe_sInf"],
 ["simpNF", "RingCon.coe_top"],
 ["simpNF", "RingEquiv.piCongrRight_refl"],
 ["simpNF", "RingEquiv.piCongrRight_symm"],
 ["simpNF", "RingEquiv.piCongrRight_trans"],
 ["simpNF", "RingHom.map_dfinsupp_sumAddHom"],
 ["simpNF", "RingHom.mem_fieldRange"],
 ["simpNF", "RingHom.mem_range"],
 ["simpNF", "RingHom.mem_rangeS"],
 ["simpNF", "RingHomIsometric.is_iso"],
 ["simpNF", "RingSeminorm.apply_one"],
 ["simpNF", "RingSeminorm.toFun_eq_coe"],
 ["simpNF", "SchwartzMap.add_apply"],
 ["simpNF", "SchwartzMap.coeFn_zero"],
 ["simpNF", "SchwartzMap.delta_apply"],
 ["simpNF", "SchwartzMap.derivCLM_apply"],
 ["simpNF", "SchwartzMap.fderivCLM_apply"],
 ["simpNF", "SchwartzMap.iteratedPDeriv_one"],
 ["simpNF", "SchwartzMap.iteratedPDeriv_zero"],
 ["simpNF", "SchwartzMap.pderivCLM_apply"],
 ["simpNF", "SchwartzMap.smul_apply"],
 ["simpNF", "SchwartzMap.sub_apply"],
 ["simpNF", "SchwartzMap.toBoundedContinuousFunctionCLM_apply"],
 ["simpNF", "SchwartzMap.toBoundedContinuousFunctionLM_apply"],
 ["simpNF", "SchwartzMap.toBoundedContinuousFunction_apply"],
 ["simpNF", "SchwartzMap.zero_apply"],
 ["simpNF", "SemiNormedGroupCat.coe_comp"],
 ["simpNF", "SemiNormedGroupCat.coe_id"],
 ["simpNF", "SemiNormedGroupCat.explicitCokernelπ_apply_dom_eq_zero"],
 ["simpNF", "SemiNormedGroupCat.explicitCokernelπ_desc_apply"],
 ["simpNF", "SemiNormedGroupCat.zero_apply"],
 ["simpNF", "SemiNormedGroupCat₁.coe_comp"],
 ["simpNF", "SemiNormedGroupCat₁.coe_id"],
 ["simpNF", "SemiNormedGroupCat₁.zero_apply"],
 ["simpNF", "SemilinearIsometryClass.nnnorm_map"],
 ["simpNF", "Seminorm.add_apply"],
 ["simpNF", "Seminorm.ball_bot"],
 ["simpNF", "Seminorm.closedBall_bot"],
 ["simpNF", "Seminorm.coeFnAddMonoidHom_apply"],
 ["simpNF", "Seminorm.coe_bot"],
 ["simpNF", "Seminorm.coe_le_coe"],
 ["simpNF", "Seminorm.coe_lt_coe"],
 ["simpNF", "Seminorm.coe_restrictScalars"],
 ["simpNF", "Seminorm.coe_sup"],
 ["simpNF", "Seminorm.coe_zero"],
 ["simpNF", "Seminorm.comp_apply"],
 ["simpNF", "Seminorm.gauge_ball"],
 ["simpNF", "Seminorm.inf_apply"],
 ["simpNF", "Seminorm.mem_ball"],
 ["simpNF", "Seminorm.mem_closedBall"],
 ["simpNF", "Seminorm.pullback_apply"],
 ["simpNF", "Seminorm.smul_apply"],
 ["simpNF", "Seminorm.zero_apply"],
 ["simpNF", "Semiquot.mem_bind"],
 ["simpNF", "Semiquot.mem_map"],
 ["simpNF", "Set.Icc_prod_Icc"],
 ["simpNF", "Set.Ico_diff_Iio"],
 ["simpNF", "Set.Ico_inter_Iio"],
 ["simpNF", "Set.Ioc_diff_Iic"],
 ["simpNF", "Set.Ioc_diff_Ioi"],
 ["simpNF", "Set.Ioc_inter_Ioi"],
 ["simpNF", "Set.add_singleton"],
 ["simpNF", "Set.antitone_mem"],
 ["simpNF", "Set.biUnion_Ico_eq_Iio_self_iff"],
 ["simpNF", "Set.biUnion_Ioc_eq_Ioi_self_iff"],
 ["simpNF", "Set.biUnion_of_singleton"],
 ["simpNF", "Set.biUnion_preimage_singleton"],
 ["simpNF", "Set.biUnion_self"],
 ["simpNF", "Set.bind_def"],
 ["simpNF", "Set.compl_ne_eq_singleton"],
 ["simpNF", "Set.countable_iUnion_iff"],
 ["simpNF", "Set.diag_preimage_prod"],
 ["simpNF", "Set.disjoint_iUnion_left"],
 ["simpNF", "Set.disjoint_iUnion_right"],
 ["simpNF", "Set.disjoint_pi"],
 ["simpNF", "Set.disjoint_sUnion_left"],
 ["simpNF", "Set.disjoint_sUnion_right"],
 ["simpNF", "Set.disjoint_univ_pi"],
 ["simpNF", "Set.div_singleton"],
 ["simpNF", "Set.eval_image_univ_pi"],
 ["simpNF", "Set.exists_subset_range_and_iff"],
 ["simpNF", "Set.iInter_coe_set"],
 ["simpNF", "Set.iInter_eq_univ"],
 ["simpNF", "Set.iInter_iInter_eq'"],
 ["simpNF", "Set.iInter_iInter_eq_left"],
 ["simpNF", "Set.iInter_iInter_eq_or_left"],
 ["simpNF", "Set.iInter_iInter_eq_right"],
 ["simpNF", "Set.iUnion_Icc_left"],
 ["simpNF", "Set.iUnion_Ico_eq_Iio_self_iff"],
 ["simpNF", "Set.iUnion_Ico_left"],
 ["simpNF", "Set.iUnion_Ioc_eq_Ioi_self_iff"],
 ["simpNF", "Set.iUnion_Ioc_left"],
 ["simpNF", "Set.iUnion_Ioo_left"],
 ["simpNF", "Set.iUnion_coe_set"],
 ["simpNF", "Set.iUnion_eq_empty"],
 ["simpNF", "Set.iUnion_iUnion_eq'"],
 ["simpNF", "Set.iUnion_iUnion_eq_left"],
 ["simpNF", "Set.iUnion_iUnion_eq_or_left"],
 ["simpNF", "Set.iUnion_iUnion_eq_right"],
 ["simpNF", "Set.iUnion_inv_smul"],
 ["simpNF", "Set.iUnion_neg_vadd"],
 ["simpNF", "Set.iUnion_op_smul_set"],
 ["simpNF", "Set.iUnion_op_vadd_set"],
 ["simpNF", "Set.iUnion_singleton_eq_range"],
 ["simpNF", "Set.iUnion_smul_set"],
 ["simpNF", "Set.iUnion_subset_iff"],
 ["simpNF", "Set.iUnion_vadd_set"],
 ["simpNF", "Set.image2_insert_right"],
 ["simpNF", "Set.image2_left"],
 ["simpNF", "Set.image2_right"],
 ["simpNF", "Set.image2_singleton_right"],
 ["simpNF", "Set.image2_subset_iff"],
 ["simpNF", "Set.image_add_const_Icc"],
 ["simpNF", "Set.image_add_const_Ici"],
 ["simpNF", "Set.image_add_const_Ico"],
 ["simpNF", "Set.image_add_const_Ioc"],
 ["simpNF", "Set.image_add_const_Ioi"],
 ["simpNF", "Set.image_add_const_Ioo"],
 ["simpNF", "Set.image_add_right"],
 ["simpNF", "Set.image_affine_Icc'"],
 ["simpNF", "Set.image_div_const_uIcc"],
 ["simpNF", "Set.image_id'"],
 ["simpNF", "Set.image_mul_const_uIcc"],
 ["simpNF", "Set.image_mul_right"],
 ["simpNF", "Set.image_sub_const_Icc"],
 ["simpNF", "Set.image_sub_const_Ici"],
 ["simpNF", "Set.image_sub_const_Ico"],
 ["simpNF", "Set.image_sub_const_Iic"],
 ["simpNF", "Set.image_sub_const_Iio"],
 ["simpNF", "Set.image_sub_const_Ioc"],
 ["simpNF", "Set.image_sub_const_Ioi"],
 ["simpNF", "Set.image_sub_const_Ioo"],
 ["simpNF", "Set.image_sub_const_uIcc"],
 ["simpNF", "Set.indicator_apply_eq_self"],
 ["simpNF", "Set.indicator_apply_eq_zero"],
 ["simpNF", "Set.indicator_compl_add_self"],
 ["simpNF", "Set.indicator_empty"],
 ["simpNF", "Set.indicator_eq_self"],
 ["simpNF", "Set.indicator_eq_zero"],
 ["simpNF", "Set.indicator_self_add_compl"],
 ["simpNF", "Set.indicator_zero"],
 ["simpNF", "Set.infs_singleton"],
 ["simpNF", "Set.infs_subset_iff"],
 ["simpNF", "Set.insert_none_range_some"],
 ["simpNF", "Set.integer_carrier"],
 ["simpNF", "Set.isAddUnit_iff"],
 ["simpNF", "Set.isAddUnit_iff_singleton"],
 ["simpNF", "Set.isUnit_iff"],
 ["simpNF", "Set.isUnit_iff_singleton"],
 ["simpNF", "Set.mapsTo_range_iff"],
 ["simpNF", "Set.mapsTo_univ_iff"],
 ["simpNF", "Set.mem_accumulate"],
 ["simpNF", "Set.mem_iInter"],
 ["simpNF", "Set.mem_image"],
 ["simpNF", "Set.mem_image2"],
 ["simpNF", "Set.mem_infs"],
 ["simpNF", "Set.mem_ite_univ_left"],
 ["simpNF", "Set.mem_ite_univ_right"],
 ["simpNF", "Set.mem_pi"],
 ["simpNF", "Set.mem_sInter"],
 ["simpNF", "Set.mem_sUnion"],
 ["simpNF", "Set.mem_sep_iff"],
 ["simpNF", "Set.mem_seq_iff"],
 ["simpNF", "Set.mem_sups"],
 ["simpNF", "Set.mk_preimage_prod_left"],
 ["simpNF", "Set.mk_preimage_prod_left_eq_empty"],
 ["simpNF", "Set.monotone_mem"],
 ["simpNF", "Set.mulIndicator_apply_eq_one"],
 ["simpNF", "Set.mulIndicator_apply_eq_self"],
 ["simpNF", "Set.mulIndicator_compl_mul_self"],
 ["simpNF", "Set.mulIndicator_empty"],
 ["simpNF", "Set.mulIndicator_eq_one"],
 ["simpNF", "Set.mulIndicator_eq_self"],
 ["simpNF", "Set.mulIndicator_one"],
 ["simpNF", "Set.mulIndicator_self_mul_compl"],
 ["simpNF", "Set.mul_singleton"],
 ["simpNF", "Set.ncard_eq_one"],
 ["simpNF", "Set.ncard_subtype"],
 ["simpNF", "Set.nonempty_iInter"],
 ["simpNF", "Set.nonempty_sInter"],
 ["simpNF", "Set.nonempty_sUnion"],
 ["simpNF", "Set.not_equitableOn"],
 ["simpNF", "Set.pairwise_bot_iff"],
 ["simpNF", "Set.pi_univ"],
 ["simpNF", "Set.pi_univ_Icc"],
 ["simpNF", "Set.pi_univ_Ici"],
 ["simpNF", "Set.pi_univ_Iic"],
 ["simpNF", "Set.pi_univ_ite"],
 ["simpNF", "Set.pi_univ_uIcc"],
 ["simpNF", "Set.preimage_add_const_Icc"],
 ["simpNF", "Set.preimage_add_const_Ici"],
 ["simpNF", "Set.preimage_add_const_Ico"],
 ["simpNF", "Set.preimage_add_const_Iic"],
 ["simpNF", "Set.preimage_add_const_Iio"],
 ["simpNF", "Set.preimage_add_const_Ioc"],
 ["simpNF", "Set.preimage_add_const_Ioi"],
 ["simpNF", "Set.preimage_add_const_Ioo"],
 ["simpNF", "Set.preimage_add_const_uIcc"],
 ["simpNF", "Set.preimage_add_right_singleton"],
 ["simpNF", "Set.preimage_add_right_zero"],
 ["simpNF", "Set.preimage_const_of_mem"],
 ["simpNF", "Set.preimage_const_of_not_mem"],
 ["simpNF", "Set.preimage_div_const_uIcc"],
 ["simpNF", "Set.preimage_id'"],
 ["simpNF", "Set.preimage_mul_const_Icc"],
 ["simpNF", "Set.preimage_mul_const_Icc_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Ici"],
 ["simpNF", "Set.preimage_mul_const_Ici_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Ico"],
 ["simpNF", "Set.preimage_mul_const_Ico_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Iic"],
 ["simpNF", "Set.preimage_mul_const_Iic_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Iio"],
 ["simpNF", "Set.preimage_mul_const_Iio_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Ioc"],
 ["simpNF", "Set.preimage_mul_const_Ioc_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Ioi"],
 ["simpNF", "Set.preimage_mul_const_Ioi_of_neg"],
 ["simpNF", "Set.preimage_mul_const_Ioo"],
 ["simpNF", "Set.preimage_mul_const_Ioo_of_neg"],
 ["simpNF", "Set.preimage_mul_const_uIcc"],
 ["simpNF", "Set.preimage_mul_right_one"],
 ["simpNF", "Set.preimage_mul_right_singleton"],
 ["simpNF", "Set.preimage_sInter"],
 ["simpNF", "Set.preimage_sUnion"],
 ["simpNF", "Set.preimage_setOf_eq"],
 ["simpNF", "Set.preimage_singleton_false"],
 ["simpNF", "Set.preimage_sub_const_Icc"],
 ["simpNF", "Set.preimage_sub_const_Ici"],
 ["simpNF", "Set.preimage_sub_const_Ico"],
 ["simpNF", "Set.preimage_sub_const_Iic"],
 ["simpNF", "Set.preimage_sub_const_Iio"],
 ["simpNF", "Set.preimage_sub_const_Ioc"],
 ["simpNF", "Set.preimage_sub_const_Ioi"],
 ["simpNF", "Set.preimage_sub_const_Ioo"],
 ["simpNF", "Set.preimage_sub_const_uIcc"],
 ["simpNF", "Set.prod_singleton"],
 ["simpNF", "Set.range_diag"],
 ["simpNF", "Set.range_id'"],
 ["simpNF", "Set.range_inclusion"],
 ["simpNF", "Set.range_list_getD"],
 ["simpNF", "Set.range_list_getI"],
 ["simpNF", "Set.range_list_nthLe"],
 ["simpNF", "Set.restrict_dite"],
 ["simpNF", "Set.restrict_dite_compl"],
 ["simpNF", "Set.restrict_ite"],
 ["simpNF", "Set.restrict_ite_compl"],
 ["simpNF", "Set.sInter_eq_univ"],
 ["simpNF", "Set.sInter_image"],
 ["simpNF", "Set.sUnion_eq_empty"],
 ["simpNF", "Set.sUnion_image"],
 ["simpNF", "Set.sUnion_subset_iff"],
 ["simpNF", "Set.sep_and"],
 ["simpNF", "Set.sep_eq_empty_iff_mem_false"],
 ["simpNF", "Set.sep_eq_self_iff_mem_true"],
 ["simpNF", "Set.sep_inter"],
 ["simpNF", "Set.sep_mem_eq"],
 ["simpNF", "Set.sep_or"],
 ["simpNF", "Set.sep_setOf"],
 ["simpNF", "Set.sep_subset"],
 ["simpNF", "Set.sep_union"],
 ["simpNF", "Set.seq_eq_set_seq"],
 ["simpNF", "Set.setOf_bot"],
 ["simpNF", "Set.setOf_eq_eq_singleton"],
 ["simpNF", "Set.setOf_false"],
 ["simpNF", "Set.setOf_mem_eq"],
 ["simpNF", "Set.setOf_subset_setOf"],
 ["simpNF", "Set.setOf_top"],
 ["simpNF", "Set.setOf_true"],
 ["simpNF", "Set.sigma_empty"],
 ["simpNF", "Set.sigma_singleton"],
 ["simpNF", "Set.sigma_union"],
 ["simpNF", "Set.sigma_univ"],
 ["simpNF", "Set.sized_iUnion"],
 ["simpNF", "Set.smul_singleton"],
 ["simpNF", "Set.sub_singleton"],
 ["simpNF", "Set.subset_iInter_iff"],
 ["simpNF", "Set.subset_sInter_iff"],
 ["simpNF", "Set.subset_singleton_iff"],
 ["simpNF", "Set.sups_singleton"],
 ["simpNF", "Set.sups_subset_iff"],
 ["simpNF", "Set.surjOn_singleton"],
 ["simpNF", "Set.toFinset_setOf"],
 ["simpNF", "Set.unit_coe"],
 ["simpNF", "Set.univ_pi_empty"],
 ["simpNF", "Set.univ_pi_eq_empty_iff"],
 ["simpNF", "Set.vadd_singleton"],
 ["simpNF", "Set.vsub_singleton"],
 ["simpNF", "SetLike.coe_sort_coe"],
 ["simpNF", "Setoid.quotientEquivClasses_mk_eq"],
 ["simpNF", "Setoid.top_def"],
 ["simpNF", "Sigma.exists"],
 ["simpNF", "Sigma.forall"],
 ["simpNF", "SimpleGraph.adjMatrix_mul_apply"],
 ["simpNF", "SimpleGraph.cliqueFreeOn_two"],
 ["simpNF", "SimpleGraph.edgeFinset_top"],
 ["simpNF", "SimpleGraph.edgeSet_subset_setOf_not_isDiag"],
 ["simpNF", "SimpleGraph.edgeSet_top"],
 ["simpNF", "SimpleGraph.iInf_adj"],
 ["simpNF", "SimpleGraph.isClique_insert"],
 ["simpNF", "SimpleGraph.isNClique_one"],
 ["simpNF", "SimpleGraph.le_girth"],
 ["simpNF", "SimpleGraph.map_adj"],
 ["simpNF", "SimpleGraph.sInf_adj"],
 ["simpNF", "SimpleGraph.sSup_adj"],
 ["simpNF", "SimpleGraph.singletonSubgraph_adj"],
 ["simpNF", "SimplexCategory.coe_toTopMap"],
 ["simpNF", "SimplexCategory.toTop_obj"],
 ["simpNF", "SlashInvariantForm.add_apply"],
 ["simpNF", "SlashInvariantForm.coe_add"],
 ["simpNF", "SlashInvariantForm.coe_intCast"],
 ["simpNF", "SlashInvariantForm.coe_mk"],
 ["simpNF", "SlashInvariantForm.coe_mul"],
 ["simpNF", "SlashInvariantForm.coe_natCast"],
 ["simpNF", "SlashInvariantForm.coe_neg"],
 ["simpNF", "SlashInvariantForm.coe_smul"],
 ["simpNF", "SlashInvariantForm.coe_sub"],
 ["simpNF", "SlashInvariantForm.coe_zero"],
 ["simpNF", "SlashInvariantForm.const_toFun"],
 ["simpNF", "SlashInvariantForm.neg_apply"],
 ["simpNF", "SlashInvariantForm.one_coe_eq_one"],
 ["simpNF", "SlashInvariantForm.smul_apply"],
 ["simpNF", "SlashInvariantForm.sub_apply"],
 ["simpNF", "SlashInvariantForm.toFun_eq_coe"],
 ["simpNF", "SmoothMap.coeFnAddMonoidHom_apply"],
 ["simpNF", "SmoothMap.coeFnAlgHom_apply"],
 ["simpNF", "SmoothMap.coeFnLinearMap_apply"],
 ["simpNF", "SmoothMap.coeFnMonoidHom_apply"],
 ["simpNF", "SmoothMap.coeFnRingHom_apply"],
 ["simpNF", "SmoothMap.coe_add"],
 ["simpNF", "SmoothMap.coe_div"],
 ["simpNF", "SmoothMap.coe_inv"],
 ["simpNF", "SmoothMap.coe_mul"],
 ["simpNF", "SmoothMap.coe_neg"],
 ["simpNF", "SmoothMap.coe_nsmul"],
 ["simpNF", "SmoothMap.coe_one"],
 ["simpNF", "SmoothMap.coe_pow"],
 ["simpNF", "SmoothMap.coe_smul"],
 ["simpNF", "SmoothMap.coe_sub"],
 ["simpNF", "SmoothMap.coe_zero"],
 ["simpNF", "StarSubalgebra.adjoin_carrier"],
 ["simpNF", "StarSubalgebra.coe_sInf"],
 ["simpNF", "StarSubalgebra.mem_map"],
 ["simpNF", "Std.DList_lazy"],
 ["simpNF", "Std.DList_singleton"],
 ["simpNF", "Stonean.homeoOfIso_apply"],
 ["simpNF", "Stonean.homeoOfIso_symm_apply"],
 ["simpNF", "Stonean.isoEquivHomeo_apply_apply"],
 ["simpNF", "Stonean.isoEquivHomeo_apply_symm_apply"],
 ["simpNF", "Stonean.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpNF", "Stonean.isoEquivHomeo_symm_apply_inv"],
 ["simpNF", "Stonean.isoOfHomeo_hom"],
 ["simpNF", "Stonean.isoOfHomeo_inv"],
 ["simpNF", "SubMulAction.mem_one"],
 ["simpNF", "Subalgebra.mem_map"],
 ["simpNF", "Subalgebra.mvPolynomial_aeval_coe"],
 ["simpNF", "Subalgebra.starClosure_carrier"],
 ["simpNF", "Subfield.coe_sInf"],
 ["simpNF", "Subfield.mem_map"],
 ["simpNF", "Subfield.sInf_toSubring"],
 ["simpNF", "Subgroup.card_eq_one"],
 ["simpNF", "Subgroup.card_mul_index"],
 ["simpNF", "Subgroup.closure_eq_bot_iff"],
 ["simpNF", "Subgroup.coe_norm"],
 ["simpNF", "Subgroup.coe_sInf"],
 ["simpNF", "Subgroup.exists_zpowers"],
 ["simpNF", "Subgroup.forall_zpowers"],
 ["simpNF", "Subgroup.mem_map"],
 ["simpNF", "Subgroup.mem_sInf"],
 ["simpNF", "Subgroup.mulSingle_mem_pi"],
 ["simpNF", "Subgroup.noncommPiCoprod_mulSingle"],
 ["simpNF", "Subgroup.quotientEquivProdOfLE'_apply"],
 ["simpNF", "Subgroup.quotientEquivProdOfLE'_symm_apply"],
 ["simpNF", "Subgroup.quotientEquivProdOfLE_apply"],
 ["simpNF", "Subgroup.quotientEquivProdOfLE_symm_apply"],
 ["simpNF", "Subgroup.relindex_bot_left"],
 ["simpNF", "Subgroup.val_finset_prod"],
 ["simpNF", "Sublattice.coe_inf"],
 ["simpNF", "Sublattice.coe_sInf"],
 ["simpNF", "Sublattice.coe_sup"],
 ["simpNF", "Sublattice.mem_iInf"],
 ["simpNF", "Sublattice.mem_map"],
 ["simpNF", "Sublattice.mem_sInf"],
 ["simpNF", "Sublattice.mk_inf_mk"],
 ["simpNF", "Sublattice.mk_sup_mk"],
 ["simpNF", "Submodule.coe_continuous_linearProjOfClosedCompl'"],
 ["simpNF", "Submodule.coe_iSup_of_chain"],
 ["simpNF", "Submodule.coe_norm"],
 ["simpNF", "Submodule.coe_pi"],
 ["simpNF", "Submodule.coe_prodEquivOfClosedCompl"],
 ["simpNF", "Submodule.coe_prodEquivOfClosedCompl_symm"],
 ["simpNF", "Submodule.coe_subtypeₗᵢ"],
 ["simpNF", "Submodule.finset_inf_coe"],
 ["simpNF", "Submodule.isOrtho_iSup_left"],
 ["simpNF", "Submodule.isOrtho_iSup_right"],
 ["simpNF", "Submodule.isOrtho_sSup_left"],
 ["simpNF", "Submodule.isOrtho_sSup_right"],
 ["simpNF", "Submodule.isOrtho_span"],
 ["simpNF", "Submodule.mem_dualAnnihilator"],
 ["simpNF", "Submodule.mem_dualCoannihilator"],
 ["simpNF", "Submodule.mem_finset_inf"],
 ["simpNF", "Submodule.mem_iInf"],
 ["simpNF", "Submodule.mem_iSup_of_chain"],
 ["simpNF", "Submodule.mem_map"],
 ["simpNF", "Submodule.mem_one"],
 ["simpNF", "Submodule.mem_orthogonalBilin_iff"],
 ["simpNF", "Submodule.mem_pi"],
 ["simpNF", "Submodule.mem_sInf"],
 ["simpNF", "Submodule.mem_torsion'_iff"],
 ["simpNF", "Submodule.mem_torsionBySet_iff"],
 ["simpNF", "Submodule.piQuotientLift_mk"],
 ["simpNF", "Submodule.piQuotientLift_single"],
 ["simpNF", "Submodule.pi_top"],
 ["simpNF", "Submodule.quotientPiLift_mk"],
 ["simpNF", "Submodule.quotientPi_apply"],
 ["simpNF", "Submodule.sInf_coe"],
 ["simpNF", "Submodule.span_setOf_mem_eq_top"],
 ["simpNF", "Submodule.toLinearPMap_graph_eq"],
 ["simpNF", "Submodule.torsion'AddSubMonoid_coe"],
 ["simpNF", "Submodule.torsion'_carrier"],
 ["simpNF", "Submodule.torsionBySet_carrier"],
 ["simpNF", "Submonoid.coe_finset_prod"],
 ["simpNF", "Submonoid.coe_sInf"],
 ["simpNF", "Submonoid.mem_map"],
 ["simpNF", "Subring.coe_sInf"],
 ["simpNF", "Subring.mem_map"],
 ["simpNF", "Subring.sInf_toAddSubgroup"],
 ["simpNF", "Subring.sInf_toSubmonoid"],
 ["simpNF", "Subsemigroup.coe_sInf"],
 ["simpNF", "Subsemigroup.mem_map"],
 ["simpNF", "Subsemiring.coe_sInf"],
 ["simpNF", "Subsemiring.mem_map"],
 ["simpNF", "Subsemiring.sInf_toAddSubmonoid"],
 ["simpNF", "Subsemiring.sInf_toSubmonoid"],
 ["simpNF", "Subtype.coe_image_of_subset"],
 ["simpNF", "Subtype.forall"],
 ["simpNF", "Sum.elim_mulSingle_one"],
 ["simpNF", "Sum.elim_one_mulSingle"],
 ["simpNF", "Sum.elim_single_zero"],
 ["simpNF", "Sum.elim_zero_single"],
 ["simpNF", "SupBotHom.coe_bot"],
 ["simpNF", "SupHom.coe_bot"],
 ["simpNF", "SupHom.coe_top"],
 ["simpNF", "SupHom.withBot'_toSupHom_toFun"],
 ["simpNF", "SupHom.withTop'_toFun"],
 ["simpNF", "Sym.attach_cons"],
 ["simpNF", "Sym.map_id'"],
 ["simpNF", "Sym.map_map"],
 ["simpNF", "Sym.mem_map"],
 ["simpNF", "Sym2.map_id'"],
 ["simpNF", "Sym2.mem_map"],
 ["simpNF", "SymOptionSuccEquiv.encode_of_not_none_mem"],
 ["simpNF", "TensorAlgebra.ofDirectSum_of_tprod"],
 ["simpNF", "TensorAlgebra.toDirectSum_ι"],
 ["simpNF", "TensorAlgebra.tprod_apply"],
 ["simpNF", "TensorPower.toTensorAlgebra_tprod"],
 ["simpNF", "TensorProduct.dualDistribEquivOfBasis_symm_apply"],
 ["simpNF", "TensorProduct.dualDistribInvOfBasis_apply"],
 ["simpNF", "TopCat.adj₁_counit"],
 ["simpNF", "TopCat.adj₂_counit"],
 ["simpNF", "TopCat.adj₂_unit"],
 ["simpNF", "TopCat.piFan_pt"],
 ["simpNF", "TopCat.presheafToType_map"],
 ["simpNF", "TopCat.presheafToType_obj"],
 ["simpNF", "TopCat.presheafToTypes_map"],
 ["simpNF", "TopCat.presheafToTypes_obj"],
 ["simpNF", "TopCat.sigmaCofan_pt"],
 ["simpNF", "TopHom.coe_inf"],
 ["simpNF", "TopHom.coe_sup"],
 ["simpNF", "TopHom.coe_top"],
 ["simpNF", "Traversable.foldl_map"],
 ["simpNF", "Traversable.foldlm_map"],
 ["simpNF", "Tree.coe_treesOfNumNodesEq"],
 ["simpNF", "TrivSqZeroExt.fst_expSeries"],
 ["simpNF", "Trivialization.continuousLinearEquivAt_apply"],
 ["simpNF", "Trivialization.continuousLinearEquivAt_prod"],
 ["simpNF", "Trivialization.continuousLinearEquivAt_symm_apply"],
 ["simpNF", "Trivialization.continuousLinearMapAt_apply"],
 ["simpNF", "Trivialization.coordChangeL_prod"],
 ["simpNF", "Trivialization.linearEquivAt_apply"],
 ["simpNF", "Trivialization.linearEquivAt_symm_apply"],
 ["simpNF", "Trivialization.symmL_apply"],
 ["simpNF", "TruncatedWittVector.mk_coeff"],
 ["simpNF", "TypeVec.subtypeVal_toSubtype"],
 ["simpNF", "Types.monoOverEquivalenceSet_counitIso"],
 ["simpNF", "Types.monoOverEquivalenceSet_inverse_map"],
 ["simpNF", "Types.monoOverEquivalenceSet_unitIso"],
 ["simpNF", "ULift.exists"],
 ["simpNF", "ULift.forall"],
 ["simpNF", "ULift.seq_up"],
 ["simpNF", "Ultrafilter.map_id'"],
 ["simpNF", "UniformEquiv.finTwoArrow_apply"],
 ["simpNF", "UniformEquiv.finTwoArrow_symm_apply"],
 ["simpNF", "UniformEquiv.funUnique_apply"],
 ["simpNF", "UniformEquiv.piCongrRight_symm"],
 ["simpNF", "UniformEquiv.piCongrRight_toEquiv"],
 ["simpNF", "UniformEquiv.piCongr_apply"],
 ["simpNF", "UniformEquiv.piCongr_toEquiv"],
 ["simpNF", "UniformEquiv.piFinTwo_apply"],
 ["simpNF", "UniformEquiv.piFinTwo_symm_apply"],
 ["simpNF", "UniformFun.mem_gen"],
 ["simpNF", "UniformFun.ofFun_add"],
 ["simpNF", "UniformFun.ofFun_div"],
 ["simpNF", "UniformFun.ofFun_inv"],
 ["simpNF", "UniformFun.ofFun_mul"],
 ["simpNF", "UniformFun.ofFun_neg"],
 ["simpNF", "UniformFun.ofFun_one"],
 ["simpNF", "UniformFun.ofFun_smul"],
 ["simpNF", "UniformFun.ofFun_sub"],
 ["simpNF", "UniformFun.ofFun_zero"],
 ["simpNF", "UniformFun.toFun_add"],
 ["simpNF", "UniformFun.toFun_div"],
 ["simpNF", "UniformFun.toFun_inv"],
 ["simpNF", "UniformFun.toFun_mul"],
 ["simpNF", "UniformFun.toFun_neg"],
 ["simpNF", "UniformFun.toFun_one"],
 ["simpNF", "UniformFun.toFun_smul"],
 ["simpNF", "UniformFun.toFun_sub"],
 ["simpNF", "UniformFun.toFun_zero"],
 ["simpNF", "UniformOnFun.ofFun_add"],
 ["simpNF", "UniformOnFun.ofFun_div"],
 ["simpNF", "UniformOnFun.ofFun_inv"],
 ["simpNF", "UniformOnFun.ofFun_mul"],
 ["simpNF", "UniformOnFun.ofFun_neg"],
 ["simpNF", "UniformOnFun.ofFun_smul"],
 ["simpNF", "UniformOnFun.ofFun_sub"],
 ["simpNF", "UniformOnFun.one_apply"],
 ["simpNF", "UniformOnFun.toFun_add"],
 ["simpNF", "UniformOnFun.toFun_div"],
 ["simpNF", "UniformOnFun.toFun_inv"],
 ["simpNF", "UniformOnFun.toFun_mul"],
 ["simpNF", "UniformOnFun.toFun_neg"],
 ["simpNF", "UniformOnFun.toFun_one"],
 ["simpNF", "UniformOnFun.toFun_smul"],
 ["simpNF", "UniformOnFun.toFun_sub"],
 ["simpNF", "UniformOnFun.toFun_zero"],
 ["simpNF", "UniformOnFun.zero_apply"],
 ["simpNF", "Unitization.splitMul_apply"],
 ["simpNF", "Units.coe_prod"],
 ["simpNF", "Units.exists_iff_ne_zero"],
 ["simpNF", "Units.mulRight_apply"],
 ["simpNF", "UpperHalfPlane.det_coe'"],
 ["simpNF", "UpperSet.Ici_sSup"],
 ["simpNF", "UpperSet.coe_sInf"],
 ["simpNF", "UpperSet.coe_sSup"],
 ["simpNF", "UpperSet.compl_sInf"],
 ["simpNF", "UpperSet.compl_sSup"],
 ["simpNF", "UpperSet.iInf_Ici"],
 ["simpNF", "UpperSet.infIrred_Ici"],
 ["simpNF", "UpperSet.infIrred_iff_of_finite"],
 ["simpNF", "UpperSet.mem_iSup_iff"],
 ["simpNF", "UpperSet.mem_sInf_iff"],
 ["simpNF", "UpperSet.mem_sSup_iff"],
 ["simpNF", "Vector.get_mem"],
 ["simpNF", "Vector.head_mem"],
 ["simpNF", "Vector.mOfFn_part_some"],
 ["simpNF", "Vector.mapAccumr_cons"],
 ["simpNF", "Vector.mapAccumr_eq_map_of_constant_state"],
 ["simpNF", "Vector.mapAccumr_eq_map_of_unused_state"],
 ["simpNF", "Vector.mapAccumr_map"],
 ["simpNF", "Vector.mapAccumr_mapAccumr"],
 ["simpNF", "Vector.mapAccumr_mapAccumr₂"],
 ["simpNF", "Vector.mapAccumr_nil"],
 ["simpNF", "Vector.mapAccumr_redundant_pair"],
 ["simpNF", "Vector.mapAccumr_snoc"],
 ["simpNF", "Vector.mapAccumr₂_cons"],
 ["simpNF", "Vector.mapAccumr₂_eq_map₂_of_constant_state"],
 ["simpNF", "Vector.mapAccumr₂_eq_map₂_of_unused_state"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr_left"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr_right"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr₂_left_left"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr₂_left_right"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr₂_right_left"],
 ["simpNF", "Vector.mapAccumr₂_mapAccumr₂_right_right"],
 ["simpNF", "Vector.mapAccumr₂_nil"],
 ["simpNF", "Vector.mapAccumr₂_redundant_pair"],
 ["simpNF", "Vector.mapAccumr₂_snoc"],
 ["simpNF", "Vector.mapAccumr₂_unused_input_left"],
 ["simpNF", "Vector.mapAccumr₂_unused_input_right"],
 ["simpNF", "Vector.map_map"],
 ["simpNF", "Vector.map_mapAccumr"],
 ["simpNF", "Vector.map_map₂"],
 ["simpNF", "Vector.map₂_map_left"],
 ["simpNF", "Vector.map₂_map_right"],
 ["simpNF", "Vector.mmap_cons"],
 ["simpNF", "Vector.tail_ofFn"],
 ["simpNF", "Vector.traverse_def"],
 ["simpNF", "VectorBundleCore.coe_coordChange"],
 ["simpNF", "VectorBundleCore.localTriv_apply"],
 ["simpNF", "VectorBundleCore.localTriv_coordChange_eq"],
 ["simpNF", "VectorBundleCore.localTriv_symm_apply"],
 ["simpNF", "VectorBundleCore.localTriv_symm_fst"],
 ["simpNF", "VectorBundleCore.toFiberBundleCore_coordChange"],
 ["simpNF", "VectorBundleCore.trivializationAt_coordChange_eq"],
 ["simpNF", "VonNeumannAlgebra.mem_commutant_iff"],
 ["simpNF", "WType.NatαEquivPUnitSumPUnit_apply"],
 ["simpNF", "WType.NatαEquivPUnitSumPUnit_symm_apply"],
 ["simpNF", "WeakDual.coe_toNormedDual"],
 ["simpNF", "WeakDual.toNormedDual_eq_iff"],
 ["simpNF", "WithLp.dist_equiv_symm_fst"],
 ["simpNF", "WithLp.dist_equiv_symm_snd"],
 ["simpNF", "WithLp.edist_equiv_symm_fst"],
 ["simpNF", "WithLp.edist_equiv_symm_snd"],
 ["simpNF", "WithLp.equiv_fst"],
 ["simpNF", "WithLp.equiv_pi_apply"],
 ["simpNF", "WithLp.equiv_single"],
 ["simpNF", "WithLp.equiv_snd"],
 ["simpNF", "WithLp.equiv_symm_fst"],
 ["simpNF", "WithLp.equiv_symm_pi_apply"],
 ["simpNF", "WithLp.equiv_symm_single"],
 ["simpNF", "WithLp.equiv_symm_snd"],
 ["simpNF", "WithLp.nndist_equiv_symm_fst"],
 ["simpNF", "WithLp.nndist_equiv_symm_snd"],
 ["simpNF", "WithLp.nnnorm_equiv_symm_fst"],
 ["simpNF", "WithLp.nnnorm_equiv_symm_snd"],
 ["simpNF", "WithLp.norm_equiv_symm_fst"],
 ["simpNF", "WithLp.norm_equiv_symm_snd"],
 ["simpNF", "WithLp.prodContinuousLinearEquiv_apply"],
 ["simpNF", "WithLp.prodContinuousLinearEquiv_symm_apply"],
 ["simpNF", "WithLp.prod_nnnorm_equiv"],
 ["simpNF", "WithLp.prod_nnnorm_equiv_symm"],
 ["simpNF", "WithLp.prod_norm_equiv"],
 ["simpNF", "WithLp.prod_norm_equiv_symm"],
 ["simpNF", "WittVector.truncate_liftFun"],
 ["simpNF", "WittVector.truncate_mk'"],
 ["simpNF", "ZFSet.map_isFunc"],
 ["simpNF", "ZFSet.mem_image"],
 ["simpNF", "ZFSet.mem_map"],
 ["simpNF", "ZFSet.mem_pairSep"],
 ["simpNF", "ZFSet.mem_prod"],
 ["simpNF", "ZFSet.mem_range"],
 ["simpNF", "ZFSet.mem_sUnion"],
 ["simpNF", "ZFSet.toSet_sUnion"],
 ["simpNF", "ZFSet.toSet_sep"],
 ["simpNF", "ZMod.χ₄_apply"],
 ["simpNF", "ZMod.χ₈'_apply"],
 ["simpNF", "ZMod.χ₈_apply"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_add"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_comp_to_continuous_fun"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_copy"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_mul"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_neg"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_nsmulRec"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_smul"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_star"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_sub"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_toContinuousMap"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_zero"],
 ["simpNF", "ZeroAtInftyContinuousMap.coe_zsmulRec"],
 ["simpNF", "ZeroAtInftyContinuousMap.norm_toBCF_eq_norm"],
 ["simpNF", "ZeroAtInftyContinuousMap.toBCF_apply"],
 ["simpNF", "ZeroAtInftyContinuousMap.toBCF_toFun"],
 ["simpNF", "Zspan.ceil_eq_self_of_mem"],
 ["simpNF", "Zspan.coe_floor_self"],
 ["simpNF", "Zspan.floor_eq_self_of_mem"],
 ["simpNF", "Zspan.fract_add_zspan"],
 ["simpNF", "Zspan.fract_zspan_add"],
 ["simpNF", "Zspan.mem_fundamentalDomain"],
 ["simpNF", "Zspan.quotientEquiv_apply_mk"],
 ["simpNF", "Zspan.repr_ceil_apply"],
 ["simpNF", "Zspan.repr_floor_apply"],
 ["simpNF", "Zspan.repr_fract_apply"],
 ["simpNF", "Zspan.volume_fundamentalDomain"],
 ["simpNF", "Zsqrtd.neg_im"],
 ["simpNF", "Zsqrtd.neg_re"],
 ["simpNF", "Zsqrtd.star_im"],
 ["simpNF", "Zsqrtd.star_mk"],
 ["simpNF", "Zsqrtd.toReal_apply"],
 ["simpNF", "adicCompletion.coe_eval"],
 ["simpNF", "bernsteinApproximation.apply"],
 ["simpNF", "circle.argEquiv_apply_coe"],
 ["simpNF", "circle.argEquiv_symm_apply"],
 ["simpNF", "circle.argPartialEquiv_symm_apply"],
 ["simpNF", "circle.ofConjDivSelf_coe"],
 ["simpNF", "circle.toUnits_apply"],
 ["simpNF", "circleIntegral.integral_const_mul"],
 ["simpNF", "circleIntegral.integral_smul"],
 ["simpNF", "circleIntegral.integral_smul_const"],
 ["simpNF", "circleIntegral.integral_sub_center_inv"],
 ["simpNF", "deriv.log"],
 ["simpNF", "deriv.neg'"],
 ["simpNF", "deriv.star'"],
 ["simpNF", "elementalStarAlgebra.characterSpaceToSpectrum_coe"],
 ["simpNF", "fderiv.log"],
 ["simpNF", "groupCohomology.dZeroArrowIso_hom_right"],
 ["simpNF", "groupCohomology.dZeroArrowIso_inv_right"],
 ["simpNF", "groupCohomology.shortComplexH0_X₁_carrier"],
 ["simpNF", "groupCohomology.shortComplexH0_X₃_carrier"],
 ["simpNF", "homology'.π'_map"],
 ["simpNF", "homology'.π'_map_assoc"],
 ["simpNF", "inhomogeneousCochains.d_apply"],
 ["simpNF", "intervalIntegral.integral_add"],
 ["simpNF", "intervalIntegral.integral_const"],
 ["simpNF", "intervalIntegral.integral_const_mul"],
 ["simpNF", "intervalIntegral.integral_div"],
 ["simpNF", "intervalIntegral.integral_mul_const"],
 ["simpNF", "intervalIntegral.integral_neg"],
 ["simpNF", "intervalIntegral.integral_smul"],
 ["simpNF", "intervalIntegral.integral_smul_const"],
 ["simpNF", "intervalIntegral.integral_sub"],
 ["simpNF", "intervalIntegral.integral_zero"],
 ["simpNF", "intervalIntegral.intervalIntegrable_id"],
 ["simpNF", "intervalIntegral.intervalIntegrable_inv"],
 ["simpNF", "intervalIntegral.intervalIntegrable_inv_one_add_sq"],
 ["simpNF", "intervalIntegral.intervalIntegrable_pow"],
 ["simpNF", "lp.coeFn_add"],
 ["simpNF", "lp.coeFn_neg"],
 ["simpNF", "lp.coeFn_smul"],
 ["simpNF", "lp.coeFn_star"],
 ["simpNF", "lp.coeFn_sub"],
 ["simpNF", "lp.infty_coeFn_int_cast"],
 ["simpNF", "lp.infty_coeFn_mul"],
 ["simpNF", "lp.infty_coeFn_nat_cast"],
 ["simpNF", "lp.infty_coeFn_pow"],
 ["simpNF", "padicNorm.eq_zpow_of_nonzero"],
 ["simpNF", "padicNormE.eq_padic_norm'"],
 ["simpNF", "padicNormE.norm_p_pow"],
 ["simpNF", "padicNormE.norm_p_zpow"],
 ["simpNF", "padicValRat.self_pow_inv"],
 ["simpNF", "sInfHom.coe_top"],
 ["simpNF", "sSupHom.coe_bot"],
 ["simpNF", "skewAdjoint.negISMul_apply_coe"],
 ["simpNF", "smoothSheafCommRing.evalHom_germ"],
 ["simpNF", "smoothSheafCommRing.eval_germ"],
 ["simpNF", "smoothSheafCommRing.forgetStalk_inv_comp_eval"],
 ["simpNF", "smoothSheafCommRing.ι_evalHom"],
 ["simpNF", "smoothSheafCommRing.ι_forgetStalk_hom"],
 ["simpNF", "εNFA.mem_stepSet_iff"],
 ["simpNF", "AddCommGroup.DirectLimit.map_id"],
 ["simpNF", "AddCommGroupCat.HasLimit.productLimitCone_cone_pt"],
 ["simpNF", "AddCommGroupCat.HasLimit.productLimitCone_cone_π"],
 ["simpNF",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_apply"],
 ["simpNF",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_symm_apply_coe"],
 ["simpNF", "AddCommGroupCat.enough_injectives_aux_proofs.toNext_apply"],
 ["simpNF", "AddCommGroupCat.enough_injectives_aux_proofs.toRatCircle_apply"],
 ["simpNF", "AddMonoid.End.coe_smul"],
 ["simpNF", "AddSubgroup.normedMk.apply"],
 ["simpNF", "Affine.Simplex.centroid_eq_iff"],
 ["simpNF", "AffineSubspace.isometryEquivMap.apply_symm_apply"],
 ["simpNF", "AffineSubspace.isometryEquivMap.coe_apply"],
 ["simpNF", "AlgebraicGeometry.StructureSheaf.coe_openToLocalization"],
 ["simpNF", "AlgebraicGeometry.StructureSheaf.isLocallyFraction_pred"],
 ["simpNF", "AlgebraicGeometry.StructureSheaf.res_const"],
 ["simpNF", "AlgebraicTopology.AlternatingFaceMapComplex.obj_d_eq"],
 ["simpNF", "AlgebraicTopology.DoldKan.N₂_obj_X_d"],
 ["simpNF", "AlgebraicTopology.DoldKan.Γ₀_map_app"],
 ["simpNF", "AlgebraicTopology.DoldKan.Γ₂_map_f_app"],
 ["simpNF", "AlgebraicTopology.DoldKan.Γ₂_obj_p_app"],
 ["simpNF", "AlgebraicTopology.NormalizedMooreComplex.objX_add_one"],
 ["simpNF", "AlgebraicTopology.NormalizedMooreComplex.obj_d"],
 ["simpNF", "AlternatingMap.mk.sizeOf_spec"],
 ["simpNF", "Basis.SmithNormalForm.repr_apply_embedding_eq_repr_smul"],
 ["simpNF", "Basis.SmithNormalForm.repr_comp_embedding_eq_smul"],
 ["simpNF", "BoxIntegral.Box.coe_mk'"],
 ["simpNF", "BoxIntegral.Box.coe_splitLower"],
 ["simpNF", "BoxIntegral.Box.coe_splitUpper"],
 ["simpNF", "BoxIntegral.Box.exists_mem_splitCenterBox"],
 ["simpNF", "BoxIntegral.Box.iUnion_coe_splitCenterBox"],
 ["simpNF", "BoxIntegral.Box.lower_mem_Icc"],
 ["simpNF", "BoxIntegral.Box.mem_mk"],
 ["simpNF", "BoxIntegral.Box.mk'_eq_bot"],
 ["simpNF", "BoxIntegral.Box.splitCenterBoxEmb_apply"],
 ["simpNF", "BoxIntegral.Box.upper_mem_Icc"],
 ["simpNF", "BoxIntegral.Box.volume_apply'"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.coe_mk"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.instZeroBoxAdditiveMap_zero_apply"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.map_apply"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.map_split_add"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.restrict_apply"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.toSMul_apply"],
 ["simpNF", "BoxIntegral.BoxAdditiveMap.upperSubLower_apply"],
 ["simpNF", "BoxIntegral.Integrable.toBoxAdditive_apply"],
 ["simpNF", "BoxIntegral.Prepartition.biUnion_boxes"],
 ["simpNF", "BoxIntegral.Prepartition.biUnion_top"],
 ["simpNF", "BoxIntegral.Prepartition.disjUnion_boxes"],
 ["simpNF", "BoxIntegral.Prepartition.distortion_biUnionTagged"],
 ["simpNF", "BoxIntegral.Prepartition.filter_true"],
 ["simpNF", "BoxIntegral.Prepartition.iUnion_biUnion"],
 ["simpNF", "BoxIntegral.Prepartition.iUnion_biUnionTagged"],
 ["simpNF", "BoxIntegral.Prepartition.iUnion_filter_not"],
 ["simpNF", "BoxIntegral.Prepartition.iUnion_ofWithBot"],
 ["simpNF", "BoxIntegral.Prepartition.mem_biUnion"],
 ["simpNF", "BoxIntegral.Prepartition.mem_biUnionTagged"],
 ["simpNF", "BoxIntegral.Prepartition.mem_iUnion"],
 ["simpNF", "BoxIntegral.Prepartition.mem_inf"],
 ["simpNF", "BoxIntegral.Prepartition.mem_restrict"],
 ["simpNF", "BoxIntegral.Prepartition.mem_splitCenter"],
 ["simpNF", "BoxIntegral.Prepartition.splitMany_insert"],
 ["simpNF", "BoxIntegral.Prepartition.sum_biUnion_boxes"],
 ["simpNF", "BoxIntegral.Prepartition.sum_disj_union_boxes"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.biUnionPrepartition_tag"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.disjUnion_boxes"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.distortion_biUnionPrepartition"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.distortion_single"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.iUnion_filter_not"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.iUnion_mk"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.iUnion_single"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.isHenstock_biUnionTagged"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.isHenstock_single_iff"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.isSubordinate_biUnionTagged"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.isSubordinate_single"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.mem_iUnion"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.mem_mk"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.mem_single"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.single_boxes_val"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.single_tag"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.unionComplToSubordinate_boxes"],
 ["simpNF", "Bundle.TotalSpace.exists"],
 ["simpNF", "CategoryTheory.Abelian.subobjectIsoSubobjectOp_apply"],
 ["simpNF", "CategoryTheory.Abelian.subobjectIsoSubobjectOp_symm_apply"],
 ["simpNF", "CategoryTheory.Arrow.cechConerve_map"],
 ["simpNF", "CategoryTheory.Arrow.cechConerve_obj"],
 ["simpNF", "CategoryTheory.Arrow.cechNerve_map"],
 ["simpNF", "CategoryTheory.Arrow.cechNerve_obj"],
 ["simpNF", "CategoryTheory.Arrow.comp_right"],
 ["simpNF", "CategoryTheory.Arrow.homMk'_right"],
 ["simpNF", "CategoryTheory.Arrow.homMk_right"],
 ["simpNF", "CategoryTheory.Arrow.hom_inv_id_right"],
 ["simpNF", "CategoryTheory.Arrow.hom_inv_id_right_assoc"],
 ["simpNF", "CategoryTheory.Arrow.id_right"],
 ["simpNF", "CategoryTheory.Arrow.inv_hom_id_right"],
 ["simpNF", "CategoryTheory.Arrow.inv_hom_id_right_assoc"],
 ["simpNF", "CategoryTheory.Arrow.inv_right"],
 ["simpNF", "CategoryTheory.Arrow.isoMk_hom_right"],
 ["simpNF", "CategoryTheory.Arrow.isoMk_inv_right"],
 ["simpNF", "CategoryTheory.Arrow.mapAugmentedCechNerve_right"],
 ["simpNF", "CategoryTheory.Arrow.mapCechConerve_app"],
 ["simpNF", "CategoryTheory.Arrow.mapCechNerve_app"],
 ["simpNF", "CategoryTheory.Arrow.rightFunc_map"],
 ["simpNF", "CategoryTheory.Arrow.squareToSnd_right"],
 ["simpNF", "CategoryTheory.Arrow.square_to_iso_invert"],
 ["simpNF", "CategoryTheory.Arrow.w_mk_right"],
 ["simpNF", "CategoryTheory.Arrow.w_mk_right_assoc"],
 ["simpNF", "CategoryTheory.AsSmall.equiv_counitIso"],
 ["simpNF",
  "CategoryTheory.CategoryOfElements.structuredArrowEquivalence_counitIso_hom"],
 ["simpNF",
  "CategoryTheory.CategoryOfElements.structuredArrowEquivalence_counitIso_inv"],
 ["simpNF",
  "CategoryTheory.CategoryOfElements.structuredArrowEquivalence_functor_obj"],
 ["simpNF",
  "CategoryTheory.CategoryOfElements.structuredArrowEquivalence_unitIso_hom"],
 ["simpNF",
  "CategoryTheory.CategoryOfElements.structuredArrowEquivalence_unitIso_inv"],
 ["simpNF", "CategoryTheory.CategoryOfElements.toStructuredArrow_obj"],
 ["simpNF", "CategoryTheory.Comonad.adj_unit"],
 ["simpNF", "CategoryTheory.ComposableArrows.isoMk_hom"],
 ["simpNF", "CategoryTheory.ComposableArrows.isoMk_inv"],
 ["simpNF", "CategoryTheory.CosimplicialObject.equivalenceLeftToRight_right"],
 ["simpNF",
  "CategoryTheory.CosimplicialObject.equivalenceRightToLeft_right_app"],
 ["simpNF", "CategoryTheory.Discrete.equivalence_counitIso"],
 ["simpNF", "CategoryTheory.Discrete.equivalence_unitIso"],
 ["simpNF", "CategoryTheory.Equalizer.firstObjEqFamily_inv"],
 ["simpNF", "CategoryTheory.Equivalence.congrLeft_unitIso"],
 ["simpNF", "CategoryTheory.Equivalence.congrRight_counitIso"],
 ["simpNF", "CategoryTheory.Equivalence.congrRight_unitIso"],
 ["simpNF", "CategoryTheory.Equivalence.pi_counitIso"],
 ["simpNF", "CategoryTheory.Equivalence.pi_functor"],
 ["simpNF", "CategoryTheory.Equivalence.pi_inverse"],
 ["simpNF", "CategoryTheory.Equivalence.pi_unitIso"],
 ["simpNF", "CategoryTheory.Equivalence.pow_neg_one"],
 ["simpNF", "CategoryTheory.Free.lift_map"],
 ["simpNF", "CategoryTheory.Functor.equiv_unitIso"],
 ["simpNF", "CategoryTheory.Functor.mapArrowFunctor_map_app_right"],
 ["simpNF", "CategoryTheory.Functor.mapArrow_map_right"],
 ["simpNF", "CategoryTheory.Functor.map_sum"],
 ["simpNF", "CategoryTheory.Functor.opInv_map"],
 ["simpNF", "CategoryTheory.Functor.opUnopEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Functor.toPreimages_obj"],
 ["simpNF", "CategoryTheory.GrothendieckTopology.diagramNatTrans_app"],
 ["simpNF", "CategoryTheory.GrothendieckTopology.diagramPullback_app"],
 ["simpNF", "CategoryTheory.GrothendieckTopology.diagram_map"],
 ["simpNF",
  "CategoryTheory.HomOrthogonal.matrixDecompositionAddEquiv_symm_apply"],
 ["simpNF",
  "CategoryTheory.HomOrthogonal.matrixDecompositionLinearEquiv_symm_apply"],
 ["simpNF", "CategoryTheory.HomOrthogonal.matrixDecomposition_symm_apply"],
 ["simpNF", "CategoryTheory.IsIso.hom_inv_id_apply"],
 ["simpNF", "CategoryTheory.IsIso.inv_hom_id_apply"],
 ["simpNF", "CategoryTheory.Limits.biproductBiproductIso_hom"],
 ["simpNF", "CategoryTheory.Limits.biproductBiproductIso_inv"],
 ["simpNF", "CategoryTheory.Limits.coconeEquivalenceOpConeOp_counitIso"],
 ["simpNF", "CategoryTheory.Limits.coconeEquivalenceOpConeOp_unitIso"],
 ["simpNF", "CategoryTheory.Limits.cokernelBiproductFromSubtypeIso_inv"],
 ["simpNF",
  "CategoryTheory.Limits.cokernelCoforkBiproductFromSubtype_isColimit"],
 ["simpNF", "CategoryTheory.Limits.cokernelOrderHom_coe"],
 ["simpNF", "CategoryTheory.Limits.colimitCoconeOfUnique_cocone_ι"],
 ["simpNF", "CategoryTheory.Limits.coprodComparisonNatIso_inv"],
 ["simpNF", "CategoryTheory.Limits.imageSubobjectMap_arrow"],
 ["simpNF", "CategoryTheory.Limits.imageSubobjectMap_arrow_assoc"],
 ["simpNF", "CategoryTheory.Limits.kernelBiproductToSubtypeIso_hom"],
 ["simpNF", "CategoryTheory.Limits.kernelForkBiproductToSubtype_isLimit"],
 ["simpNF", "CategoryTheory.Limits.kernelOrderHom_coe"],
 ["simpNF", "CategoryTheory.Limits.limitConeOfUnique_cone_π"],
 ["simpNF", "CategoryTheory.Limits.map_lift_piComparison"],
 ["simpNF", "CategoryTheory.Limits.map_lift_piComparison_assoc"],
 ["simpNF", "CategoryTheory.Limits.piPiIso_hom"],
 ["simpNF", "CategoryTheory.Limits.piPiIso_inv"],
 ["simpNF", "CategoryTheory.Limits.prodComparisonNatIso_inv"],
 ["simpNF", "CategoryTheory.Limits.sigmaComparison_map_desc"],
 ["simpNF", "CategoryTheory.Limits.sigmaComparison_map_desc_assoc"],
 ["simpNF", "CategoryTheory.Limits.sigmaSigmaIso_hom"],
 ["simpNF", "CategoryTheory.Limits.sigmaSigmaIso_inv"],
 ["simpNF",
  "CategoryTheory.Limits.walkingParallelFamilyEquivWalkingParallelPair_functor_map"],
 ["simpNF",
  "CategoryTheory.Limits.walkingParallelFamilyEquivWalkingParallelPair_inverse_map"],
 ["simpNF",
  "CategoryTheory.Limits.walkingParallelFamilyEquivWalkingParallelPair_inverse_obj"],
 ["simpNF", "CategoryTheory.Mat.comp_apply"],
 ["simpNF", "CategoryTheory.Mat_.additiveObjIsoBiproduct_hom_π"],
 ["simpNF", "CategoryTheory.Mat_.additiveObjIsoBiproduct_hom_π_assoc"],
 ["simpNF", "CategoryTheory.Mat_.comp_apply"],
 ["simpNF", "CategoryTheory.Mat_.embeddingLiftIso_hom_app"],
 ["simpNF", "CategoryTheory.Mat_.embeddingLiftIso_inv_app"],
 ["simpNF", "CategoryTheory.Mat_.isoBiproductEmbedding_hom"],
 ["simpNF", "CategoryTheory.Mat_.isoBiproductEmbedding_inv"],
 ["simpNF", "CategoryTheory.Mat_.lift_map"],
 ["simpNF", "CategoryTheory.Mat_.lift_obj"],
 ["simpNF", "CategoryTheory.Mat_.ι_additiveObjIsoBiproduct_inv"],
 ["simpNF", "CategoryTheory.Mat_.ι_additiveObjIsoBiproduct_inv_assoc"],
 ["simpNF", "CategoryTheory.Monad.adj_counit"],
 ["simpNF", "CategoryTheory.MonoOver.congr_counitIso"],
 ["simpNF", "CategoryTheory.MonoOver.congr_unitIso"],
 ["simpNF", "CategoryTheory.NatIso.pi'_hom"],
 ["simpNF", "CategoryTheory.NatIso.pi'_inv"],
 ["simpNF", "CategoryTheory.NatIso.pi_hom"],
 ["simpNF", "CategoryTheory.NatIso.pi_inv"],
 ["simpNF", "CategoryTheory.NatTrans.app_sum"],
 ["simpNF", "CategoryTheory.Over.iteratedSliceEquiv_counitIso"],
 ["simpNF", "CategoryTheory.Over.iteratedSliceEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Pi.equivalenceOfEquiv_counitIso"],
 ["simpNF", "CategoryTheory.Pi.equivalenceOfEquiv_functor"],
 ["simpNF", "CategoryTheory.Pi.equivalenceOfEquiv_inverse"],
 ["simpNF", "CategoryTheory.Pi.equivalenceOfEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Pi.optionEquivalence_functor"],
 ["simpNF", "CategoryTheory.Pi.optionEquivalence_inverse"],
 ["simpNF", "CategoryTheory.Pi.optionEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Pi.sum_map_app"],
 ["simpNF", "CategoryTheory.Pi.sum_obj_map"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_mor₁"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_mor₂"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_mor₃"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_obj₁"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_obj₂"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle_obj₃"],
 ["simpNF", "CategoryTheory.Sieve.bind_apply"],
 ["simpNF", "CategoryTheory.Sieve.generate_apply"],
 ["simpNF", "CategoryTheory.Sieve.pushforward_apply"],
 ["simpNF", "CategoryTheory.Sieve.sInf_apply"],
 ["simpNF", "CategoryTheory.Sieve.sSup_apply"],
 ["simpNF", "CategoryTheory.Sieve.sieveOfSubfunctor_apply"],
 ["simpNF", "CategoryTheory.Sigma.natIso_hom"],
 ["simpNF", "CategoryTheory.Sigma.natIso_inv"],
 ["simpNF", "CategoryTheory.SimplicialObject.augmentedCechNerve_map_left_app"],
 ["simpNF", "CategoryTheory.SimplicialObject.augmentedCechNerve_map_right"],
 ["simpNF", "CategoryTheory.SimplicialObject.augmentedCechNerve_obj_left_map"],
 ["simpNF", "CategoryTheory.SimplicialObject.augmentedCechNerve_obj_left_obj"],
 ["simpNF", "CategoryTheory.SimplicialObject.equivalenceLeftToRight_left_app"],
 ["simpNF", "CategoryTheory.SimplicialObject.equivalenceLeftToRight_right"],
 ["simpNF", "CategoryTheory.SimplicialObject.equivalenceRightToLeft_right"],
 ["simpNF", "CategoryTheory.Subobject.finset_inf_factors"],
 ["simpNF", "CategoryTheory.ThinSkeleton.fromThinSkeleton_map"],
 ["simpNF", "CategoryTheory.ThinSkeleton.map_map"],
 ["simpNF", "CategoryTheory.WithInitial.liftToInitialUnique_hom_app"],
 ["simpNF", "CategoryTheory.WithInitial.liftToInitialUnique_inv_app"],
 ["simpNF", "CategoryTheory.WithInitial.liftToInitial_map"],
 ["simpNF", "CategoryTheory.WithInitial.liftToInitial_obj"],
 ["simpNF", "CategoryTheory.WithInitial.lift_map"],
 ["simpNF", "CategoryTheory.WithInitial.lift_obj"],
 ["simpNF", "CategoryTheory.WithTerminal.liftToTerminalUnique_hom_app"],
 ["simpNF", "CategoryTheory.WithTerminal.liftToTerminalUnique_inv_app"],
 ["simpNF", "CategoryTheory.WithTerminal.liftToTerminal_map"],
 ["simpNF", "CategoryTheory.WithTerminal.liftToTerminal_obj"],
 ["simpNF", "CategoryTheory.WithTerminal.lift_map"],
 ["simpNF", "CategoryTheory.WithTerminal.lift_obj"],
 ["simpNF", "Combinatorics.Line.diagonal_apply"],
 ["simpNF", "Combinatorics.Line.horizontal_apply"],
 ["simpNF", "Combinatorics.Line.map_apply"],
 ["simpNF", "Combinatorics.Line.prod_apply"],
 ["simpNF", "Combinatorics.Line.vertical_apply"],
 ["simpNF", "CompHaus.finiteCoproduct.cocone_ι"],
 ["simpNF", "CompHaus.finiteCoproduct.isColimit_desc"],
 ["simpNF", "Complex.UnitDisc.coe_conj"],
 ["simpNF", "Computation.LiftRelAux.ret_left"],
 ["simpNF", "Computation.LiftRelAux.ret_right"],
 ["simpNF", "ContinuousAlternatingMap.mk.sizeOf_spec"],
 ["simpNF", "ContinuousLinearMap.NonlinearRightInverse.right_inv"],
 ["simpNF", "ContinuousMap.Homotopy.apply_one"],
 ["simpNF", "ContinuousMap.Homotopy.apply_zero"],
 ["simpNF", "ContinuousMap.Homotopy.cast_apply"],
 ["simpNF", "ContinuousMap.Homotopy.coe_toContinuousMap"],
 ["simpNF", "ContinuousMap.Homotopy.compContinuousMap_apply"],
 ["simpNF", "ContinuousMap.Homotopy.curry_apply"],
 ["simpNF", "ContinuousMap.Homotopy.extend_apply_coe"],
 ["simpNF", "ContinuousMap.Homotopy.extend_apply_of_mem_I"],
 ["simpNF", "ContinuousMap.Homotopy.hcomp_apply"],
 ["simpNF", "ContinuousMap.Homotopy.prod_apply"],
 ["simpNF", "ContinuousMap.Homotopy.refl_apply"],
 ["simpNF", "ContinuousMap.Homotopy.symm_apply"],
 ["simpNF", "ContinuousMap.HomotopyEquiv.coe_invFun"],
 ["simpNF", "ContinuousMap.HomotopyEquiv.toFun_eq_coe"],
 ["simpNF", "ContinuousMap.HomotopyRel.cast_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.cast_toFun"],
 ["simpNF", "ContinuousMap.HomotopyRel.compContinuousMap_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.compContinuousMap_toFun"],
 ["simpNF", "ContinuousMap.HomotopyRel.pi_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.pi_toFun"],
 ["simpNF", "ContinuousMap.HomotopyRel.prod_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.prod_toFun"],
 ["simpNF", "ContinuousMap.HomotopyRel.refl_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.refl_toFun"],
 ["simpNF", "ContinuousMap.HomotopyRel.symm_apply"],
 ["simpNF", "ContinuousMap.HomotopyRel.symm_toFun"],
 ["simpNF", "ContinuousMap.HomotopyWith.apply_one"],
 ["simpNF", "ContinuousMap.HomotopyWith.apply_zero"],
 ["simpNF", "ContinuousMap.HomotopyWith.cast_apply"],
 ["simpNF", "ContinuousMap.HomotopyWith.cast_toFun"],
 ["simpNF", "ContinuousMap.HomotopyWith.coe_toHomotopy"],
 ["simpNF", "ContinuousMap.HomotopyWith.refl_apply"],
 ["simpNF", "ContinuousMap.HomotopyWith.refl_toFun"],
 ["simpNF", "ContinuousMap.HomotopyWith.symm_apply"],
 ["simpNF", "ContinuousMap.HomotopyWith.symm_toFun"],
 ["simpNF", "Ctop.Realizer.nhds_σ"],
 ["simpNF", "DFinsupp.mapRange.addEquiv_apply"],
 ["simpNF", "DFinsupp.mapRange.addEquiv_refl"],
 ["simpNF", "DFinsupp.mapRange.addEquiv_symm"],
 ["simpNF", "DFinsupp.mapRange.addMonoidHom_apply"],
 ["simpNF", "DFinsupp.mapRange.addMonoidHom_id"],
 ["simpNF", "DFinsupp.mapRange.linearEquiv_apply"],
 ["simpNF", "DFinsupp.mapRange.linearEquiv_refl"],
 ["simpNF", "DFinsupp.mapRange.linearEquiv_symm"],
 ["simpNF", "DFinsupp.mapRange.linearMap_apply"],
 ["simpNF", "DFinsupp.mapRange.linearMap_id"],
 ["simpNF", "DirectSum.IsInternal.collectedBasis_coe"],
 ["simpNF", "DirectSum.IsInternal.isometryL2OfOrthogonalFamily_symm_apply"],
 ["simpNF", "Equiv.Perm.sigmaCongrRight_inv"],
 ["simpNF", "Equiv.Perm.sigmaCongrRight_mul"],
 ["simpNF", "Equiv.Perm.sigmaCongrRight_refl"],
 ["simpNF", "Equiv.Perm.sigmaCongrRight_symm"],
 ["simpNF", "Equiv.Perm.sigmaCongrRight_trans"],
 ["simpNF", "Equiv.Perm.sign_subtypeCongr"],
 ["simpNF", "Equiv.Perm.support_subtype_perm"],
 ["simpNF", "Filter.CompleteLatticeHom.apply_limsup_iterate"],
 ["simpNF", "Filter.EventuallyConst.const"],
 ["simpNF", "Filter.EventuallyConst.indicator_const_iff"],
 ["simpNF", "Filter.EventuallyConst.mulIndicator_const_iff"],
 ["simpNF", "Filter.Germ.coe_add"],
 ["simpNF", "Filter.Germ.coe_div"],
 ["simpNF", "Filter.Germ.coe_int"],
 ["simpNF", "Filter.Germ.coe_inv"],
 ["simpNF", "Filter.Germ.coe_mul"],
 ["simpNF", "Filter.Germ.coe_nat"],
 ["simpNF", "Filter.Germ.coe_neg"],
 ["simpNF", "Filter.Germ.coe_nsmul"],
 ["simpNF", "Filter.Germ.coe_pow"],
 ["simpNF", "Filter.Germ.coe_smul"],
 ["simpNF", "Filter.Germ.coe_smul'"],
 ["simpNF", "Filter.Germ.coe_sub"],
 ["simpNF", "Filter.Germ.coe_vadd"],
 ["simpNF", "Filter.Germ.coe_vadd'"],
 ["simpNF", "Filter.Germ.liftPred_coe"],
 ["simpNF", "Filter.Germ.liftRel_coe"],
 ["simpNF", "Filter.Germ.map₂_coe"],
 ["simpNF", "FinEnum.Finset.mem_enum"],
 ["simpNF", "Finset.Nat.antidiagonal_filter_fst_le_of_le"],
 ["simpNF", "Finset.Nat.antidiagonal_filter_le_fst_of_le"],
 ["simpNF", "Finset.Nat.antidiagonal_filter_le_snd_of_le"],
 ["simpNF", "Finset.Nat.antidiagonal_filter_snd_le_of_le"],
 ["simpNF", "FirstOrder.Sequence₂.sum_card"],
 ["simpNF", "FreeAddGroup.lift.mk"],
 ["simpNF", "FreeAddGroup.map.id'"],
 ["simpNF", "FreeAddGroup.map.mk"],
 ["simpNF", "FreeAddGroup.reduce.cons"],
 ["simpNF", "FreeGroup.lift.mk"],
 ["simpNF", "FreeGroup.map.id'"],
 ["simpNF", "FreeGroup.map.mk"],
 ["simpNF", "FreeGroup.reduce.cons"],
 ["simpNF", "Frm.Iso.mk_hom_toFun"],
 ["simpNF", "Frm.Iso.mk_inv_toFun"],
 ["simpNF", "Function.Embedding.sigmaMap_apply"],
 ["simpNF", "Function.ExtendByOne.hom_apply"],
 ["simpNF", "Function.ExtendByZero.hom_apply"],
 ["simpNF", "Function.ExtendByZero.linearMap_apply"],
 ["simpNF", "Function.Involutive.exists_mem_and_apply_eq_iff"],
 ["simpNF", "Function.OfArity.const_succ"],
 ["simpNF", "Functor.Comp.run_seq"],
 ["simpNF", "HahnSeries.SummableFamily.coe_add"],
 ["simpNF", "HahnSeries.SummableFamily.coe_neg"],
 ["simpNF", "HahnSeries.SummableFamily.coe_sub"],
 ["simpNF", "HahnSeries.SummableFamily.embDomain_image"],
 ["simpNF", "HahnSeries.SummableFamily.embDomain_notin_range"],
 ["simpNF", "HahnSeries.SummableFamily.hsum_coeff"],
 ["simpNF", "HahnSeries.SummableFamily.hsum_ofFinsupp"],
 ["simpNF", "HilbertBasis.ofRepr.sizeOf_spec"],
 ["simpNF", "HomologicalComplex.Hom.sqFrom_right"],
 ["simpNF", "HomologicalComplex.Hom.sqTo_right"],
 ["simpNF", "Ideal.Factors.piQuotientEquiv_map"],
 ["simpNF", "Ideal.Factors.piQuotientEquiv_mk"],
 ["simpNF", "Ideal.Filtration.bot_N"],
 ["simpNF", "Ideal.Filtration.iInf_N"],
 ["simpNF", "Ideal.Filtration.iSup_N"],
 ["simpNF", "Ideal.Filtration.inf_N"],
 ["simpNF", "Ideal.Filtration.mem_submodule"],
 ["simpNF", "Ideal.Filtration.sInf_N"],
 ["simpNF", "Ideal.Filtration.sSup_N"],
 ["simpNF", "Ideal.Filtration.sup_N"],
 ["simpNF", "Ideal.Filtration.top_N"],
 ["simpNF", "LevenshteinEstimator'.mk.sizeOf_spec"],
 ["simpNF", "LinearMap.IsSymmetric.apply_clm"],
 ["simpNF", "LinearMap.IsSymmetric.apply_eigenvectorBasis"],
 ["simpNF", "LinearMap.IsSymmetric.coe_reApplyInnerSelf_apply"],
 ["simpNF", "LinearMap.IsSymmetric.diagonalization_symm_apply"],
 ["simpNF", "LinearPMap.mk.sizeOf_spec"],
 ["simpNF", "List.Ico.filter_le"],
 ["simpNF", "List.Ico.filter_le_of_bot"],
 ["simpNF", "List.Ico.filter_lt"],
 ["simpNF", "List.Ico.mem"],
 ["simpNF", "List.Nat.mem_antidiagonal"],
 ["simpNF", "List.Nodup.getEquivOfForallMemList_symm_apply_val"],
 ["simpNF", "List.Nodup.getEquiv_symm_apply_val"],
 ["simpNF", "List.Nodup.pairwise_coe"],
 ["simpNF", "List.Sorted.coe_getIso_symm_apply"],
 ["simpNF", "List.TProd.elim_of_mem"],
 ["simpNF", "List.TProd.elim_of_ne"],
 ["simpNF", "Matrix.GeneralLinearGroup.val_det_apply"],
 ["simpNF", "Matrix.GeneralLinearGroup.val_inv_det_apply"],
 ["simpNF", "Matrix.SpecialLinearGroup.det_coe"],
 ["simpNF", "Matrix.StdBasisMatrix.apply_of_col_ne"],
 ["simpNF", "Matrix.StdBasisMatrix.apply_of_ne"],
 ["simpNF", "Matrix.StdBasisMatrix.apply_of_row_ne"],
 ["simpNF", "Matrix.StdBasisMatrix.diag_same"],
 ["simpNF", "Matrix.TransvectionStruct.det"],
 ["simpNF", "Matrix.TransvectionStruct.det_toMatrix_prod"],
 ["simpNF", "MeasureTheory.AEDisjoint.iUnion_left_iff"],
 ["simpNF", "MeasureTheory.AEDisjoint.iUnion_right_iff"],
 ["simpNF", "MeasureTheory.AEEqFun.comp₂Measurable_mk_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.comp₂_mk_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.inv_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.mk_add_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.mk_mul_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.mk_pow"],
 ["simpNF", "MeasureTheory.AEEqFun.mk_zpow"],
 ["simpNF", "MeasureTheory.AEEqFun.neg_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.pair_mk_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.posPart_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.smul_mk"],
 ["simpNF", "MeasureTheory.AEEqFun.toGermAddMonoidHom_apply"],
 ["simpNF", "MeasureTheory.AEEqFun.toGermMonoidHom_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.equivSignedMeasure_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.im_apply"],
 ["simpNF", "MeasureTheory.ComplexMeasure.re_apply"],
 ["simpNF", "MeasureTheory.FiniteMeasure.coeFn_add"],
 ["simpNF", "MeasureTheory.FiniteMeasure.coeFn_smul"],
 ["simpNF", "MeasureTheory.FiniteMeasure.coeFn_zero"],
 ["simpNF", "MeasureTheory.FiniteMeasure.coe_toWeakDualBCNN"],
 ["simpNF", "MeasureTheory.FiniteMeasure.testAgainstNN_coe_eq"],
 ["simpNF", "MeasureTheory.FiniteMeasure.toMeasureAddMonoidHom_apply"],
 ["simpNF", "MeasureTheory.FiniteMeasure.toWeakDualBCNN_apply"],
 ["simpNF", "MeasureTheory.Integrable.edist_toL1_toL1"],
 ["simpNF", "MeasureTheory.Integrable.edist_toL1_zero"],
 ["simpNF", "MeasureTheory.IsStoppingTime.measurableSpace_const"],
 ["simpNF", "MeasureTheory.L1.setToL1_zero_left"],
 ["simpNF", "MeasureTheory.Lp.compMeasurePreserving_val"],
 ["simpNF", "MeasureTheory.Lp.compMeasurePreservingₗ_apply"],
 ["simpNF", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_apply_coe"],
 ["simpNF", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_toFun_coe"],
 ["simpNF", "MeasureTheory.Lp.constL_apply"],
 ["simpNF", "MeasureTheory.Lp.const_val"],
 ["simpNF", "MeasureTheory.Lp.constₗ_apply"],
 ["simpNF", "MeasureTheory.Lp.edist_toLp_toLp"],
 ["simpNF", "MeasureTheory.Lp.norm_compMeasurePreserving"],
 ["simpNF", "MeasureTheory.Measure.addHaar_image_continuousLinearEquiv"],
 ["simpNF", "MeasureTheory.Measure.addHaar_image_continuousLinearMap"],
 ["simpNF", "MeasureTheory.Measure.addHaar_image_homothety"],
 ["simpNF", "MeasureTheory.Measure.addHaar_image_linearMap"],
 ["simpNF", "MeasureTheory.Measure.addHaar_preimage_continuousLinearEquiv"],
 ["simpNF", "MeasureTheory.Measure.addHaar_preimage_continuousLinearMap"],
 ["simpNF", "MeasureTheory.Measure.addHaar_preimage_linearEquiv"],
 ["simpNF", "MeasureTheory.Measure.addHaar_preimage_linearMap"],
 ["simpNF", "MeasureTheory.Measure.ae_sum_eq"],
 ["simpNF", "MeasureTheory.Measure.bind_apply"],
 ["simpNF", "MeasureTheory.Measure.bind_zero_right'"],
 ["simpNF", "MeasureTheory.Measure.coe_add"],
 ["simpNF", "MeasureTheory.Measure.coe_finset_sum"],
 ["simpNF", "MeasureTheory.Measure.coe_smul"],
 ["simpNF", "MeasureTheory.Measure.join_apply"],
 ["simpNF", "MeasureTheory.Measure.liftLinear_apply"],
 ["simpNF", "MeasureTheory.Measure.map_add"],
 ["simpNF", "MeasureTheory.Measure.map_id'"],
 ["simpNF", "MeasureTheory.Measure.mapₗ_eq_zero_iff"],
 ["simpNF", "MeasureTheory.Measure.mkMetric_top"],
 ["simpNF", "MeasureTheory.Measure.pi_pi"],
 ["simpNF", "MeasureTheory.Measure.restrict_sum"],
 ["simpNF", "MeasureTheory.Measure.restrict_sum_of_countable"],
 ["simpNF", "MeasureTheory.Measure.restrictₗ_apply"],
 ["simpNF", "MeasureTheory.Measure.smul_apply"],
 ["simpNF", "MeasureTheory.Measure.sum_apply"],
 ["simpNF", "MeasureTheory.Measure.sum_apply_eq_zero"],
 ["simpNF", "MeasureTheory.Measure.sum_comp_equiv"],
 ["simpNF", "MeasureTheory.Measure.sum_smul_dirac"],
 ["simpNF", "MeasureTheory.Measure.toBoxAdditive_apply"],
 ["simpNF", "MeasureTheory.Memℒp.toLp_const"],
 ["simpNF", "MeasureTheory.NullMeasurableSet.disjointed"],
 ["simpNF", "MeasureTheory.OuterMeasure.boundedBy_top"],
 ["simpNF", "MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.coe_add"],
 ["simpNF", "MeasureTheory.OuterMeasure.coe_smul"],
 ["simpNF", "MeasureTheory.OuterMeasure.comap_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.comap_iSup"],
 ["simpNF", "MeasureTheory.OuterMeasure.comap_top"],
 ["simpNF", "MeasureTheory.OuterMeasure.dirac_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.iUnion_null_iff"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_iSup"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_id"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_le_restrict_range"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_map"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_sup"],
 ["simpNF", "MeasureTheory.OuterMeasure.map_top_of_surjective"],
 ["simpNF", "MeasureTheory.OuterMeasure.mkMetric_top"],
 ["simpNF", "MeasureTheory.OuterMeasure.restrict_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.restrict_empty"],
 ["simpNF", "MeasureTheory.OuterMeasure.restrict_iSup"],
 ["simpNF", "MeasureTheory.OuterMeasure.restrict_univ"],
 ["simpNF", "MeasureTheory.OuterMeasure.sSup_apply"],
 ["simpNF", "MeasureTheory.OuterMeasure.sum_apply"],
 ["simpNF",
  "MeasureTheory.ProbabilityMeasure.coeFn_comp_toFiniteMeasure_eq_coeFn"],
 ["simpNF", "MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN"],
 ["simpNF", "MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply"],
 ["simpNF", "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_apply"],
 ["simpNF",
  "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_symm_apply"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_add"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_div"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_inf"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_inv"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_le"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_mul"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_neg"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_piecewise"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_pow"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_smul"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_sub"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_sup"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_vadd"],
 ["simpNF", "MeasureTheory.SimpleFunc.coe_zpow"],
 ["simpNF", "MeasureTheory.SimpleFunc.extend_apply'"],
 ["simpNF", "MeasureTheory.SimpleFunc.mem_range"],
 ["simpNF", "MeasureTheory.VectorMeasure.coeFnAddMonoidHom_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.coe_add"],
 ["simpNF", "MeasureTheory.VectorMeasure.coe_neg"],
 ["simpNF", "MeasureTheory.VectorMeasure.coe_smul"],
 ["simpNF", "MeasureTheory.VectorMeasure.coe_sub"],
 ["simpNF", "MeasureTheory.VectorMeasure.equivMeasure_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.equivMeasure_symm_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.mapGm_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.mapRange_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.mapₗ_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.restrictGm_apply"],
 ["simpNF", "MeasureTheory.VectorMeasure.restrictₗ_apply"],
 ["simpNF", "Module.DirectLimit.map_id"],
 ["simpNF", "Module.End.mem_maximalGeneralizedEigenspace"],
 ["simpNF", "ModuleCat.HasColimit.coconePointSMul_apply"],
 ["simpNF", "ModuleCat.HasLimit.productLimitCone_cone_pt"],
 ["simpNF", "ModuleCat.HasLimit.productLimitCone_cone_π"],
 ["simpNF", "Monoid.PushoutI.homEquiv_apply_coe"],
 ["simpNF", "Multiset.Nat.antidiagonal_succ"],
 ["simpNF", "Nat.ArithmeticFunction.log_apply"],
 ["simpNF", "Nat.ArithmeticFunction.moebius_apply_of_squarefree"],
 ["simpNF", "Nat.ArithmeticFunction.mul_apply"],
 ["simpNF", "Nat.ArithmeticFunction.smul_apply"],
 ["simpNF", "Nat.ArithmeticFunction.vonMangoldt_apply_one"],
 ["simpNF", "Nat.ArithmeticFunction.vonMangoldt_nonneg"],
 ["simpNF", "Nat.Partition.ofMultiset_parts"],
 ["simpNF", "Nat.Partition.ofSums_parts"],
 ["simpNF", "NormedAddGroupHom.Equalizer.liftEquiv_apply"],
 ["simpNF", "NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe"],
 ["simpNF", "NormedAddGroupHom.Equalizer.lift_apply_coe"],
 ["simpNF", "NormedAddGroupHom.ker.lift_apply_coe"],
 ["simpNF", "NormedSpace.Dual.coe_toWeakDual"],
 ["simpNF", "NormedSpace.Dual.toWeakDual_eq_iff"],
 ["simpNF", "NumberField.ComplexEmbedding.conjugate_coe_eq"],
 ["simpNF", "NumberField.InfinitePlace.apply"],
 ["simpNF", "NumberField.InfinitePlace.embedding_of_isReal_apply"],
 ["simpNF",
  "NumberField.InfinitePlace.instMulActionAlgEquivToCommSemiringToSemifieldToSemiringToDivisionSemiringToSemifieldInfinitePlaceToMonoidToDivInvMonoidAut_smul_coe_apply"],
 ["simpNF", "NumberField.InfinitePlace.mkReal_coe"],
 ["simpNF", "NumberField.InfinitePlace.smul_apply"],
 ["simpNF", "NumberField.canonicalEmbedding.apply_at"],
 ["simpNF", "NumberField.canonicalEmbedding.latticeBasis_apply"],
 ["simpNF", "NumberField.mixedEmbedding.commMap_canonical_eq_mixed"],
 ["simpNF", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst"],
 ["simpNF", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd"],
 ["simpNF", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal"],
 ["simpNF", "NumberField.mixedEmbedding.latticeBasis_apply"],
 ["simpNF", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst"],
 ["simpNF", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd"],
 ["simpNF", "NumberField.mixedEmbedding.stdBasis_apply_ofIsReal"],
 ["simpNF", "OmegaCompletePartialOrder.Chain.mem_map_iff"],
 ["simpNF", "OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge"],
 ["simpNF", "OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'"],
 ["simpNF", "OmegaCompletePartialOrder.ContinuousHom.seq_apply"],
 ["simpNF", "Order.Ideal.coe_sInf"],
 ["simpNF", "Order.Ideal.coe_sup"],
 ["simpNF", "Order.Ideal.mem_sInf"],
 ["simpNF", "Order.Ideal.mem_sup"],
 ["simpNF", "PLift.rec.constant"],
 ["simpNF", "Padic.addValuation.apply"],
 ["simpNF", "Path.Homotopic.pi_proj"],
 ["simpNF", "Path.Homotopy.cast_apply"],
 ["simpNF", "Path.Homotopy.cast_toFun"],
 ["simpNF", "Path.Homotopy.map_apply"],
 ["simpNF", "Path.Homotopy.map_toFun"],
 ["simpNF", "Path.Homotopy.refl_apply"],
 ["simpNF", "Path.Homotopy.refl_toFun"],
 ["simpNF", "Path.Homotopy.source"],
 ["simpNF", "Path.Homotopy.symm_apply"],
 ["simpNF", "Path.Homotopy.symm_toFun"],
 ["simpNF", "Path.Homotopy.symm₂_apply"],
 ["simpNF", "Path.Homotopy.symm₂_toFun"],
 ["simpNF", "Path.Homotopy.target"],
 ["simpNF", "Path.mk.sizeOf_spec"],
 ["simpNF", "Pell.Solution₁.x_neg"],
 ["simpNF", "Pell.Solution₁.y_inv"],
 ["simpNF", "Pell.Solution₁.y_neg"],
 ["simpNF", "PicardLindelof.mk.sizeOf_spec"],
 ["simpNF", "Polynomial.Chebyshev.aeval_T"],
 ["simpNF", "Polynomial.Chebyshev.aeval_U"],
 ["simpNF", "Polynomial.Chebyshev.algebraMap_eval_T"],
 ["simpNF", "Polynomial.Chebyshev.algebraMap_eval_U"],
 ["simpNF", "Polynomial.Gal.restrict_smul"],
 ["simpNF", "ProbabilityTheory.kernel.bind_add"],
 ["simpNF", "ProbabilityTheory.kernel.bind_smul"],
 ["simpNF", "ProbabilityTheory.kernel.coeFn_add"],
 ["simpNF", "ProbabilityTheory.kernel.coeFn_zero"],
 ["simpNF", "ProbabilityTheory.kernel.coe_finset_sum"],
 ["simpNF", "ProbabilityTheory.kernel.const_apply"],
 ["simpNF", "ProbabilityTheory.kernel.integral_const"],
 ["simpNF", "ProbabilityTheory.kernel.integral_deterministic"],
 ["simpNF", "ProbabilityTheory.kernel.lintegral_const"],
 ["simpNF", "ProbabilityTheory.kernel.lintegral_deterministic"],
 ["simpNF", "ProbabilityTheory.kernel.lintegral_restrict"],
 ["simpNF", "ProbabilityTheory.kernel.prodMkLeft_apply"],
 ["simpNF", "ProbabilityTheory.kernel.prodMkRight_apply"],
 ["simpNF", "ProbabilityTheory.kernel.set_integral_const"],
 ["simpNF", "ProbabilityTheory.kernel.set_integral_deterministic"],
 ["simpNF", "ProbabilityTheory.kernel.set_integral_restrict"],
 ["simpNF", "ProbabilityTheory.kernel.set_lintegral_const"],
 ["simpNF", "ProbabilityTheory.kernel.set_lintegral_deterministic"],
 ["simpNF", "ProbabilityTheory.kernel.set_lintegral_restrict"],
 ["simpNF", "ProbabilityTheory.kernel.sum_zero"],
 ["simpNF", "ProbabilityTheory.kernel.swapLeft_apply"],
 ["simpNF", "ProbabilityTheory.kernel.zero_apply"],
 ["simpNF", "Profinite.NobelingProof.continuous_proj"],
 ["simpNF", "Profinite.NobelingProof.continuous_projRestrict"],
 ["simpNF", "Profinite.NobelingProof.continuous_projRestricts"],
 ["simpNF", "Profinite.NobelingProof.πs'_apply"],
 ["simpNF", "Profinite.NobelingProof.πs_apply"],
 ["simpNF", "Profinite.finiteCoproduct.cocone_ι"],
 ["simpNF", "Profinite.finiteCoproduct.isColimit_desc"],
 ["simpNF", "ProperCone.mk.sizeOf_spec"],
 ["simpNF", "QuadraticForm.IsometryEquiv.pi_toLinearEquiv"],
 ["simpNF", "QuadraticForm.Ring.associated_pi"],
 ["simpNF", "QuadraticForm.Ring.polarBilin_pi"],
 ["simpNF", "QuadraticForm.Ring.polar_pi"],
 ["simpNF", "Real.Angle.coe_coeHom"],
 ["simpNF", "Real.Angle.expMapCircle_coe"],
 ["simpNF", "Real.Angle.sign_toReal"],
 ["simpNF", "Ring.DirectLimit.map_id"],
 ["simpNF", "Set.Finite.toFinset_setOf"],
 ["simpNF", "Set.Nonempty.image_const"],
 ["simpNF", "SetTheory.PGame.mk_le_mk"],
 ["simpNF", "SetTheory.PGame.mk_lf_mk"],
 ["simpNF", "SetTheory.PGame.neg_def"],
 ["simpNF", "SimpleGraph.Subgraph.edgeSet_sInf"],
 ["simpNF", "SimpleGraph.Subgraph.edgeSet_sSup"],
 ["simpNF", "SimpleGraph.Subgraph.iInf_adj"],
 ["simpNF", "SimpleGraph.Subgraph.neighborSet_sInf"],
 ["simpNF", "SimpleGraph.Subgraph.neighborSet_sSup"],
 ["simpNF", "SimpleGraph.Subgraph.sInf_adj"],
 ["simpNF", "SimpleGraph.Subgraph.sSup_adj"],
 ["simpNF", "SimpleGraph.Subgraph.verts_sInf"],
 ["simpNF", "SimpleGraph.Subgraph.verts_sSup"],
 ["simpNF", "SimpleGraph.Walk.cons_isPath_iff"],
 ["simpNF", "SimpleGraph.Walk.cons_isTrail_iff"],
 ["simpNF", "SimpleGraph.Walk.edgeSet_toSubgraph"],
 ["simpNF", "SimpleGraph.Walk.end_mem_support"],
 ["simpNF", "SimpleGraph.Walk.end_mem_tail_support_of_ne"],
 ["simpNF", "SimpleGraph.Walk.exists_length_eq_zero_iff"],
 ["simpNF", "SimpleGraph.Walk.mem_support_append_iff"],
 ["simpNF", "SimpleGraph.Walk.mem_tail_support_append_iff"],
 ["simpNF", "SimpleGraph.Walk.start_mem_support"],
 ["simpNF", "SimpleGraph.Walk.support_nonempty"],
 ["simpNF", "SimpleGraph.Walk.verts_toSubgraph"],
 ["simpNF", "SlashInvariantForm.SlashInvariantFormClass.coe_coe"],
 ["simpNF", "Stonean.finiteCoproduct.cocone_ι"],
 ["simpNF", "Stonean.finiteCoproduct.explicitCocone_ι"],
 ["simpNF", "Stonean.finiteCoproduct.isColimit'_desc"],
 ["simpNF", "Stonean.finiteCoproduct.isColimit_desc"],
 ["simpNF", "Stream'.Seq.corec_eq"],
 ["simpNF", "Stream'.Seq1.bind_assoc"],
 ["simpNF", "Stream'.WSeq.bind_assoc"],
 ["simpNF", "Stream'.WSeq.destruct_ofSeq"],
 ["simpNF", "Stream'.WSeq.toList'_cons"],
 ["simpNF", "Stream'.WSeq.toList'_nil"],
 ["simpNF", "Stream'.WSeq.toList'_think"],
 ["simpNF", "Submodule.Quotient.equiv_trans"],
 ["simpNF", "TopCat.GlueData.ofOpenSubsets_toGlueData_t"],
 ["simpNF", "TopCat.Presheaf.submonoidPresheafOfStalk_obj"],
 ["simpNF", "TopologicalSpace.Closeds.coe_finset_inf"],
 ["simpNF", "TopologicalSpace.Closeds.coe_finset_sup"],
 ["simpNF", "TopologicalSpace.Closeds.coe_sInf"],
 ["simpNF", "TopologicalSpace.Closeds.mem_iInf"],
 ["simpNF", "TopologicalSpace.Closeds.mem_sInf"],
 ["simpNF", "TopologicalSpace.Compacts.coe_finset_sup"],
 ["simpNF", "TopologicalSpace.Opens.coe_finset_inf"],
 ["simpNF", "TopologicalSpace.Opens.coe_finset_sup"],
 ["simpNF", "TopologicalSpace.Opens.coe_sSup"],
 ["simpNF", "TopologicalSpace.Opens.mapMapIso_counitIso"],
 ["simpNF", "TopologicalSpace.Opens.mapMapIso_unitIso"],
 ["simpNF", "TopologicalSpace.Opens.mem_sSup"],
 ["simpNF", "Turing.PartrecToTM2.codeSupp_cons"],
 ["simpNF", "Turing.PartrecToTM2.codeSupp_zero"],
 ["simpNF", "Turing.PartrecToTM2.contSupp_cons₁"],
 ["simpNF", "Turing.PartrecToTM2.tr_clear"],
 ["simpNF", "Turing.PartrecToTM2.tr_copy"],
 ["simpNF", "Turing.PartrecToTM2.tr_move"],
 ["simpNF", "Turing.PartrecToTM2.tr_pred"],
 ["simpNF", "Turing.PartrecToTM2.tr_push"],
 ["simpNF", "Turing.PartrecToTM2.tr_ret_comp"],
 ["simpNF", "Turing.PartrecToTM2.tr_ret_cons₁"],
 ["simpNF", "Turing.PartrecToTM2.tr_ret_cons₂"],
 ["simpNF", "Turing.PartrecToTM2.tr_ret_fix"],
 ["simpNF", "Turing.PartrecToTM2.tr_ret_halt"],
 ["simpNF", "Turing.PartrecToTM2.tr_succ"],
 ["simpNF", "ULift.rec.constant"],
 ["simpNF", "UniformSpace.Completion.coe_toComplL"],
 ["simpNF", "UniformSpace.Completion.coe_toComplₗᵢ"],
 ["simpNF", "WeakDual.CharacterSpace.compContinuousMap_apply"],
 ["simpNF", "WeakDual.CharacterSpace.continuousMapEval_apply_apply"],
 ["simpNF", "WeakDual.CharacterSpace.equivAlgHom_coe"],
 ["simpNF", "WeakDual.CharacterSpace.equivAlgHom_symm_coe"],
 ["simpNF",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_apply_toFun"],
 ["simpNF",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_symm_apply"],
 ["simpNF", "Zspan.quotientEquiv.symm_apply"],
 ["simpNF", "groupCohomology.resolution.d_of"],
 ["simpNF", "_private.Mathlib.Data.LazyList.Basic.0.LazyList.pmap._eq_2"],
 ["simpNF", "_private.Mathlib.Data.List.Basic.0.List.mapM'._eq_2"],
 ["simpNF", "_private.Mathlib.Data.List.Defs.0.List.map₂Left._eq_2"],
 ["simpNF", "_private.Mathlib.Data.List.Defs.0.List.map₂Left'._eq_2"],
 ["simpNF", "_private.Mathlib.Data.W.Constructions.0.WType.ofList._eq_2"],
 ["simpNF", "_private.Mathlib.Data.W.Constructions.0.WType.ofNat._eq_2"],
 ["simpNF",
  "_private.Mathlib.RingTheory.MvPolynomial.NewtonIdentities.0.MvPolynomial.NewtonIdentities.mem_pairs"],
 ["simpNF", "AlgebraicGeometry.Scheme.OpenCover.bind_J"],
 ["simpNF", "AlgebraicTopology.DoldKan.Γ₀.map_app"],
 ["simpNF", "AlgebraicTopology.DoldKan.Γ₂N₁.natTrans_app_f_app"],
 ["simpNF", "Basis.SmithNormalForm.mk.sizeOf_spec"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.mk.injEq"],
 ["simpNF", "BoxIntegral.TaggedPrepartition.mk.sizeOf_spec"],
 ["simpNF", "CategoryTheory.Arrow.hom.congr_right"],
 ["simpNF",
  "CategoryTheory.Cat.HasLimits.instCategoryLimitTypeTypesCompCatCategoryObjectsHasLimitUnivLE_of_maxSmall_self_comp"],
 ["simpNF",
  "CategoryTheory.Cat.HasLimits.instCategoryLimitTypeTypesCompCatCategoryObjectsHasLimitUnivLE_of_maxSmall_self_id"],
 ["simpNF", "CategoryTheory.Cat.HasLimits.limitConeLift_map"],
 ["simpNF", "CategoryTheory.CosimplicialObject.Augmented.toArrow_map_right"],
 ["simpNF", "CategoryTheory.CosimplicialObject.Augmented.whiskering_obj"],
 ["simpNF", "CategoryTheory.Functor.Final.coconesEquiv_counitIso"],
 ["simpNF", "CategoryTheory.Functor.Final.coconesEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Functor.Initial.conesEquiv_counitIso"],
 ["simpNF", "CategoryTheory.Functor.Initial.conesEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Idempotents.DoldKan.Γ_map_app"],
 ["simpNF", "CategoryTheory.Idempotents.Karoubi.sum_hom"],
 ["simpNF", "CategoryTheory.Limits.Cocones.functorialityEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cocones.functorialityEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Cocones.precomposeEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cocones.precomposeEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Cocones.whiskeringEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cocones.whiskeringEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Limits.CokernelCofork.π_mapOfIsColimit"],
 ["simpNF", "CategoryTheory.Limits.CokernelCofork.π_mapOfIsColimit_assoc"],
 ["simpNF", "CategoryTheory.Limits.Cones.equivalenceOfReindexing_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.equivalenceOfReindexing_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.functorialityEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.functorialityEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.postcomposeEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.postcomposeEquivalence_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.whiskeringEquivalence_counitIso"],
 ["simpNF", "CategoryTheory.Limits.Cones.whiskeringEquivalence_unitIso"],
 ["simpNF",
  "CategoryTheory.Limits.CoproductsFromFiniteFiltered.liftToFinset_map"],
 ["simpNF",
  "CategoryTheory.Limits.CoproductsFromFiniteFiltered.liftToFinset_obj"],
 ["simpNF", "CategoryTheory.Limits.ImageMap.map_ι"],
 ["simpNF", "CategoryTheory.Limits.ImageMap.map_ι_assoc"],
 ["simpNF", "CategoryTheory.Limits.MonoFactorisation.ofArrowIso_m"],
 ["simpNF", "CategoryTheory.Limits.Multicofork.ofπ_ι_app"],
 ["simpNF",
  "CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_counitIso"],
 ["simpNF",
  "CategoryTheory.Limits.MulticospanIndex.multiforkEquivPiFork_unitIso"],
 ["simpNF", "CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_map"],
 ["simpNF", "CategoryTheory.Limits.MulticospanIndex.parallelPairDiagram_obj"],
 ["simpNF", "CategoryTheory.Limits.Multifork.ofι_π_app"],
 ["simpNF",
  "CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_counitIso"],
 ["simpNF",
  "CategoryTheory.Limits.MultispanIndex.multicoforkEquivSigmaCofork_unitIso"],
 ["simpNF", "CategoryTheory.Limits.Pi.map_id"],
 ["simpNF", "CategoryTheory.Limits.Pi.whiskerEquiv_hom"],
 ["simpNF", "CategoryTheory.Limits.Pi.whiskerEquiv_inv"],
 ["simpNF", "CategoryTheory.Limits.Sigma.map_id"],
 ["simpNF", "CategoryTheory.Limits.Sigma.whiskerEquiv_hom"],
 ["simpNF", "CategoryTheory.Limits.Sigma.whiskerEquiv_inv"],
 ["simpNF", "CategoryTheory.Limits.Types.productIso_hom_comp_eval"],
 ["simpNF", "CategoryTheory.Limits.Types.productIso_inv_comp_π"],
 ["simpNF", "CategoryTheory.Limits.Types.pullbackIsoPullback_inv_fst"],
 ["simpNF", "CategoryTheory.Limits.Types.pullbackIsoPullback_inv_snd"],
 ["simpNF", "CategoryTheory.Limits.Types.pullbackLimitCone_isLimit"],
 ["simpNF", "CategoryTheory.Limits.WidePullbackShape.mkCone_π_app"],
 ["simpNF", "CategoryTheory.Limits.WidePullbackShape.wideCospan_map"],
 ["simpNF", "CategoryTheory.Limits.WidePushoutShape.mkCocone_ι_app"],
 ["simpNF", "CategoryTheory.Limits.WidePushoutShape.wideSpan_map"],
 ["simpNF", "CategoryTheory.Limits.biproduct.lift_map"],
 ["simpNF", "CategoryTheory.Limits.biproduct.lift_map_assoc"],
 ["simpNF", "CategoryTheory.Limits.biproduct.mapIso_hom"],
 ["simpNF", "CategoryTheory.Limits.biproduct.mapIso_inv"],
 ["simpNF", "CategoryTheory.Limits.biproduct.map_desc"],
 ["simpNF", "CategoryTheory.Limits.biproduct.map_desc_assoc"],
 ["simpNF", "CategoryTheory.Limits.biproduct.matrix_π"],
 ["simpNF", "CategoryTheory.Limits.biproduct.matrix_π_assoc"],
 ["simpNF", "CategoryTheory.Limits.biproduct.reindex_hom"],
 ["simpNF", "CategoryTheory.Limits.biproduct.reindex_inv"],
 ["simpNF", "CategoryTheory.Limits.biproduct.toSubtype_fromSubtype"],
 ["simpNF", "CategoryTheory.Limits.biproduct.toSubtype_fromSubtype_assoc"],
 ["simpNF", "CategoryTheory.Limits.biproduct.total"],
 ["simpNF", "CategoryTheory.Limits.biproduct.whiskerEquiv_hom"],
 ["simpNF", "CategoryTheory.Limits.biproduct.whiskerEquiv_inv"],
 ["simpNF", "CategoryTheory.Localization.Construction.lift_map"],
 ["simpNF",
  "CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit"],
 ["simpNF", "CategoryTheory.Over.ConstructProducts.conesEquivInverseObj_π_app"],
 ["simpNF", "CategoryTheory.Over.ConstructProducts.conesEquiv_counitIso"],
 ["simpNF", "CategoryTheory.Over.ConstructProducts.conesEquiv_unitIso"],
 ["simpNF", "CategoryTheory.Pretriangulated.Triangle.invRotate_obj₁"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle.lift_hom₁"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle.lift_hom₂"],
 ["simpNF", "CategoryTheory.Pretriangulated.productTriangle.lift_hom₃"],
 ["simpNF", "CategoryTheory.SimplicialObject.Augmented.toArrow_map_right"],
 ["simpNF", "CategoryTheory.SimplicialObject.Augmented.whiskering_obj"],
 ["simpNF", "CochainComplex.HomComplex.Cochain.ofHoms_comp"],
 ["simpNF", "CochainComplex.HomComplex.Cochain.ofHoms_zero"],
 ["simpNF", "ContinuousMap.Homotopy.mk.sizeOf_spec"],
 ["simpNF", "Equiv.Perm.IsCycle.zpowersEquivSupport_apply"],
 ["simpNF", "Equiv.Perm.IsCycle.zpowersEquivSupport_symm_apply"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.encoding_decode"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.encoding_Γ"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.listDecode_encode_list"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.mapTermRelEquiv_apply"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.mapTermRelEquiv_symm_apply"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.mapTermRel_id_id_id"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.mapTermRel_mapTermRel"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_all"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_alls"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_ex"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_foldr_inf"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_foldr_sup"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_iAlls"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_iExs"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_iInf"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_iSup"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_imp"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_rel"],
 ["simpNF", "FirstOrder.Language.BoundedFormula.realize_subst"],
 ["simpNF", "FirstOrder.Language.DirectLimit.funMap_quotient_mk'_sigma_mk'"],
 ["simpNF", "FirstOrder.Language.DirectLimit.relMap_quotient_mk'_sigma_mk'"],
 ["simpNF", "FirstOrder.Language.DirectedSystem.coe_natLERec"],
 ["simpNF", "FirstOrder.Language.ElementarySubstructure.theory_model_iff"],
 ["simpNF", "FirstOrder.Language.Formula.realize_equivSentence"],
 ["simpNF", "FirstOrder.Language.Formula.realize_equivSentence_symm_con"],
 ["simpNF", "FirstOrder.Language.Formula.realize_iAlls"],
 ["simpNF", "FirstOrder.Language.Formula.realize_iExs"],
 ["simpNF", "FirstOrder.Language.Formula.realize_imp"],
 ["simpNF", "FirstOrder.Language.Formula.realize_rel"],
 ["simpNF", "FirstOrder.Language.Hom.mem_range"],
 ["simpNF", "FirstOrder.Language.LHom.mem_onTheory"],
 ["simpNF", "FirstOrder.Language.LHom.onTheory_model"],
 ["simpNF", "FirstOrder.Language.Relations.realize_antisymmetric"],
 ["simpNF", "FirstOrder.Language.Relations.realize_irreflexive"],
 ["simpNF", "FirstOrder.Language.Relations.realize_reflexive"],
 ["simpNF", "FirstOrder.Language.Relations.realize_symmetric"],
 ["simpNF", "FirstOrder.Language.Relations.realize_total"],
 ["simpNF", "FirstOrder.Language.Relations.realize_transitive"],
 ["simpNF", "FirstOrder.Language.Substructure.coe_sInf"],
 ["simpNF", "FirstOrder.Language.Substructure.mem_map"],
 ["simpNF", "FirstOrder.Language.Term.realize_constantsToVars"],
 ["simpNF", "FirstOrder.Language.Term.realize_func"],
 ["simpNF", "FirstOrder.Language.Term.realize_liftAt"],
 ["simpNF", "FirstOrder.Language.Term.realize_subst"],
 ["simpNF", "FirstOrder.Language.Term.realize_varsToConstants"],
 ["simpNF", "FirstOrder.Language.Theory.model_iff"],
 ["simpNF", "FirstOrder.Language.Theory.model_union_iff"],
 ["simpNF", "FirstOrder.Language.Theory.simpleGraph_model_iff"],
 ["simpNF", "HomogeneousLocalization.NumDenSameDeg.mk.sizeOf_spec"],
 ["simpNF", "IntermediateField.Lifts.mk.sizeOf_spec"],
 ["simpNF", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_zero_left"],
 ["simpNF", "MeasureTheory.Measure.MutuallySingular.sum_left"],
 ["simpNF", "MeasureTheory.Measure.MutuallySingular.sum_right"],
 ["simpNF", "MeasureTheory.Measure.haar.mem_addPrehaar_empty"],
 ["simpNF", "MeasureTheory.Measure.haar.mem_prehaar_empty"],
 ["simpNF",
  "ModuleCat.ExtendRestrictScalarsAdj.HomEquiv.fromExtendScalars_apply"],
 ["simpNF", "NumberField.ComplexEmbedding.IsReal.coe_embedding_apply"],
 ["simpNF", "NumberField.Units.dirichletUnitTheorem.logEmbedding_component"],
 ["simpNF", "SetTheory.PGame.Domineering.shiftRight_symm_apply"],
 ["simpNF", "SetTheory.PGame.Domineering.shiftUp_symm_apply"],
 ["simpNF", "SlimCheck.InjectiveFunction.mapToSelf.sizeOf_spec"],
 ["simpNF", "SlimCheck.TotalFunction.withDefault.sizeOf_spec"],
 ["simpNF", "TopCat.Presheaf.SheafCondition.pairwiseToOpensLeCover_obj"],
 ["simpNF",
  "TopCat.Presheaf.SheafConditionPairwiseIntersections.coneEquivFunctorObj_π_app"],
 ["simpNF",
  "TopCat.Presheaf.SheafConditionPairwiseIntersections.coneEquivFunctor_obj_π_app"],
 ["simpNF",
  "TopCat.Presheaf.SheafConditionPairwiseIntersections.coneEquivInverseObj_π_app"],
 ["simpNF",
  "TopCat.Presheaf.SheafConditionPairwiseIntersections.coneEquivInverse_obj_π_app"],
 ["simpNF", "Turing.ToPartrec.Code.case_eval"],
 ["simpNF", "Turing.ToPartrec.Code.comp_eval"],
 ["simpNF", "Turing.ToPartrec.Code.cons_eval"],
 ["simpNF", "Turing.ToPartrec.Code.fix_eval"],
 ["simpNF", "Turing.ToPartrec.Code.succ_eval"],
 ["simpNF", "Turing.ToPartrec.Code.tail_eval"],
 ["simpNF", "Turing.ToPartrec.Code.zero'_eval"],
 ["simpNF", "WeierstrassCurve.Affine.Point.toClass_apply"],
 ["simpNF",
  "_private.Mathlib.Computability.TMToPartrec.0.Turing.PartrecToTM2.trNormal._eq_1"],
 ["simpNF",
  "_private.Mathlib.Computability.TMToPartrec.0.Turing.PartrecToTM2.trNormal._eq_4"],
 ["simpNF", "_private.Mathlib.Data.List.Func.0.List.Func.pointwise._eq_3"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_2"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_3"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_4"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_5"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_6"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_7"],
 ["simpNF",
  "_private.Mathlib.CategoryTheory.Monoidal.Free.Coherence.0.CategoryTheory.FreeMonoidalCategory.normalizeMapAux._eq_9"],
 ["simpNF", "CategoryTheory.Functor.IsCoverDense.Types.pushforwardFamily_def"],
 ["simpNF", "CategoryTheory.Idempotents.Karoubi.Biproducts.bicone_pt_X"],
 ["simpNF", "CategoryTheory.Idempotents.Karoubi.Biproducts.bicone_pt_p"],
 ["simpNF", "CategoryTheory.Idempotents.Karoubi.Biproducts.bicone_ι_f"],
 ["simpNF", "CategoryTheory.Idempotents.Karoubi.Biproducts.bicone_π_f"],
 ["simpNF", "CategoryTheory.Limits.ImageMap.mk.injEq'"],
 ["simpNF", "CategoryTheory.Limits.Types.Small.limitConeIsLimit_lift"],
 ["simpNF", "CategoryTheory.Limits.Types.Small.productIso_hom_comp_eval"],
 ["simpNF", "CategoryTheory.Limits.Types.Small.productIso_inv_comp_π"],
 ["simpNF",
  "CategoryTheory.Localization.Construction.WhiskeringLeftEquivalence.inverse_obj_map"],
 ["simpNF", "GroupCat.SurjectiveOfEpiAuxs.XWithInfinity.fromCoset.sizeOf_spec"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Encoding.0.FirstOrder.Language.BoundedFormula.listDecode._eq_1"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Encoding.0.FirstOrder.Language.BoundedFormula.listDecode._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Encoding.0.FirstOrder.Language.BoundedFormula.listDecode._eq_3"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Encoding.0.FirstOrder.Language.BoundedFormula.listDecode._eq_4"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Encoding.0.FirstOrder.Language.BoundedFormula.listDecode._eq_5"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.BoundedFormula.freeVarFinset._eq_3"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.LHom.onTerm._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.constantsToVars._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.constantsToVars._eq_3"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.relabel._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.subst._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.varFinset._eq_2"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.varFinsetLeft._eq_3"],
 ["simpNF",
  "_private.Mathlib.ModelTheory.Syntax.0.FirstOrder.Language.Term.varsToConstants._eq_3"],
 ["simpNF", "_private.Mathlib.Data.Seq.WSeq.0.Stream'.WSeq.drop.aux._eq_2"],
 ["simpVarHead", "L_apply"],
 ["simpVarHead", "R_apply"],
 ["simpVarHead", "abs_circleMap_zero"],
 ["simpVarHead", "abs_coe_circle"],
 ["simpVarHead", "addRothNumber_empty"],
 ["simpVarHead", "addRothNumber_map_add_left"],
 ["simpVarHead", "addRothNumber_map_add_right"],
 ["simpVarHead", "addRothNumber_singleton"],
 ["simpVarHead", "apply_fdifferential"],
 ["simpVarHead", "apply_hfdifferential"],
 ["simpVarHead", "bernstein_apply"],
 ["simpVarHead", "coe_basisOfOrthonormalOfCardEqFinrank"],
 ["simpVarHead", "coe_normAddGroupSeminorm"],
 ["simpVarHead", "coe_normGroupNorm"],
 ["simpVarHead", "coe_normGroupSeminorm"],
 ["simpVarHead", "coe_normSeminorm"],
 ["simpVarHead", "coe_starₗᵢ"],
 ["simpVarHead", "continuousMultilinearCurryFin0_apply"],
 ["simpVarHead", "continuousMultilinearCurryFin0_symm_apply"],
 ["simpVarHead", "continuousMultilinearCurryFin1_apply"],
 ["simpVarHead", "continuousMultilinearCurryFin1_symm_apply"],
 ["simpVarHead", "continuousMultilinearCurryLeftEquiv_apply"],
 ["simpVarHead", "continuousMultilinearCurryLeftEquiv_symm_apply"],
 ["simpVarHead", "continuousMultilinearCurryRightEquiv_apply"],
 ["simpVarHead", "continuousMultilinearCurryRightEquiv_apply'"],
 ["simpVarHead", "continuousMultilinearCurryRightEquiv_symm_apply"],
 ["simpVarHead", "continuousMultilinearCurryRightEquiv_symm_apply'"],
 ["simpVarHead", "det_rotation"],
 ["simpVarHead", "expMapCircleHom_apply"],
 ["simpVarHead", "expMapCircle_add"],
 ["simpVarHead", "expMapCircle_apply"],
 ["simpVarHead", "expMapCircle_arg"],
 ["simpVarHead", "expMapCircle_neg"],
 ["simpVarHead", "expMapCircle_sub"],
 ["simpVarHead", "expMapCircle_two_pi"],
 ["simpVarHead", "expMapCircle_zero"],
 ["simpVarHead", "fderivInnerClm_apply"],
 ["simpVarHead", "fourier_apply"],
 ["simpVarHead", "gaugeSeminorm_toFun"],
 ["simpVarHead", "gelfandStarTransform_apply_apply"],
 ["simpVarHead", "gelfandStarTransform_symm_apply"],
 ["simpVarHead", "homeomorphUnitSphereProd_apply_fst_coe"],
 ["simpVarHead", "homeomorphUnitSphereProd_apply_snd_coe"],
 ["simpVarHead", "homeomorphUnitSphereProd_symm_apply_coe"],
 ["simpVarHead", "iccHomeoI_apply_coe"],
 ["simpVarHead", "iccHomeoI_symm_apply_coe"],
 ["simpVarHead", "imaginaryPart_I_smul"],
 ["simpVarHead", "imaginaryPart_imaginaryPart"],
 ["simpVarHead", "imaginaryPart_ofReal"],
 ["simpVarHead", "imaginaryPart_realPart"],
 ["simpVarHead", "innerSLFlip_apply"],
 ["simpVarHead", "innerSL_apply"],
 ["simpVarHead", "innerSL_apply_coe"],
 ["simpVarHead", "inner_conj_symm"],
 ["simpVarHead", "inner_self_im"],
 ["simpVarHead", "innerₛₗ_apply"],
 ["simpVarHead", "innerₛₗ_apply_coe"],
 ["simpVarHead", "iteratedFDerivWithin_one_apply"],
 ["simpVarHead", "iteratedFDerivWithin_zero_apply"],
 ["simpVarHead", "iteratedFDeriv_one_apply"],
 ["simpVarHead", "iteratedFDeriv_zero_apply"],
 ["simpVarHead", "linearEquiv_det_rotation"],
 ["simpVarHead", "mulRothNumber_empty"],
 ["simpVarHead", "mulRothNumber_map_mul_left"],
 ["simpVarHead", "mulRothNumber_map_mul_right"],
 ["simpVarHead", "mulRothNumber_singleton"],
 ["simpVarHead", "nnnormHom_apply"],
 ["simpVarHead", "normHom_apply"],
 ["simpVarHead", "normSq_eq_of_mem_circle"],
 ["simpVarHead", "normedAddGroupHomCompletionHom_apply"],
 ["simpVarHead", "orthogonalProjection_mem_subspace_eq_self"],
 ["simpVarHead", "orthogonalProjection_orthogonal_val"],
 ["simpVarHead", "realPart_I_smul"],
 ["simpVarHead", "realPart_idem"],
 ["simpVarHead", "realPart_imaginaryPart"],
 ["simpVarHead", "realPart_ofReal"],
 ["simpVarHead", "reflection_reflection"],
 ["simpVarHead", "rotation_apply"],
 ["simpVarHead", "rothNumberNat_zero"],
 ["simpVarHead", "sesqFormOfInner_apply_apply"],
 ["simpVarHead", "tangentBundleModelSpaceHomeomorph_coe"],
 ["simpVarHead", "tangentBundleModelSpaceHomeomorph_coe_symm"],
 ["simpVarHead", "thickenedIndicator_apply"],
 ["simpVarHead", "thickenedIndicator_toFun"],
 ["simpVarHead", "unitSphereToUnits_apply_coe"],
 ["simpVarHead", "AddChar.map_add_mul"],
 ["simpVarHead", "AddChar.map_nsmul_pow"],
 ["simpVarHead", "AddChar.map_zero_one"],
 ["simpVarHead", "AddChar.map_zsmul_zpow"],
 ["simpVarHead", "AddChar.mulShift_apply"],
 ["simpVarHead", "AddChar.one_apply"],
 ["simpVarHead", "AddCircle.coe_equivIco_mk_apply"],
 ["simpVarHead", "AddCircle.equivAddCircle_apply_mk"],
 ["simpVarHead", "AddCircle.equivAddCircle_symm_apply_mk"],
 ["simpVarHead", "AddMonoidHom.coe_toRealLinearMap"],
 ["simpVarHead", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional"],
 ["simpVarHead", "AffineEquiv.coe_toHomeomorphOfFiniteDimensional_symm"],
 ["simpVarHead", "AffineIsometry.coe_comp"],
 ["simpVarHead", "AffineIsometry.coe_id"],
 ["simpVarHead", "AffineIsometry.coe_mul"],
 ["simpVarHead", "AffineIsometry.coe_one"],
 ["simpVarHead", "AffineIsometry.coe_toAffineIsometryEquiv"],
 ["simpVarHead", "AffineIsometry.coe_toAffineMap"],
 ["simpVarHead", "AffineIsometry.id_apply"],
 ["simpVarHead", "AffineIsometry.map_vadd"],
 ["simpVarHead", "AffineIsometry.map_vsub"],
 ["simpVarHead", "AffineIsometry.toAffineIsometryEquiv_apply"],
 ["simpVarHead", "AffineIsometryEquiv.apply_symm_apply"],
 ["simpVarHead", "AffineIsometryEquiv.coe_constVAdd"],
 ["simpVarHead", "AffineIsometryEquiv.coe_constVSub"],
 ["simpVarHead", "AffineIsometryEquiv.coe_inv"],
 ["simpVarHead", "AffineIsometryEquiv.coe_mk"],
 ["simpVarHead", "AffineIsometryEquiv.coe_mk'"],
 ["simpVarHead", "AffineIsometryEquiv.coe_mul"],
 ["simpVarHead", "AffineIsometryEquiv.coe_one"],
 ["simpVarHead", "AffineIsometryEquiv.coe_refl"],
 ["simpVarHead", "AffineIsometryEquiv.coe_symm_trans"],
 ["simpVarHead", "AffineIsometryEquiv.coe_toAffineEquiv"],
 ["simpVarHead", "AffineIsometryEquiv.coe_toAffineIsometry"],
 ["simpVarHead", "AffineIsometryEquiv.coe_toHomeomorph"],
 ["simpVarHead", "AffineIsometryEquiv.coe_toIsometryEquiv"],
 ["simpVarHead", "AffineIsometryEquiv.coe_trans"],
 ["simpVarHead", "AffineIsometryEquiv.coe_vaddConst"],
 ["simpVarHead", "AffineIsometryEquiv.coe_vaddConst'"],
 ["simpVarHead", "AffineIsometryEquiv.coe_vaddConst_symm"],
 ["simpVarHead", "AffineIsometryEquiv.map_vadd"],
 ["simpVarHead", "AffineIsometryEquiv.map_vsub"],
 ["simpVarHead", "AffineIsometryEquiv.pointReflection_midpoint_left"],
 ["simpVarHead", "AffineIsometryEquiv.pointReflection_midpoint_right"],
 ["simpVarHead", "AffineIsometryEquiv.pointReflection_self"],
 ["simpVarHead", "AffineIsometryEquiv.symm_apply_apply"],
 ["simpVarHead", "AffineSubspace.coe_subtypeₐᵢ"],
 ["simpVarHead", "AffineSubspace.equivMapOfInjective_apply"],
 ["simpVarHead", "AffineSubspace.equivMapOfInjective_symm_apply"],
 ["simpVarHead", "AffineSubspace.equivMapOfInjective_toFun"],
 ["simpVarHead", "AlgHom.coe_toContinuousLinearMap"],
 ["simpVarHead", "AlgHom.map_coe_real_complex"],
 ["simpVarHead", "Basis.coe_toOrthonormalBasis"],
 ["simpVarHead", "Basis.coe_toOrthonormalBasis_repr"],
 ["simpVarHead", "Basis.coe_toOrthonormalBasis_repr_symm"],
 ["simpVarHead", "Basis.constrL_apply"],
 ["simpVarHead", "Basis.constrL_basis"],
 ["simpVarHead", "Basis.equivFunL_apply"],
 ["simpVarHead", "Basis.equivFunL_symm_apply_repr"],
 ["simpVarHead", "Behrend.map_apply"],
 ["simpVarHead", "BoundedContinuousFunction.algebraMap_apply"],
 ["simpVarHead", "BoundedContinuousFunction.coeFnAddHom_apply"],
 ["simpVarHead", "BoundedContinuousFunction.coeFn_abs"],
 ["simpVarHead", "BoundedContinuousFunction.coeFn_sup"],
 ["simpVarHead", "BoundedContinuousFunction.coe_add"],
 ["simpVarHead", "BoundedContinuousFunction.coe_compContinuous"],
 ["simpVarHead", "BoundedContinuousFunction.coe_intCast"],
 ["simpVarHead", "BoundedContinuousFunction.coe_mul"],
 ["simpVarHead", "BoundedContinuousFunction.coe_natCast"],
 ["simpVarHead", "BoundedContinuousFunction.coe_neg"],
 ["simpVarHead", "BoundedContinuousFunction.coe_normComp"],
 ["simpVarHead", "BoundedContinuousFunction.coe_npowRec"],
 ["simpVarHead", "BoundedContinuousFunction.coe_nsmul"],
 ["simpVarHead", "BoundedContinuousFunction.coe_nsmulRec"],
 ["simpVarHead", "BoundedContinuousFunction.coe_ofNormedAddCommGroup"],
 ["simpVarHead", "BoundedContinuousFunction.coe_ofNormedAddCommGroupDiscrete"],
 ["simpVarHead", "BoundedContinuousFunction.coe_one"],
 ["simpVarHead", "BoundedContinuousFunction.coe_pow"],
 ["simpVarHead", "BoundedContinuousFunction.coe_restrict"],
 ["simpVarHead", "BoundedContinuousFunction.coe_smul"],
 ["simpVarHead", "BoundedContinuousFunction.coe_star"],
 ["simpVarHead", "BoundedContinuousFunction.coe_sub"],
 ["simpVarHead", "BoundedContinuousFunction.coe_sum"],
 ["simpVarHead", "BoundedContinuousFunction.coe_to_continuous_fun"],
 ["simpVarHead", "BoundedContinuousFunction.coe_zero"],
 ["simpVarHead", "BoundedContinuousFunction.coe_zsmul"],
 ["simpVarHead", "BoundedContinuousFunction.coe_zsmulRec"],
 ["simpVarHead", "BoundedContinuousFunction.compContinuous_apply"],
 ["simpVarHead", "BoundedContinuousFunction.const_apply"],
 ["simpVarHead", "BoundedContinuousFunction.const_toFun"],
 ["simpVarHead", "BoundedContinuousFunction.evalClm_apply"],
 ["simpVarHead", "BoundedContinuousFunction.extend_apply"],
 ["simpVarHead", "BoundedContinuousFunction.mkOfBound_coe"],
 ["simpVarHead", "BoundedContinuousFunction.mkOfCompact_apply"],
 ["simpVarHead", "BoundedContinuousFunction.mkOfDiscrete_apply"],
 ["simpVarHead", "BoundedContinuousFunction.mkOfDiscrete_toFun"],
 ["simpVarHead", "BoundedContinuousFunction.nnnorm_coeFn_eq"],
 ["simpVarHead", "BoundedContinuousFunction.nnrealPart_coeFn_eq"],
 ["simpVarHead", "BoundedContinuousFunction.nsmul_apply"],
 ["simpVarHead", "BoundedContinuousFunction.pow_apply"],
 ["simpVarHead", "BoundedContinuousFunction.restrict_apply"],
 ["simpVarHead", "BoundedContinuousFunction.star_apply"],
 ["simpVarHead", "BoundedContinuousFunction.toContinuousMapAddHom_apply"],
 ["simpVarHead", "BoundedContinuousFunction.toContinuousMapLinearMap_apply"],
 ["simpVarHead", "BoundedContinuousFunction.zsmul_apply"],
 ["simpVarHead", "BumpCovering.coe_single"],
 ["simpVarHead", "BumpCovering.coe_toSmoothPartitionOfUnity"],
 ["simpVarHead", "CircleDeg1Lift.coe_mk"],
 ["simpVarHead", "CircleDeg1Lift.coe_mul"],
 ["simpVarHead", "CircleDeg1Lift.coe_one"],
 ["simpVarHead", "CircleDeg1Lift.coe_toOrderHom"],
 ["simpVarHead", "CircleDeg1Lift.coe_toOrderIso"],
 ["simpVarHead", "CircleDeg1Lift.coe_toOrderIso_inv"],
 ["simpVarHead", "CircleDeg1Lift.coe_toOrderIso_symm"],
 ["simpVarHead", "CircleDeg1Lift.inf_apply"],
 ["simpVarHead", "CircleDeg1Lift.map_add_int"],
 ["simpVarHead", "CircleDeg1Lift.map_add_nat"],
 ["simpVarHead", "CircleDeg1Lift.map_add_one"],
 ["simpVarHead", "CircleDeg1Lift.map_int_add"],
 ["simpVarHead", "CircleDeg1Lift.map_nat_add"],
 ["simpVarHead", "CircleDeg1Lift.map_one_add"],
 ["simpVarHead", "CircleDeg1Lift.map_sub_int"],
 ["simpVarHead", "CircleDeg1Lift.map_sub_nat"],
 ["simpVarHead", "CircleDeg1Lift.sup_apply"],
 ["simpVarHead", "CircleDeg1Lift.translate_apply"],
 ["simpVarHead", "CircleDeg1Lift.translate_inv_apply"],
 ["simpVarHead", "CircleDeg1Lift.units_apply_inv_apply"],
 ["simpVarHead", "CircleDeg1Lift.units_inv_apply_apply"],
 ["simpVarHead", "CliffordAlgebra.equivBaseChange_apply"],
 ["simpVarHead", "CliffordAlgebra.equivBaseChange_symm_apply"],
 ["simpVarHead", "CliffordAlgebra.ofBaseChangeAux_ι"],
 ["simpVarHead", "CliffordAlgebra.ofBaseChange_tmul_one"],
 ["simpVarHead", "CliffordAlgebra.ofBaseChange_tmul_ι"],
 ["simpVarHead", "CliffordAlgebra.ofBaseChange_toBaseChange"],
 ["simpVarHead", "CliffordAlgebra.toBaseChange_ofBaseChange"],
 ["simpVarHead", "CliffordAlgebra.toBaseChange_ι"],
 ["simpVarHead", "CliffordAlgebraComplex.Q_apply"],
 ["simpVarHead", "CliffordAlgebraComplex.equiv_apply"],
 ["simpVarHead", "CliffordAlgebraComplex.equiv_symm_apply"],
 ["simpVarHead", "CliffordAlgebraComplex.ofComplex_I"],
 ["simpVarHead", "CliffordAlgebraComplex.ofComplex_conj"],
 ["simpVarHead", "CliffordAlgebraComplex.ofComplex_toComplex"],
 ["simpVarHead", "CliffordAlgebraComplex.toComplex_involute"],
 ["simpVarHead", "CliffordAlgebraComplex.toComplex_ofComplex"],
 ["simpVarHead", "CliffordAlgebraComplex.toComplex_ι"],
 ["simpVarHead", "CliffordAlgebraDualNumber.equiv_symm_eps"],
 ["simpVarHead", "CliffordAlgebraDualNumber.equiv_ι"],
 ["simpVarHead", "CliffordAlgebraQuaternion.Q_apply"],
 ["simpVarHead", "CliffordAlgebraQuaternion.equiv_apply"],
 ["simpVarHead", "CliffordAlgebraQuaternion.equiv_symm_apply"],
 ["simpVarHead", "CliffordAlgebraQuaternion.ofQuaternion_mk"],
 ["simpVarHead", "CliffordAlgebraQuaternion.ofQuaternion_star"],
 ["simpVarHead", "CliffordAlgebraQuaternion.ofQuaternion_toQuaternion"],
 ["simpVarHead", "CliffordAlgebraQuaternion.toQuaternion_ofQuaternion"],
 ["simpVarHead", "CliffordAlgebraQuaternion.toQuaternion_ι"],
 ["simpVarHead", "CompHaus.homeoOfIso_apply"],
 ["simpVarHead", "CompHaus.homeoOfIso_symm_apply"],
 ["simpVarHead", "CompHaus.isoEquivHomeo_apply"],
 ["simpVarHead", "CompHaus.isoEquivHomeo_symm_apply"],
 ["simpVarHead", "Complex.abs_I"],
 ["simpVarHead", "Complex.abs_conj"],
 ["simpVarHead", "Complex.abs_cos_add_sin_mul_I"],
 ["simpVarHead", "Complex.abs_cpow_inv_nat"],
 ["simpVarHead", "Complex.abs_cpow_real"],
 ["simpVarHead", "Complex.abs_exp_ofReal"],
 ["simpVarHead", "Complex.abs_exp_ofReal_mul_I"],
 ["simpVarHead", "Complex.abs_natCast"],
 ["simpVarHead", "Complex.abs_ofNat"],
 ["simpVarHead", "Complex.abs_ofReal"],
 ["simpVarHead", "Complex.areaForm"],
 ["simpVarHead", "Complex.coe_algebraMap"],
 ["simpVarHead", "Complex.coe_basisOneI"],
 ["simpVarHead", "Complex.coe_basisOneI_repr"],
 ["simpVarHead", "Complex.coe_orthonormalBasisOneI"],
 ["simpVarHead", "Complex.conjAe_coe"],
 ["simpVarHead", "Complex.conjCle_apply"],
 ["simpVarHead", "Complex.conjLie_apply"],
 ["simpVarHead", "Complex.det_conjAe"],
 ["simpVarHead", "Complex.det_conjLie"],
 ["simpVarHead", "Complex.equivRealProdAddHom_apply"],
 ["simpVarHead", "Complex.equivRealProdAddHom_symm_apply_im"],
 ["simpVarHead", "Complex.equivRealProdAddHom_symm_apply_re"],
 ["simpVarHead", "Complex.equivRealProdClm_apply"],
 ["simpVarHead", "Complex.equivRealProdClm_symm_apply_im"],
 ["simpVarHead", "Complex.equivRealProdClm_symm_apply_re"],
 ["simpVarHead", "Complex.equivRealProdLm_apply"],
 ["simpVarHead", "Complex.equivRealProdLm_symm_apply_im"],
 ["simpVarHead", "Complex.equivRealProdLm_symm_apply_re"],
 ["simpVarHead", "Complex.imClm_apply"],
 ["simpVarHead", "Complex.imLm_coe"],
 ["simpVarHead", "Complex.kahler"],
 ["simpVarHead", "Complex.liftAux_apply"],
 ["simpVarHead", "Complex.lift_apply"],
 ["simpVarHead", "Complex.lift_symm_apply_coe"],
 ["simpVarHead", "Complex.linearEquiv_det_conjAe"],
 ["simpVarHead", "Complex.linearEquiv_det_conjLie"],
 ["simpVarHead", "Complex.measurableEquivPi_apply"],
 ["simpVarHead", "Complex.measurableEquivPi_symm_apply"],
 ["simpVarHead", "Complex.measurableEquivRealProd_apply"],
 ["simpVarHead", "Complex.measurableEquivRealProd_symm_apply"],
 ["simpVarHead", "Complex.ofRealAm_coe"],
 ["simpVarHead", "Complex.ofRealClm_apply"],
 ["simpVarHead", "Complex.orthonormalBasisOneI_repr_apply"],
 ["simpVarHead", "Complex.orthonormalBasisOneI_repr_symm_apply"],
 ["simpVarHead", "Complex.reClm_apply"],
 ["simpVarHead", "Complex.reLm_coe"],
 ["simpVarHead", "Complex.rightAngleRotation"],
 ["simpVarHead", "Complex.rotation"],
 ["simpVarHead", "Complex.selfAdjointEquiv_apply"],
 ["simpVarHead", "Complex.selfAdjointEquiv_symm_apply"],
 ["simpVarHead", "Complex.toMatrix_conjAe"],
 ["simpVarHead", "ContMDiffMap.coeFn_mk"],
 ["simpVarHead", "ContMDiffMap.comp_apply"],
 ["simpVarHead", "ContMDiffSection.coeFn_mk"],
 ["simpVarHead", "ContMDiffSection.coe_add"],
 ["simpVarHead", "ContMDiffSection.coe_neg"],
 ["simpVarHead", "ContMDiffSection.coe_nsmul"],
 ["simpVarHead", "ContMDiffSection.coe_smul"],
 ["simpVarHead", "ContMDiffSection.coe_sub"],
 ["simpVarHead", "ContMDiffSection.coe_zero"],
 ["simpVarHead", "ContMDiffSection.coe_zsmul"],
 ["simpVarHead", "ContinuousAddMonoidHom.add_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.comp_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.coprod_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.diag_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.fst_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.id_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.inl_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.inr_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.neg_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.snd_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.sum_map_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.sum_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.swap_toFun"],
 ["simpVarHead", "ContinuousAddMonoidHom.zero_toFun"],
 ["simpVarHead", "ContinuousAffineMap.coe_contLinear"],
 ["simpVarHead", "ContinuousAffineMap.coe_mk_const_linear_eq_linear"],
 ["simpVarHead", "ContinuousAffineMap.contLinear_map_vsub"],
 ["simpVarHead", "ContinuousAffineMap.map_vadd"],
 ["simpVarHead", "ContinuousAffineMap.toConstProdContinuousLinearMap_fst"],
 ["simpVarHead", "ContinuousAffineMap.toConstProdContinuousLinearMap_snd"],
 ["simpVarHead", "ContinuousLinearEquiv.arrowCongrSL_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.arrowCongrSL_symm_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.arrowCongrSL_toLinearEquiv_symm_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.coeFn_ofBijective"],
 ["simpVarHead", "ContinuousLinearEquiv.coe_toDiffeomorph"],
 ["simpVarHead", "ContinuousLinearEquiv.coe_toDiffeomorph_symm"],
 ["simpVarHead", "ContinuousLinearEquiv.coe_toSpanNonzeroSingleton_symm"],
 ["simpVarHead", "ContinuousLinearEquiv.compContinuousMultilinearMapL_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.coord_self"],
 ["simpVarHead", "ContinuousLinearEquiv.coord_toSpanNonzeroSingleton"],
 ["simpVarHead", "ContinuousLinearEquiv.ofBijective_apply_symm_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.ofBijective_symm_apply_apply"],
 ["simpVarHead", "ContinuousLinearEquiv.toSpanNonzeroSingleton_coord"],
 ["simpVarHead", "ContinuousLinearMap.adjointAux_apply"],
 ["simpVarHead", "ContinuousLinearMap.adjoint_adjoint"],
 ["simpVarHead", "ContinuousLinearMap.adjoint_comp"],
 ["simpVarHead", "ContinuousLinearMap.adjoint_id"],
 ["simpVarHead", "ContinuousLinearMap.apply_apply"],
 ["simpVarHead", "ContinuousLinearMap.apply_apply'"],
 ["simpVarHead", "ContinuousLinearMap.bilinearComp_apply"],
 ["simpVarHead", "ContinuousLinearMap.coeFn_ofIsClosedGraph"],
 ["simpVarHead", "ContinuousLinearMap.coeFn_ofSeqClosedGraph"],
 ["simpVarHead", "ContinuousLinearMap.coe_deriv₂"],
 ["simpVarHead", "ContinuousLinearMap.coe_equivRange"],
 ["simpVarHead", "ContinuousLinearMap.coe_flipₗᵢ"],
 ["simpVarHead", "ContinuousLinearMap.coe_flipₗᵢ'"],
 ["simpVarHead", "ContinuousLinearMap.coe_mkOfIsCompactOperator"],
 ["simpVarHead", "ContinuousLinearMap.coe_mulₗᵢ"],
 ["simpVarHead", "ContinuousLinearMap.coe_restrictScalarsIsometry"],
 ["simpVarHead", "ContinuousLinearMap.coe_restrict_scalarsL'"],
 ["simpVarHead", "ContinuousLinearMap.compL_apply"],
 ["simpVarHead", "ContinuousLinearMap.compLeftContinuousBounded_apply"],
 ["simpVarHead", "ContinuousLinearMap.compLeftContinuousCompact_apply"],
 ["simpVarHead", "ContinuousLinearMap.compSL_apply"],
 ["simpVarHead", "ContinuousLinearMap.equivProdOfSurjectiveOfIsCompl_apply"],
 ["simpVarHead", "ContinuousLinearMap.extend_eq"],
 ["simpVarHead", "ContinuousLinearMap.flipMultilinear_apply_apply"],
 ["simpVarHead", "ContinuousLinearMap.flip_apply"],
 ["simpVarHead", "ContinuousLinearMap.lsmul_apply"],
 ["simpVarHead", "ContinuousLinearMap.mulLeftRight_apply"],
 ["simpVarHead", "ContinuousLinearMap.mul_apply'"],
 ["simpVarHead", "ContinuousLinearMap.ofMemClosureImageCoeBounded_apply"],
 ["simpVarHead", "ContinuousLinearMap.ofTendstoOfBoundedRange_apply"],
 ["simpVarHead", "ContinuousLinearMap.postcomp_apply"],
 ["simpVarHead", "ContinuousLinearMap.postcomp_toFun"],
 ["simpVarHead", "ContinuousLinearMap.precompR_apply"],
 ["simpVarHead", "ContinuousLinearMap.precomp_apply"],
 ["simpVarHead", "ContinuousLinearMap.precomp_toFun"],
 ["simpVarHead", "ContinuousLinearMap.prodMapL_apply"],
 ["simpVarHead",
  "ContinuousLinearMap.toContinuousLinearEquivOfDetNeZero_apply"],
 ["simpVarHead", "ContinuousLinearMap.toSesqForm_apply_coe"],
 ["simpVarHead", "ContinuousLinearMap.uncurryBilinear_apply"],
 ["simpVarHead", "ContinuousLinearMap.uncurryLeft_apply"],
 ["simpVarHead", "ContinuousMap.addEquivBoundedOfCompact_apply"],
 ["simpVarHead", "ContinuousMap.addEquivBoundedOfCompact_symm_apply"],
 ["simpVarHead", "ContinuousMap.addUnitsLift_apply_neg_apply"],
 ["simpVarHead", "ContinuousMap.attachBound_apply_coe"],
 ["simpVarHead", "ContinuousMap.coeNNRealReal_apply"],
 ["simpVarHead", "ContinuousMap.coe_toLp"],
 ["simpVarHead", "ContinuousMap.compRightContinuousMap_apply"],
 ["simpVarHead", "ContinuousMap.equivBoundedOfCompact_apply"],
 ["simpVarHead", "ContinuousMap.equivBoundedOfCompact_symm_apply"],
 ["simpVarHead", "ContinuousMap.isometryEquivBoundedOfCompact_apply"],
 ["simpVarHead", "ContinuousMap.isometryEquivBoundedOfCompact_symm_apply"],
 ["simpVarHead", "ContinuousMap.linearIsometryBoundedOfCompact_apply_apply"],
 ["simpVarHead", "ContinuousMap.linearIsometryBoundedOfCompact_symm_apply"],
 ["simpVarHead", "ContinuousMap.toLp_comp_toContinuousMap"],
 ["simpVarHead", "ContinuousMap.unitsLift_apply_inv_apply"],
 ["simpVarHead", "ContinuousMap.unitsOfForallIsUnit_apply"],
 ["simpVarHead", "ContinuousMap.val_addUnitsLift_apply_apply"],
 ["simpVarHead", "ContinuousMap.val_addUnitsLift_symm_apply_apply"],
 ["simpVarHead", "ContinuousMap.val_unitsLift_apply_apply"],
 ["simpVarHead", "ContinuousMap.val_unitsLift_symm_apply_apply"],
 ["simpVarHead", "ContinuousMonoidHom.comp_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.coprod_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.diag_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.fst_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.id_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.inl_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.inr_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.inv_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.mul_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.one_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.prod_map_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.prod_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.snd_toFun"],
 ["simpVarHead", "ContinuousMonoidHom.swap_toFun"],
 ["simpVarHead", "ContinuousMultilinearMap.compAlongComposition_apply"],
 ["simpVarHead",
  "ContinuousMultilinearMap.compContinuousLinearMapEquivL_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.compContinuousLinearMapL_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.curry0_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.curryFinFinset_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.curryFinFinset_symm_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.curryFinFinset_symm_apply_const"],
 ["simpVarHead", "ContinuousMultilinearMap.curryLeft_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.curryRight_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.currySum_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.mkPiField_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.ofSubsingletonₗᵢ_symm_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.uncurryRight_apply"],
 ["simpVarHead", "ContinuousMultilinearMap.uncurrySum_apply"],
 ["simpVarHead", "CuspForm.add_apply"],
 ["simpVarHead", "CuspForm.coeHom_apply"],
 ["simpVarHead", "CuspForm.coe_add"],
 ["simpVarHead", "CuspForm.coe_neg"],
 ["simpVarHead", "CuspForm.coe_smul"],
 ["simpVarHead", "CuspForm.coe_sub"],
 ["simpVarHead", "CuspForm.coe_zero"],
 ["simpVarHead", "CuspForm.neg_apply"],
 ["simpVarHead", "CuspForm.smul_apply"],
 ["simpVarHead", "CuspForm.sub_apply"],
 ["simpVarHead", "CuspForm.toSlashInvariantForm_coe"],
 ["simpVarHead", "CuspForm.zero_apply"],
 ["simpVarHead", "Diffeomorph.apply_symm_apply"],
 ["simpVarHead", "Diffeomorph.coe_coe"],
 ["simpVarHead", "Diffeomorph.coe_prodComm"],
 ["simpVarHead", "Diffeomorph.coe_prodCongr"],
 ["simpVarHead", "Diffeomorph.coe_refl"],
 ["simpVarHead", "Diffeomorph.coe_toEquiv"],
 ["simpVarHead", "Diffeomorph.coe_toHomeomorph"],
 ["simpVarHead", "Diffeomorph.coe_toHomeomorph_symm"],
 ["simpVarHead", "Diffeomorph.coe_trans"],
 ["simpVarHead", "Diffeomorph.symm_apply_apply"],
 ["simpVarHead", "Diffeomorph.toEquiv_coe_symm"],
 ["simpVarHead", "Dilation.coe_comp"],
 ["simpVarHead", "Dilation.coe_id"],
 ["simpVarHead", "Dilation.coe_mk"],
 ["simpVarHead", "Dilation.coe_mkOfDistEq"],
 ["simpVarHead", "Dilation.coe_mkOfNNDistEq"],
 ["simpVarHead", "Dilation.coe_mul"],
 ["simpVarHead", "Dilation.coe_one"],
 ["simpVarHead", "Dilation.copy_toFun"],
 ["simpVarHead", "Dilation.ratioHom_apply"],
 ["simpVarHead", "DilationEquiv.apply_symm_apply"],
 ["simpVarHead", "DilationEquiv.coe_mul"],
 ["simpVarHead", "DilationEquiv.coe_one"],
 ["simpVarHead", "DilationEquiv.coe_toEquiv"],
 ["simpVarHead", "DilationEquiv.mulLeft_apply"],
 ["simpVarHead", "DilationEquiv.mulLeft_symm_apply"],
 ["simpVarHead", "DilationEquiv.mulRight_apply"],
 ["simpVarHead", "DilationEquiv.mulRight_symm_apply"],
 ["simpVarHead", "DilationEquiv.refl_apply"],
 ["simpVarHead", "DilationEquiv.symm_apply_apply"],
 ["simpVarHead", "DilationEquiv.toPerm_apply"],
 ["simpVarHead", "DilationEquiv.trans_apply"],
 ["simpVarHead", "DoubleCentralizer.algebraMap_toProd"],
 ["simpVarHead", "DoubleCentralizer.coeHom_apply"],
 ["simpVarHead", "DoubleCentralizer.star_fst"],
 ["simpVarHead", "DoubleCentralizer.star_snd"],
 ["simpVarHead", "DoubleCentralizer.toProdHom_apply"],
 ["simpVarHead", "DoubleCentralizer.toProdMulOppositeHom_apply"],
 ["simpVarHead", "ENNReal.orderIsoRpow_apply"],
 ["simpVarHead", "EuclideanGeometry.orthogonalProjection_mem_subspace_eq_self"],
 ["simpVarHead", "EuclideanGeometry.reflection_reflection"],
 ["simpVarHead", "EuclideanSpace.basisFun_apply"],
 ["simpVarHead", "EuclideanSpace.basisFun_repr"],
 ["simpVarHead", "EuclideanSpace.proj_apply"],
 ["simpVarHead", "EuclideanSpace.projₗ_apply"],
 ["simpVarHead", "FintypeCat.toProfinite_map_apply"],
 ["simpVarHead", "FormalMultilinearSeries.apply_eq_pow_smul_coeff"],
 ["simpVarHead", "FormalMultilinearSeries.apply_eq_prod_smul_coeff"],
 ["simpVarHead", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_fst"],
 ["simpVarHead", "FormalMultilinearSeries.changeOriginIndexEquiv_apply_snd"],
 ["simpVarHead",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_fst"],
 ["simpVarHead",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_fst"],
 ["simpVarHead",
  "FormalMultilinearSeries.changeOriginIndexEquiv_symm_apply_snd_snd_coe"],
 ["simpVarHead", "FormalMultilinearSeries.compAlongComposition_apply"],
 ["simpVarHead", "FormalMultilinearSeries.compContinuousLinearMap_apply"],
 ["simpVarHead", "FormalMultilinearSeries.comp_coeff_zero'"],
 ["simpVarHead", "FormalMultilinearSeries.id_apply_one"],
 ["simpVarHead", "FundamentalGroupoid.equiv_apply"],
 ["simpVarHead", "FundamentalGroupoid.equiv_symm_apply_as"],
 ["simpVarHead", "GaussianInt.toComplex_im"],
 ["simpVarHead", "GaussianInt.toComplex_re"],
 ["simpVarHead", "GaussianInt.toComplex_star"],
 ["simpVarHead", "GenLoop.const_apply"],
 ["simpVarHead", "GenLoop.homotopyFrom_apply"],
 ["simpVarHead", "GenLoop.loopHomeo_apply"],
 ["simpVarHead", "GenLoop.loopHomeo_symm_apply"],
 ["simpVarHead", "GenLoop.mk_apply"],
 ["simpVarHead", "GenLoop.toLoop_apply_coe"],
 ["simpVarHead", "Hamming.ofHamming_add"],
 ["simpVarHead", "Hamming.ofHamming_neg"],
 ["simpVarHead", "Hamming.ofHamming_smul"],
 ["simpVarHead", "Hamming.ofHamming_sub"],
 ["simpVarHead", "Hamming.ofHamming_toHamming"],
 ["simpVarHead", "Hamming.ofHamming_zero"],
 ["simpVarHead", "Hamming.toHamming_add"],
 ["simpVarHead", "Hamming.toHamming_neg"],
 ["simpVarHead", "Hamming.toHamming_ofHamming"],
 ["simpVarHead", "Hamming.toHamming_smul"],
 ["simpVarHead", "Hamming.toHamming_sub"],
 ["simpVarHead", "Hamming.toHamming_zero"],
 ["simpVarHead", "HilbertBasis.coe_toOrthonormalBasis"],
 ["simpVarHead", "Homeomorph.coe_unitBall_apply_zero"],
 ["simpVarHead", "Homeomorph.toMeasurableEquiv_coe"],
 ["simpVarHead", "Homeomorph.toMeasurableEquiv_symm_coe"],
 ["simpVarHead", "InnerProductSpace.toDualMap_apply"],
 ["simpVarHead", "InnerProductSpace.toDual_apply"],
 ["simpVarHead", "IsBoundedBilinearMap.deriv_apply"],
 ["simpVarHead", "IsCyclotomicExtension.autEquivPow_apply"],
 ["simpVarHead", "IsCyclotomicExtension.autEquivPow_symm_apply"],
 ["simpVarHead", "IsHilbertSum.linearIsometryEquiv_apply_dfinsupp_sum_single"],
 ["simpVarHead",
  "IsHilbertSum.linearIsometryEquiv_symm_apply_dfinsupp_sum_single"],
 ["simpVarHead", "IsHilbertSum.linearIsometryEquiv_symm_apply_single"],
 ["simpVarHead", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_apply"],
 ["simpVarHead", "IsPrimitiveRoot.adjoinEquivRingOfIntegers'_symm_apply"],
 ["simpVarHead", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_apply"],
 ["simpVarHead", "IsPrimitiveRoot.adjoinEquivRingOfIntegers_symm_apply"],
 ["simpVarHead", "IsPrimitiveRoot.embeddingsEquivPrimitiveRoots_apply_coe"],
 ["simpVarHead", "IsROrC.I_re"],
 ["simpVarHead", "IsROrC.bit1_im"],
 ["simpVarHead", "IsROrC.bit1_re"],
 ["simpVarHead", "IsROrC.conjAe_coe"],
 ["simpVarHead", "IsROrC.conjCle_apply"],
 ["simpVarHead", "IsROrC.conjLie_apply"],
 ["simpVarHead", "IsROrC.conj_I"],
 ["simpVarHead", "IsROrC.conj_im"],
 ["simpVarHead", "IsROrC.conj_ofReal"],
 ["simpVarHead", "IsROrC.conj_re"],
 ["simpVarHead", "IsROrC.imClm_apply"],
 ["simpVarHead", "IsROrC.imLm_coe"],
 ["simpVarHead", "IsROrC.im_to_complex"],
 ["simpVarHead", "IsROrC.im_to_real"],
 ["simpVarHead", "IsROrC.intCast_im"],
 ["simpVarHead", "IsROrC.intCast_re"],
 ["simpVarHead", "IsROrC.inv_im"],
 ["simpVarHead", "IsROrC.inv_re"],
 ["simpVarHead", "IsROrC.mul_im"],
 ["simpVarHead", "IsROrC.mul_re"],
 ["simpVarHead", "IsROrC.natCast_im"],
 ["simpVarHead", "IsROrC.natCast_re"],
 ["simpVarHead", "IsROrC.normSq_conj"],
 ["simpVarHead", "IsROrC.normSq_neg"],
 ["simpVarHead", "IsROrC.normSq_to_complex"],
 ["simpVarHead", "IsROrC.normSq_to_real"],
 ["simpVarHead", "IsROrC.ofNat_im"],
 ["simpVarHead", "IsROrC.ofNat_re"],
 ["simpVarHead", "IsROrC.ofRealAm_coe"],
 ["simpVarHead", "IsROrC.ofRealClm_apply"],
 ["simpVarHead", "IsROrC.ofRealLi_apply"],
 ["simpVarHead", "IsROrC.ofReal_im"],
 ["simpVarHead", "IsROrC.ofReal_re"],
 ["simpVarHead", "IsROrC.one_im"],
 ["simpVarHead", "IsROrC.one_re"],
 ["simpVarHead", "IsROrC.ratCast_im"],
 ["simpVarHead", "IsROrC.ratCast_re"],
 ["simpVarHead", "IsROrC.reClm_apply"],
 ["simpVarHead", "IsROrC.reLm_coe"],
 ["simpVarHead", "IsROrC.re_to_complex"],
 ["simpVarHead", "IsROrC.re_to_real"],
 ["simpVarHead", "Isometry.affineIsometryOfStrictConvexSpace_apply"],
 ["simpVarHead", "Isometry.coe_affineIsometryOfStrictConvexSpace"],
 ["simpVarHead", "Isometry.isometryEquivOnRange_apply"],
 ["simpVarHead", "IsometryEquiv.addLeft_apply"],
 ["simpVarHead", "IsometryEquiv.addRight_apply"],
 ["simpVarHead", "IsometryEquiv.apply_inv_self"],
 ["simpVarHead", "IsometryEquiv.apply_symm_apply"],
 ["simpVarHead", "IsometryEquiv.coeFn_toRealAffineIsometryEquiv"],
 ["simpVarHead", "IsometryEquiv.coe_mk"],
 ["simpVarHead", "IsometryEquiv.coe_mul"],
 ["simpVarHead", "IsometryEquiv.coe_one"],
 ["simpVarHead", "IsometryEquiv.coe_toEquiv"],
 ["simpVarHead", "IsometryEquiv.coe_toHomeomorph"],
 ["simpVarHead", "IsometryEquiv.coe_toHomeomorph_symm"],
 ["simpVarHead", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero"],
 ["simpVarHead", "IsometryEquiv.coe_toRealLinearIsometryEquivOfMapZero_symm"],
 ["simpVarHead", "IsometryEquiv.constSMul_apply"],
 ["simpVarHead", "IsometryEquiv.constVAdd_apply"],
 ["simpVarHead", "IsometryEquiv.constVSub_apply"],
 ["simpVarHead", "IsometryEquiv.constVSub_symm_apply"],
 ["simpVarHead", "IsometryEquiv.constVSub_toFun"],
 ["simpVarHead", "IsometryEquiv.divLeft_apply"],
 ["simpVarHead", "IsometryEquiv.divLeft_symm_apply"],
 ["simpVarHead", "IsometryEquiv.divRight_apply"],
 ["simpVarHead", "IsometryEquiv.funUnique_apply"],
 ["simpVarHead", "IsometryEquiv.funUnique_symm_apply"],
 ["simpVarHead", "IsometryEquiv.funUnique_toFun"],
 ["simpVarHead", "IsometryEquiv.inv_apply"],
 ["simpVarHead", "IsometryEquiv.inv_apply_self"],
 ["simpVarHead", "IsometryEquiv.mulLeft_apply"],
 ["simpVarHead", "IsometryEquiv.mulRight_apply"],
 ["simpVarHead", "IsometryEquiv.neg_apply"],
 ["simpVarHead", "IsometryEquiv.piFinTwo_apply"],
 ["simpVarHead", "IsometryEquiv.piFinTwo_symm_apply"],
 ["simpVarHead", "IsometryEquiv.piFinTwo_toFun"],
 ["simpVarHead", "IsometryEquiv.subLeft_apply"],
 ["simpVarHead", "IsometryEquiv.subLeft_symm_apply"],
 ["simpVarHead", "IsometryEquiv.subRight_apply"],
 ["simpVarHead", "IsometryEquiv.symm_apply_apply"],
 ["simpVarHead", "IsometryEquiv.symm_trans_apply"],
 ["simpVarHead", "IsometryEquiv.toRealLinearIsometryEquiv_apply"],
 ["simpVarHead", "IsometryEquiv.toRealLinearIsometryEquiv_symm_apply"],
 ["simpVarHead", "IsometryEquiv.trans_apply"],
 ["simpVarHead", "IsometryEquiv.vaddConst_apply"],
 ["simpVarHead", "IsometryEquiv.vaddConst_symm_apply"],
 ["simpVarHead", "IsometryEquiv.vaddConst_toFun"],
 ["simpVarHead", "LeftInvariantDerivation.coeFnAddMonoidHom_apply"],
 ["simpVarHead", "LeftInvariantDerivation.coe_add"],
 ["simpVarHead", "LeftInvariantDerivation.coe_neg"],
 ["simpVarHead", "LeftInvariantDerivation.coe_smul"],
 ["simpVarHead", "LeftInvariantDerivation.coe_sub"],
 ["simpVarHead", "LeftInvariantDerivation.coe_zero"],
 ["simpVarHead", "LeftInvariantDerivation.commutator_coe_derivation"],
 ["simpVarHead", "LeftInvariantDerivation.evalAt_coe"],
 ["simpVarHead", "LeftInvariantDerivation.leibniz"],
 ["simpVarHead", "LightProfinite.instCategoryLightProfinite_comp_apply"],
 ["simpVarHead", "LightProfinite.instCategoryLightProfinite_id_apply"],
 ["simpVarHead", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous"],
 ["simpVarHead", "LinearEquiv.coeFn_toContinuousLinearEquivOfContinuous_symm"],
 ["simpVarHead", "LinearEquiv.coe_isometryOfInner"],
 ["simpVarHead", "LinearEquiv.coe_isometryOfOrthonormal"],
 ["simpVarHead", "LinearEquiv.coe_toContinuousLinearEquiv'"],
 ["simpVarHead", "LinearEquiv.coe_toContinuousLinearEquiv_symm'"],
 ["simpVarHead", "LinearIsometry.coe_comp"],
 ["simpVarHead", "LinearIsometry.coe_id"],
 ["simpVarHead", "LinearIsometry.coe_mk"],
 ["simpVarHead", "LinearIsometry.coe_mul"],
 ["simpVarHead", "LinearIsometry.coe_one"],
 ["simpVarHead", "LinearIsometry.coe_toAffineIsometry"],
 ["simpVarHead", "LinearIsometry.coe_toContinuousLinearMap"],
 ["simpVarHead", "LinearIsometry.coe_toLinearIsometryEquiv"],
 ["simpVarHead", "LinearIsometry.coe_toLinearMap"],
 ["simpVarHead", "LinearIsometry.equivRange_apply_coe"],
 ["simpVarHead", "LinearIsometry.id_apply"],
 ["simpVarHead", "LinearIsometry.toLinearIsometryEquiv_apply"],
 ["simpVarHead", "LinearIsometry.toSpanSingleton_apply"],
 ["simpVarHead", "LinearIsometryEquiv.apply_symm_apply"],
 ["simpVarHead", "LinearIsometryEquiv.coe_coe"],
 ["simpVarHead", "LinearIsometryEquiv.coe_coe''"],
 ["simpVarHead", "LinearIsometryEquiv.coe_inv"],
 ["simpVarHead", "LinearIsometryEquiv.coe_mk"],
 ["simpVarHead", "LinearIsometryEquiv.coe_mul"],
 ["simpVarHead", "LinearIsometryEquiv.coe_neg"],
 ["simpVarHead", "LinearIsometryEquiv.coe_ofEq_apply"],
 ["simpVarHead", "LinearIsometryEquiv.coe_ofLinearIsometry"],
 ["simpVarHead", "LinearIsometryEquiv.coe_ofLinearIsometry_symm"],
 ["simpVarHead", "LinearIsometryEquiv.coe_ofSurjective"],
 ["simpVarHead", "LinearIsometryEquiv.coe_one"],
 ["simpVarHead", "LinearIsometryEquiv.coe_prodAssoc"],
 ["simpVarHead", "LinearIsometryEquiv.coe_prodAssoc_symm"],
 ["simpVarHead", "LinearIsometryEquiv.coe_refl"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toAffineIsometryEquiv"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toContinuousLinearEquiv"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toHomeomorph"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toIsometryEquiv"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toLinearEquiv"],
 ["simpVarHead", "LinearIsometryEquiv.coe_toLinearIsometry"],
 ["simpVarHead", "LinearIsometryEquiv.coe_trans"],
 ["simpVarHead", "LinearIsometryEquiv.ofTop_apply"],
 ["simpVarHead", "LinearIsometryEquiv.ofTop_symm_apply_coe"],
 ["simpVarHead", "LinearIsometryEquiv.piLpCongrLeft_apply"],
 ["simpVarHead", "LinearIsometryEquiv.piLpCongrLeft_single"],
 ["simpVarHead", "LinearIsometryEquiv.symm_apply_apply"],
 ["simpVarHead", "LinearIsometryEquiv.trans_apply"],
 ["simpVarHead", "LinearMap.adjoint_adjoint"],
 ["simpVarHead", "LinearMap.adjoint_comp"],
 ["simpVarHead", "LinearMap.clmOfExistsBoundedImage_apply"],
 ["simpVarHead", "LinearMap.coe_isometryOfInner"],
 ["simpVarHead", "LinearMap.coe_isometryOfOrthonormal"],
 ["simpVarHead", "LinearMap.coe_toContinuousLinearMap"],
 ["simpVarHead", "LinearMap.coe_toContinuousLinearMap'"],
 ["simpVarHead", "LinearMap.coe_toContinuousLinearMap_symm"],
 ["simpVarHead", "LinearMap.extendTo𝕜'_apply_re"],
 ["simpVarHead", "LinearMap.im_inner_adjoint_mul_self_eq_zero"],
 ["simpVarHead", "LinearMap.mkContinuousOfExistsBound_apply"],
 ["simpVarHead", "LinearMap.mkContinuous_apply"],
 ["simpVarHead", "LinearMap.mkContinuous₂_apply"],
 ["simpVarHead", "LinearMap.toContinuousLinearMap₁_apply"],
 ["simpVarHead", "LinearMap.toMatrixOrthonormal_apply"],
 ["simpVarHead", "LinearMap.toMatrixOrthonormal_symm_apply"],
 ["simpVarHead", "LinearMap.toSeminormFamily_apply"],
 ["simpVarHead", "LinearMap.toSeminorm_apply"],
 ["simpVarHead", "LinearOrderedField.coe_inducedOrderRingIso"],
 ["simpVarHead", "LinearOrderedField.inducedOrderRingHom_toFun"],
 ["simpVarHead", "LinearPMap.adjointDomainMkClmExtend_apply"],
 ["simpVarHead", "LipschitzWith.coe_toLocallyBoundedMap"],
 ["simpVarHead", "Locale.localePointOfSpacePoint_toFun"],
 ["simpVarHead", "Locale.openOfElementHom_toFun"],
 ["simpVarHead", "Matrix.piLp_equiv_toEuclideanClm"],
 ["simpVarHead", "Matrix.piLp_equiv_toEuclideanLin"],
 ["simpVarHead", "Matrix.toEuclideanClm_piLp_equiv_symm"],
 ["simpVarHead", "Matrix.toEuclideanLin_piLp_equiv_symm"],
 ["simpVarHead", "MeasurableEquiv.coe_addLeft"],
 ["simpVarHead", "MeasurableEquiv.coe_addRight"],
 ["simpVarHead", "MeasurableEquiv.coe_mulLeft"],
 ["simpVarHead", "MeasurableEquiv.coe_mulLeft₀"],
 ["simpVarHead", "MeasurableEquiv.coe_mulRight"],
 ["simpVarHead", "MeasurableEquiv.coe_mulRight₀"],
 ["simpVarHead", "MeasurableEquiv.coe_smul₀"],
 ["simpVarHead", "MeasurableEquiv.inv_apply"],
 ["simpVarHead", "MeasurableEquiv.neg_apply"],
 ["simpVarHead", "MeasurableEquiv.smul_apply"],
 ["simpVarHead", "MeasurableEquiv.vadd_apply"],
 ["simpVarHead", "MeasureTheory.withDensitySMulLI_apply"],
 ["simpVarHead", "ModelWithCorners.toHomeomorph_apply"],
 ["simpVarHead", "ModelWithCorners.toHomeomorph_symm_apply"],
 ["simpVarHead", "ModularForm.add_apply"],
 ["simpVarHead", "ModularForm.coeHom_apply"],
 ["simpVarHead", "ModularForm.coe_add"],
 ["simpVarHead", "ModularForm.coe_intCast"],
 ["simpVarHead", "ModularForm.coe_natCast"],
 ["simpVarHead", "ModularForm.coe_neg"],
 ["simpVarHead", "ModularForm.coe_smul"],
 ["simpVarHead", "ModularForm.coe_sub"],
 ["simpVarHead", "ModularForm.coe_zero"],
 ["simpVarHead", "ModularForm.const_toFun"],
 ["simpVarHead", "ModularForm.mul_coe"],
 ["simpVarHead", "ModularForm.neg_apply"],
 ["simpVarHead", "ModularForm.one_coe_eq_one"],
 ["simpVarHead", "ModularForm.smul_apply"],
 ["simpVarHead", "ModularForm.sub_apply"],
 ["simpVarHead", "ModularForm.toSlashInvariantForm_coe"],
 ["simpVarHead", "ModularForm.zero_apply"],
 ["simpVarHead", "ModularGroup.lcRow0Extend_apply"],
 ["simpVarHead", "ModularGroup.lcRow0Extend_symm_apply"],
 ["simpVarHead", "ModularGroup.lcRow0_apply"],
 ["simpVarHead", "MulRingSeminorm.apply_one"],
 ["simpVarHead", "MulRingSeminorm.toFun_eq_coe"],
 ["simpVarHead", "MultilinearMap.coe_mkContinuous"],
 ["simpVarHead", "MultilinearMap.mkContinuousMultilinear_apply"],
 ["simpVarHead", "NNReal.orderIsoRpow_apply"],
 ["simpVarHead", "NNReal.rpowMonoidHom_apply"],
 ["simpVarHead", "NNReal.sqrt_mul_self"],
 ["simpVarHead", "NNReal.sqrt_one"],
 ["simpVarHead", "NNReal.sqrt_sq"],
 ["simpVarHead", "NNReal.sqrt_zero"],
 ["simpVarHead", "NonUnitalAlgHom.coe_Lmul"],
 ["simpVarHead", "NormedAddCommGroup.toCompl_apply"],
 ["simpVarHead", "NormedAddGroupHom.add_apply"],
 ["simpVarHead", "NormedAddGroupHom.coeAddHom_apply"],
 ["simpVarHead", "NormedAddGroupHom.coe_add"],
 ["simpVarHead", "NormedAddGroupHom.coe_mkNormedAddGroupHom"],
 ["simpVarHead", "NormedAddGroupHom.coe_mkNormedAddGroupHom'"],
 ["simpVarHead", "NormedAddGroupHom.coe_neg"],
 ["simpVarHead", "NormedAddGroupHom.coe_nsmul"],
 ["simpVarHead", "NormedAddGroupHom.coe_smul"],
 ["simpVarHead", "NormedAddGroupHom.coe_sub"],
 ["simpVarHead", "NormedAddGroupHom.coe_sum"],
 ["simpVarHead", "NormedAddGroupHom.coe_toAddMonoidHom"],
 ["simpVarHead", "NormedAddGroupHom.coe_zero"],
 ["simpVarHead", "NormedAddGroupHom.coe_zsmul"],
 ["simpVarHead", "NormedAddGroupHom.comp_apply"],
 ["simpVarHead", "NormedAddGroupHom.completion_coe_to_fun"],
 ["simpVarHead", "NormedAddGroupHom.extension_coe"],
 ["simpVarHead", "NormedAddGroupHom.id_apply"],
 ["simpVarHead", "NormedAddGroupHom.incl_apply"],
 ["simpVarHead", "NormedAddGroupHom.neg_apply"],
 ["simpVarHead", "NormedAddGroupHom.nsmul_apply"],
 ["simpVarHead", "NormedAddGroupHom.smul_apply"],
 ["simpVarHead", "NormedAddGroupHom.sub_apply"],
 ["simpVarHead", "NormedAddGroupHom.zero_apply"],
 ["simpVarHead", "NormedAddGroupHom.zsmul_apply"],
 ["simpVarHead", "NormedRing.algEquivComplexOfComplete_apply"],
 ["simpVarHead", "NormedRing.algEquivComplexOfComplete_symm_apply"],
 ["simpVarHead", "NormedSpace.dualPairing_apply"],
 ["simpVarHead", "NormedSpace.dual_def"],
 ["simpVarHead", "NumberField.place_apply"],
 ["simpVarHead", "Orientation.areaForm'_apply"],
 ["simpVarHead", "Orientation.areaForm_apply_self"],
 ["simpVarHead", "Orientation.areaForm_rightAngleRotation_left"],
 ["simpVarHead", "Orientation.areaForm_rightAngleRotation_right"],
 ["simpVarHead", "Orientation.coe_basisRightAngleRotation"],
 ["simpVarHead", "Orientation.det_rotation"],
 ["simpVarHead", "Orientation.kahler_apply_self"],
 ["simpVarHead", "Orientation.kahler_neg_orientation"],
 ["simpVarHead", "Orientation.kahler_rightAngleRotation_left"],
 ["simpVarHead", "Orientation.kahler_rightAngleRotation_right"],
 ["simpVarHead", "Orientation.kahler_rotation_left"],
 ["simpVarHead", "Orientation.kahler_rotation_right"],
 ["simpVarHead", "Orientation.linearEquiv_det_rotation"],
 ["simpVarHead", "Orientation.rightAngleRotationAux₁_rightAngleRotationAux₁"],
 ["simpVarHead", "Orientation.rightAngleRotation_rightAngleRotation"],
 ["simpVarHead", "Orientation.rotationAux_apply"],
 ["simpVarHead", "Orientation.rotation_rotation"],
 ["simpVarHead", "OrthogonalFamily.linearIsometry_apply_single"],
 ["simpVarHead", "Orthonormal.equiv_apply"],
 ["simpVarHead", "OrthonormalBasis.coe_mk"],
 ["simpVarHead", "OrthonormalBasis.coe_ofRepr"],
 ["simpVarHead", "OrthonormalBasis.coe_of_orthogonal_eq_bot_mk"],
 ["simpVarHead", "OrthonormalBasis.coe_reindex"],
 ["simpVarHead", "OrthonormalBasis.coe_toBasis"],
 ["simpVarHead", "OrthonormalBasis.coe_toBasis_repr_apply"],
 ["simpVarHead", "OrthonormalBasis.map_apply"],
 ["simpVarHead", "OrthonormalBasis.repr_reindex"],
 ["simpVarHead", "OrthonormalBasis.repr_self"],
 ["simpVarHead", "OrthonormalBasis.repr_symm_single"],
 ["simpVarHead", "OrthonormalBasis.span_apply"],
 ["simpVarHead", "PMF.bernoulli_apply"],
 ["simpVarHead", "PMF.bindOnSupport_apply"],
 ["simpVarHead", "PMF.bind_apply"],
 ["simpVarHead", "PMF.binomial_apply_last"],
 ["simpVarHead", "PMF.binomial_apply_zero"],
 ["simpVarHead", "PMF.filter_apply"],
 ["simpVarHead", "PMF.map_apply"],
 ["simpVarHead", "PMF.normalize_apply"],
 ["simpVarHead", "PMF.ofFinset_apply"],
 ["simpVarHead", "PMF.ofFintype_apply"],
 ["simpVarHead", "PMF.ofMultiset_apply"],
 ["simpVarHead", "PMF.pure_apply"],
 ["simpVarHead", "PMF.seq_apply"],
 ["simpVarHead", "PMF.uniformOfFinset_apply"],
 ["simpVarHead", "PMF.uniformOfFintype_apply"],
 ["simpVarHead", "PadicInt.algebraMap_apply"],
 ["simpVarHead", "PadicInt.lift_self"],
 ["simpVarHead", "Path.cast_coe"],
 ["simpVarHead", "Path.coe_mk"],
 ["simpVarHead", "Path.coe_mk_mk"],
 ["simpVarHead", "Path.coe_reparam"],
 ["simpVarHead", "Path.coe_toContinuousMap"],
 ["simpVarHead", "Path.map_coe"],
 ["simpVarHead", "Path.pi_coe"],
 ["simpVarHead", "Path.prod_coe"],
 ["simpVarHead", "Path.refl_apply"],
 ["simpVarHead", "Path.source"],
 ["simpVarHead", "Path.symm_apply"],
 ["simpVarHead", "Path.target"],
 ["simpVarHead", "Path.toHomotopyConst_apply"],
 ["simpVarHead", "Perfection.coeff_mk"],
 ["simpVarHead", "Perfection.lift_apply_apply_coe"],
 ["simpVarHead", "Perfection.lift_symm_apply"],
 ["simpVarHead", "Perfection.map_apply_coe"],
 ["simpVarHead", "PerfectionMap.lift_apply"],
 ["simpVarHead", "PerfectionMap.lift_symm_apply"],
 ["simpVarHead", "PiLp.basisFun_apply"],
 ["simpVarHead", "PiLp.basisFun_repr"],
 ["simpVarHead", "PiLp.continuousLinearEquiv_apply"],
 ["simpVarHead", "PiLp.continuousLinearEquiv_symm_apply"],
 ["simpVarHead", "Polynomial.aeval_continuousMap_apply"],
 ["simpVarHead", "Polynomial.cyclotomic_expand_eq_cyclotomic"],
 ["simpVarHead", "Polynomial.cyclotomic_expand_eq_cyclotomic_mul"],
 ["simpVarHead", "Polynomial.toContinuousMapAlgHom_apply"],
 ["simpVarHead", "Polynomial.toContinuousMapOnAlgHom_apply"],
 ["simpVarHead", "Polynomial.toContinuousMapOn_apply"],
 ["simpVarHead", "Polynomial.toContinuousMap_apply"],
 ["simpVarHead", "PontryaginDual.map_apply"],
 ["simpVarHead", "Pretrivialization.linearEquivAt_apply"],
 ["simpVarHead", "Pretrivialization.linearEquivAt_symm_apply"],
 ["simpVarHead", "Pretrivialization.symmₗ_apply"],
 ["simpVarHead", "Profinite.homeoOfIso_apply"],
 ["simpVarHead", "Profinite.homeoOfIso_symm_apply"],
 ["simpVarHead", "Profinite.isoEquivHomeo_apply_apply"],
 ["simpVarHead", "Profinite.isoEquivHomeo_apply_symm_apply"],
 ["simpVarHead", "Profinite.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpVarHead", "Profinite.isoEquivHomeo_symm_apply_inv"],
 ["simpVarHead", "Quaternion.coe_ofComplex"],
 ["simpVarHead", "Quaternion.linearIsometryEquivTuple_apply"],
 ["simpVarHead", "Quaternion.linearIsometryEquivTuple_symm_apply"],
 ["simpVarHead", "Real.coe_expOrderIso_apply"],
 ["simpVarHead", "Real.coe_sinOrderIso_apply"],
 ["simpVarHead", "Real.sinhEquiv_apply"],
 ["simpVarHead", "Real.sinhEquiv_symm_apply"],
 ["simpVarHead", "Real.sinhHomeomorph_apply"],
 ["simpVarHead", "Real.sinhHomeomorph_symm_apply"],
 ["simpVarHead", "Real.sinhOrderIso_apply"],
 ["simpVarHead", "Real.sinhOrderIso_symm_apply"],
 ["simpVarHead", "RingSeminorm.apply_one"],
 ["simpVarHead", "RingSeminorm.toFun_eq_coe"],
 ["simpVarHead", "SchwartzMap.add_apply"],
 ["simpVarHead", "SchwartzMap.coeFn_zero"],
 ["simpVarHead", "SchwartzMap.delta_apply"],
 ["simpVarHead", "SchwartzMap.derivCLM_apply"],
 ["simpVarHead", "SchwartzMap.fderivCLM_apply"],
 ["simpVarHead", "SchwartzMap.iteratedPDeriv_one"],
 ["simpVarHead", "SchwartzMap.iteratedPDeriv_zero"],
 ["simpVarHead", "SchwartzMap.pderivCLM_apply"],
 ["simpVarHead", "SchwartzMap.smul_apply"],
 ["simpVarHead", "SchwartzMap.sub_apply"],
 ["simpVarHead", "SchwartzMap.toBoundedContinuousFunctionCLM_apply"],
 ["simpVarHead", "SchwartzMap.toBoundedContinuousFunctionLM_apply"],
 ["simpVarHead", "SchwartzMap.toBoundedContinuousFunction_apply"],
 ["simpVarHead", "SchwartzMap.zero_apply"],
 ["simpVarHead", "SemiNormedGroupCat.coe_comp"],
 ["simpVarHead", "SemiNormedGroupCat.coe_id"],
 ["simpVarHead", "SemiNormedGroupCat.explicitCokernelπ_apply_dom_eq_zero"],
 ["simpVarHead", "SemiNormedGroupCat.explicitCokernelπ_desc_apply"],
 ["simpVarHead", "SemiNormedGroupCat.zero_apply"],
 ["simpVarHead", "SemiNormedGroupCat₁.coe_comp"],
 ["simpVarHead", "SemiNormedGroupCat₁.coe_id"],
 ["simpVarHead", "SemiNormedGroupCat₁.zero_apply"],
 ["simpVarHead", "Seminorm.add_apply"],
 ["simpVarHead", "Seminorm.coeFnAddMonoidHom_apply"],
 ["simpVarHead", "Seminorm.coe_bot"],
 ["simpVarHead", "Seminorm.coe_restrictScalars"],
 ["simpVarHead", "Seminorm.coe_sup"],
 ["simpVarHead", "Seminorm.coe_zero"],
 ["simpVarHead", "Seminorm.comp_apply"],
 ["simpVarHead", "Seminorm.inf_apply"],
 ["simpVarHead", "Seminorm.pullback_apply"],
 ["simpVarHead", "Seminorm.smul_apply"],
 ["simpVarHead", "Seminorm.zero_apply"],
 ["simpVarHead", "SimplexCategory.toTop_map_apply"],
 ["simpVarHead", "SlashInvariantForm.add_apply"],
 ["simpVarHead", "SlashInvariantForm.coe_add"],
 ["simpVarHead", "SlashInvariantForm.coe_intCast"],
 ["simpVarHead", "SlashInvariantForm.coe_mk"],
 ["simpVarHead", "SlashInvariantForm.coe_mul"],
 ["simpVarHead", "SlashInvariantForm.coe_natCast"],
 ["simpVarHead", "SlashInvariantForm.coe_neg"],
 ["simpVarHead", "SlashInvariantForm.coe_smul"],
 ["simpVarHead", "SlashInvariantForm.coe_sub"],
 ["simpVarHead", "SlashInvariantForm.coe_zero"],
 ["simpVarHead", "SlashInvariantForm.const_toFun"],
 ["simpVarHead", "SlashInvariantForm.neg_apply"],
 ["simpVarHead", "SlashInvariantForm.one_coe_eq_one"],
 ["simpVarHead", "SlashInvariantForm.smul_apply"],
 ["simpVarHead", "SlashInvariantForm.sub_apply"],
 ["simpVarHead", "SmoothMap.coeFnAddMonoidHom_apply"],
 ["simpVarHead", "SmoothMap.coeFnAlgHom_apply"],
 ["simpVarHead", "SmoothMap.coeFnLinearMap_apply"],
 ["simpVarHead", "SmoothMap.coeFnMonoidHom_apply"],
 ["simpVarHead", "SmoothMap.coeFnRingHom_apply"],
 ["simpVarHead", "SmoothMap.coe_add"],
 ["simpVarHead", "SmoothMap.coe_div"],
 ["simpVarHead", "SmoothMap.coe_inv"],
 ["simpVarHead", "SmoothMap.coe_mul"],
 ["simpVarHead", "SmoothMap.coe_neg"],
 ["simpVarHead", "SmoothMap.coe_nsmul"],
 ["simpVarHead", "SmoothMap.coe_one"],
 ["simpVarHead", "SmoothMap.coe_pow"],
 ["simpVarHead", "SmoothMap.coe_smul"],
 ["simpVarHead", "SmoothMap.coe_sub"],
 ["simpVarHead", "SmoothMap.coe_zero"],
 ["simpVarHead", "Stonean.homeoOfIso_apply"],
 ["simpVarHead", "Stonean.homeoOfIso_symm_apply"],
 ["simpVarHead", "Stonean.isoEquivHomeo_apply_apply"],
 ["simpVarHead", "Stonean.isoEquivHomeo_apply_symm_apply"],
 ["simpVarHead", "Stonean.isoEquivHomeo_symm_apply_hom_apply"],
 ["simpVarHead", "Stonean.isoEquivHomeo_symm_apply_inv"],
 ["simpVarHead", "Submodule.coe_continuous_linearProjOfClosedCompl'"],
 ["simpVarHead", "Submodule.coe_prodEquivOfClosedCompl"],
 ["simpVarHead", "Submodule.coe_prodEquivOfClosedCompl_symm"],
 ["simpVarHead", "Submodule.coe_subtypeₗᵢ"],
 ["simpVarHead", "Trivialization.continuousLinearEquivAt_apply"],
 ["simpVarHead", "Trivialization.continuousLinearEquivAt_apply'"],
 ["simpVarHead", "Trivialization.continuousLinearEquivAt_symm_apply"],
 ["simpVarHead", "Trivialization.continuousLinearMapAt_apply"],
 ["simpVarHead", "Trivialization.linearEquivAt_apply"],
 ["simpVarHead", "Trivialization.linearEquivAt_symm_apply"],
 ["simpVarHead", "Trivialization.symmL_apply"],
 ["simpVarHead", "UniformFun.ofFun_add"],
 ["simpVarHead", "UniformFun.ofFun_div"],
 ["simpVarHead", "UniformFun.ofFun_inv"],
 ["simpVarHead", "UniformFun.ofFun_mul"],
 ["simpVarHead", "UniformFun.ofFun_neg"],
 ["simpVarHead", "UniformFun.ofFun_one"],
 ["simpVarHead", "UniformFun.ofFun_smul"],
 ["simpVarHead", "UniformFun.ofFun_sub"],
 ["simpVarHead", "UniformFun.ofFun_zero"],
 ["simpVarHead", "UniformFun.toFun_add"],
 ["simpVarHead", "UniformFun.toFun_div"],
 ["simpVarHead", "UniformFun.toFun_inv"],
 ["simpVarHead", "UniformFun.toFun_mul"],
 ["simpVarHead", "UniformFun.toFun_neg"],
 ["simpVarHead", "UniformFun.toFun_one"],
 ["simpVarHead", "UniformFun.toFun_smul"],
 ["simpVarHead", "UniformFun.toFun_sub"],
 ["simpVarHead", "UniformFun.toFun_zero"],
 ["simpVarHead", "UniformOnFun.ofFun_add"],
 ["simpVarHead", "UniformOnFun.ofFun_div"],
 ["simpVarHead", "UniformOnFun.ofFun_inv"],
 ["simpVarHead", "UniformOnFun.ofFun_mul"],
 ["simpVarHead", "UniformOnFun.ofFun_neg"],
 ["simpVarHead", "UniformOnFun.ofFun_smul"],
 ["simpVarHead", "UniformOnFun.ofFun_sub"],
 ["simpVarHead", "UniformOnFun.one_apply"],
 ["simpVarHead", "UniformOnFun.toFun_add"],
 ["simpVarHead", "UniformOnFun.toFun_div"],
 ["simpVarHead", "UniformOnFun.toFun_inv"],
 ["simpVarHead", "UniformOnFun.toFun_mul"],
 ["simpVarHead", "UniformOnFun.toFun_neg"],
 ["simpVarHead", "UniformOnFun.toFun_one"],
 ["simpVarHead", "UniformOnFun.toFun_smul"],
 ["simpVarHead", "UniformOnFun.toFun_sub"],
 ["simpVarHead", "UniformOnFun.toFun_zero"],
 ["simpVarHead", "UniformOnFun.zero_apply"],
 ["simpVarHead", "Unitization.splitMul_apply"],
 ["simpVarHead", "VectorBundleCore.localTriv_coordChange_eq"],
 ["simpVarHead", "VectorBundleCore.trivializationAt_coordChange_eq"],
 ["simpVarHead", "WeakDual.coe_toNormedDual"],
 ["simpVarHead", "WithLp.equiv_fst"],
 ["simpVarHead", "WithLp.equiv_pi_apply"],
 ["simpVarHead", "WithLp.equiv_single"],
 ["simpVarHead", "WithLp.equiv_snd"],
 ["simpVarHead", "WithLp.equiv_symm_fst"],
 ["simpVarHead", "WithLp.equiv_symm_pi_apply"],
 ["simpVarHead", "WithLp.equiv_symm_single"],
 ["simpVarHead", "WithLp.equiv_symm_snd"],
 ["simpVarHead", "WithLp.prodContinuousLinearEquiv_apply"],
 ["simpVarHead", "WithLp.prodContinuousLinearEquiv_symm_apply"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_add"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_comp_to_continuous_fun"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_copy"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_mul"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_neg"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_nsmulRec"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_smul"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_star"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_sub"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_toContinuousMap"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_zero"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.coe_zsmulRec"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.toBCF_apply"],
 ["simpVarHead", "ZeroAtInftyContinuousMap.toBCF_toFun"],
 ["simpVarHead", "Zspan.quotientEquiv_apply_mk"],
 ["simpVarHead", "Zspan.repr_ceil_apply"],
 ["simpVarHead", "Zspan.repr_floor_apply"],
 ["simpVarHead", "Zspan.repr_fract_apply"],
 ["simpVarHead", "Zsqrtd.toReal_apply"],
 ["simpVarHead", "bernsteinApproximation.apply"],
 ["simpVarHead", "circle.argEquiv_apply_coe"],
 ["simpVarHead", "circle.argEquiv_symm_apply"],
 ["simpVarHead", "circle.toUnits_apply"],
 ["simpVarHead", "padicNormE.eq_padic_norm'"],
 ["simpVarHead", "skewAdjoint.negISMul_apply_coe"],
 ["simpVarHead", "smoothSheafCommRing.evalHom_germ"],
 ["simpVarHead", "smoothSheafCommRing.eval_germ"],
 ["simpVarHead",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_apply"],
 ["simpVarHead",
  "AddCommGroupCat.enough_injectives_aux_proofs.equivZModSpanAddOrderOf_symm_apply_coe"],
 ["simpVarHead", "AddCommGroupCat.enough_injectives_aux_proofs.toNext_apply"],
 ["simpVarHead",
  "AddCommGroupCat.enough_injectives_aux_proofs.toRatCircle_apply"],
 ["simpVarHead", "AddSubgroup.normedMk.apply"],
 ["simpVarHead", "AffineSubspace.isometryEquivMap.apply_symm_apply"],
 ["simpVarHead", "AffineSubspace.isometryEquivMap.coe_apply"],
 ["simpVarHead", "BoxIntegral.Box.splitCenterBoxEmb_apply"],
 ["simpVarHead", "BoxIntegral.BoxAdditiveMap.coe_mk"],
 ["simpVarHead",
  "BoxIntegral.BoxAdditiveMap.instZeroBoxAdditiveMap_zero_apply"],
 ["simpVarHead", "BoxIntegral.BoxAdditiveMap.map_apply"],
 ["simpVarHead", "BoxIntegral.BoxAdditiveMap.restrict_apply"],
 ["simpVarHead", "BoxIntegral.BoxAdditiveMap.toSMul_apply"],
 ["simpVarHead", "BoxIntegral.BoxAdditiveMap.upperSubLower_apply"],
 ["simpVarHead", "BoxIntegral.Integrable.toBoxAdditive_apply"],
 ["simpVarHead", "ContinuousLinearMap.NonlinearRightInverse.right_inv"],
 ["simpVarHead", "ContinuousMap.Homotopy.apply_one"],
 ["simpVarHead", "ContinuousMap.Homotopy.apply_zero"],
 ["simpVarHead", "ContinuousMap.Homotopy.cast_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.coe_toContinuousMap"],
 ["simpVarHead", "ContinuousMap.Homotopy.compContinuousMap_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.curry_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.extend_apply_coe"],
 ["simpVarHead", "ContinuousMap.Homotopy.extend_apply_of_mem_I"],
 ["simpVarHead", "ContinuousMap.Homotopy.hcomp_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.prod_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.refl_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.symm_apply"],
 ["simpVarHead", "ContinuousMap.Homotopy.ulift_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyEquiv.coe_invFun"],
 ["simpVarHead", "ContinuousMap.HomotopyEquiv.toFun_eq_coe"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.cast_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.cast_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.compContinuousMap_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.compContinuousMap_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.pi_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.pi_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.prod_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.prod_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.refl_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.refl_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.symm_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyRel.symm_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.apply_one"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.apply_zero"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.cast_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.cast_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.coe_toHomotopy"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.refl_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.refl_toFun"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.symm_apply"],
 ["simpVarHead", "ContinuousMap.HomotopyWith.symm_toFun"],
 ["simpVarHead",
  "DirectSum.IsInternal.isometryL2OfOrthogonalFamily_symm_apply"],
 ["simpVarHead", "Frm.Iso.mk_hom_toFun"],
 ["simpVarHead", "Frm.Iso.mk_inv_toFun"],
 ["simpVarHead", "LinearMap.IsSymmetric.apply_eigenvectorBasis"],
 ["simpVarHead", "LinearMap.IsSymmetric.diagonalization_symm_apply"],
 ["simpVarHead", "MeasureTheory.AEEqFun.toGermAddMonoidHom_apply"],
 ["simpVarHead", "MeasureTheory.AEEqFun.toGermMonoidHom_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.equivSignedMeasure_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.equivSignedMeasure_symm_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.equivSignedMeasureₗ_symm_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.im_apply"],
 ["simpVarHead", "MeasureTheory.ComplexMeasure.re_apply"],
 ["simpVarHead", "MeasureTheory.FiniteMeasure.coe_toWeakDualBCNN"],
 ["simpVarHead", "MeasureTheory.FiniteMeasure.toMeasureAddMonoidHom_apply"],
 ["simpVarHead", "MeasureTheory.FiniteMeasure.toWeakDualBCNN_apply"],
 ["simpVarHead", "MeasureTheory.L1.setToL1_zero_left"],
 ["simpVarHead", "MeasureTheory.Lp.compMeasurePreserving_val"],
 ["simpVarHead", "MeasureTheory.Lp.compMeasurePreservingₗ_apply"],
 ["simpVarHead", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_apply_coe"],
 ["simpVarHead", "MeasureTheory.Lp.compMeasurePreservingₗᵢ_toFun_coe"],
 ["simpVarHead", "MeasureTheory.Lp.constL_apply"],
 ["simpVarHead", "MeasureTheory.Lp.const_val"],
 ["simpVarHead", "MeasureTheory.Lp.constₗ_apply"],
 ["simpVarHead", "MeasureTheory.Measure.liftLinear_apply"],
 ["simpVarHead", "MeasureTheory.Measure.restrictₗ_apply"],
 ["simpVarHead", "MeasureTheory.Measure.toBoxAdditive_apply"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.comap_apply"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.comap_iSup"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.comap_top"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_apply"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_iSup"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_id"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_map"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_sup"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.map_top_of_surjective"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.restrict_apply"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.restrict_empty"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.restrict_iSup"],
 ["simpVarHead", "MeasureTheory.OuterMeasure.restrict_univ"],
 ["simpVarHead", "MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN"],
 ["simpVarHead", "MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply"],
 ["simpVarHead",
  "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_apply"],
 ["simpVarHead",
  "MeasureTheory.SignedMeasure.toJordanDecompositionEquiv_symm_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.coeFnAddMonoidHom_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.equivMeasure_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.equivMeasure_symm_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.mapGm_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.mapₗ_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.restrictGm_apply"],
 ["simpVarHead", "MeasureTheory.VectorMeasure.restrictₗ_apply"],
 ["simpVarHead", "Nat.ArithmeticFunction.log_apply"],
 ["simpVarHead", "Nat.ArithmeticFunction.vonMangoldt_apply_one"],
 ["simpVarHead", "NormedAddGroupHom.Equalizer.liftEquiv_apply"],
 ["simpVarHead", "NormedAddGroupHom.Equalizer.liftEquiv_symm_apply_coe"],
 ["simpVarHead", "NormedAddGroupHom.Equalizer.lift_apply_coe"],
 ["simpVarHead", "NormedAddGroupHom.ker.lift_apply_coe"],
 ["simpVarHead", "NormedSpace.Dual.coe_toWeakDual"],
 ["simpVarHead", "NumberField.ComplexEmbedding.conjugate_coe_eq"],
 ["simpVarHead", "NumberField.InfinitePlace.apply"],
 ["simpVarHead",
  "NumberField.InfinitePlace.instMulActionAlgEquivToCommSemiringToSemifieldToSemiringToDivisionSemiringToSemifieldInfinitePlaceToMonoidToDivInvMonoidAut_smul_coe_apply"],
 ["simpVarHead", "NumberField.InfinitePlace.mkReal_coe"],
 ["simpVarHead", "NumberField.InfinitePlace.smul_apply"],
 ["simpVarHead", "NumberField.canonicalEmbedding.apply_at"],
 ["simpVarHead", "NumberField.canonicalEmbedding.latticeBasis_apply"],
 ["simpVarHead", "NumberField.mixedEmbedding.commMap_canonical_eq_mixed"],
 ["simpVarHead", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_fst"],
 ["simpVarHead", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsComplex_snd"],
 ["simpVarHead", "NumberField.mixedEmbedding.indexEquiv_apply_ofIsReal"],
 ["simpVarHead", "NumberField.mixedEmbedding.latticeBasis_apply"],
 ["simpVarHead", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_fst"],
 ["simpVarHead", "NumberField.mixedEmbedding.stdBasis_apply_ofIsComplex_snd"],
 ["simpVarHead", "NumberField.mixedEmbedding.stdBasis_apply_ofIsReal"],
 ["simpVarHead", "Padic.addValuation.apply"],
 ["simpVarHead", "Path.Homotopy.cast_apply"],
 ["simpVarHead", "Path.Homotopy.cast_toFun"],
 ["simpVarHead", "Path.Homotopy.map_apply"],
 ["simpVarHead", "Path.Homotopy.map_toFun"],
 ["simpVarHead", "Path.Homotopy.refl_apply"],
 ["simpVarHead", "Path.Homotopy.refl_toFun"],
 ["simpVarHead", "Path.Homotopy.source"],
 ["simpVarHead", "Path.Homotopy.symm_apply"],
 ["simpVarHead", "Path.Homotopy.symm_toFun"],
 ["simpVarHead", "Path.Homotopy.symm₂_apply"],
 ["simpVarHead", "Path.Homotopy.symm₂_toFun"],
 ["simpVarHead", "Path.Homotopy.target"],
 ["simpVarHead", "Polynomial.Chebyshev.aeval_T"],
 ["simpVarHead", "Polynomial.Chebyshev.aeval_U"],
 ["simpVarHead", "Polynomial.Chebyshev.algebraMap_eval_T"],
 ["simpVarHead", "Polynomial.Chebyshev.algebraMap_eval_U"],
 ["simpVarHead", "ProbabilityTheory.kernel.coeFn_add"],
 ["simpVarHead", "ProbabilityTheory.kernel.coeFn_zero"],
 ["simpVarHead", "ProbabilityTheory.kernel.coe_finset_sum"],
 ["simpVarHead", "ProbabilityTheory.kernel.const_apply"],
 ["simpVarHead", "ProbabilityTheory.kernel.prodMkLeft_apply"],
 ["simpVarHead", "ProbabilityTheory.kernel.prodMkRight_apply"],
 ["simpVarHead", "ProbabilityTheory.kernel.swapLeft_apply"],
 ["simpVarHead", "ProbabilityTheory.kernel.zero_apply"],
 ["simpVarHead", "Profinite.NobelingProof.πs'_apply"],
 ["simpVarHead", "Profinite.NobelingProof.πs_apply"],
 ["simpVarHead", "Real.Angle.coe_coeHom"],
 ["simpVarHead", "Real.Angle.sign_toReal"],
 ["simpVarHead", "SemiNormedGroupCat.completion.incl_apply"],
 ["simpVarHead", "SlashInvariantForm.SlashInvariantFormClass.coe_coe"],
 ["simpVarHead", "UniformSpace.Completion.coe_toComplL"],
 ["simpVarHead", "UniformSpace.Completion.coe_toComplₗᵢ"],
 ["simpVarHead", "WeakDual.CharacterSpace.compContinuousMap_apply"],
 ["simpVarHead", "WeakDual.CharacterSpace.continuousMapEval_apply_apply"],
 ["simpVarHead", "WeakDual.CharacterSpace.equivAlgHom_coe"],
 ["simpVarHead", "WeakDual.CharacterSpace.equivAlgHom_symm_coe"],
 ["simpVarHead",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_apply_toFun"],
 ["simpVarHead",
  "ZeroAtInftyContinuousMap.ContinuousMap.liftZeroAtInfty_symm_apply"],
 ["simpVarHead", "Zspan.quotientEquiv.symm_apply"],
 ["simpVarHead", "MeasureTheory.L1.SimpleFunc.setToL1SCLM_zero_left"],
 ["simpVarHead",
  "NumberField.Units.dirichletUnitTheorem.logEmbedding_component"],
 ["structureInType", "DilationClass"],
 ["structureInType", "SlashInvariantFormClass"],
 ["synTaut", "AddSalemSpencer.of_image"],
 ["synTaut", "DilationClass.mk"],
 ["synTaut", "MulSalemSpencer.of_image"],
 ["synTaut", "SlashInvariantFormClass.mk"],
 ["unusedArguments", "AddSalemSpencer.of_image"],
 ["unusedArguments", "Combinator.K"],
 ["unusedArguments", "Decidable.not_or_iff_and_not"],
 ["unusedArguments", "MulSalemSpencer.of_image"]]
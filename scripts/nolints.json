[
 ["docBlame", "Lean.Elab.Command.irredDefLemma"],
 ["docBlame", "Lean.Export.Alloc.map"],
 ["docBlame", "Lean.Export.Alloc.next"],
 ["docBlame", "Lean.Export.OfState.get"],
 ["docBlame", "Lean.Export.OfState.modify"],
 ["docBlame", "Lean.Export.State.defs"],
 ["docBlame", "Lean.Export.State.exprs"],
 ["docBlame", "Lean.Export.State.levels"],
 ["docBlame", "Lean.Export.State.names"],
 ["docBlame", "Lean.Export.State.stk"],
 ["docBlame", "Lean.Export.exportDef.axdef"],
 ["docBlame", "Lean.Export.exportDef.defn"],
 ["docBlame", "Lean.Export.exportDef.ind"],
 ["docBlame", "Lean.Export.exportDef.indbody"],
 ["docBlame", "Lean.Export.exportDef.insert"],
 ["docBlame", "Lean.MVarId.congrN!.go"],
 ["docBlame", "Lean.MVarId.congrN!.post"],
 ["docBlame", "Lean.MVarId.congrSimp?.forSide"],
 ["docBlame", "Lean.MVarId.introsClean.eqImpOfIffImp"],
 ["docBlame", "Lean.MVarId.introsClean.heqImpOfEqImp"],
 ["docBlame", "Lean.MVarId.introsClean.isTrivialType"],
 ["docBlame", "Lean.MVarId.introsClean.loop"],
 ["docBlame", "Lean.MVarId.smartHCongr?.forSide"],
 ["docBlame", "Lean.MVarId.smartHCongr?.loop"],
 ["docBlame", "Lean.MVarId.userCongr?.forSide"],
 ["docBlame", "Lean.Parser.Attr.higherOrder"],
 ["docBlame", "Lean.Parser.Tactic.applyCongr"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintype"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintypeInstanceHandler"],
 ["docBlame", "Mathlib.Meta.NormNum.proveNatFibAux"],
 ["docBlame", "Mathlib.Tactic.CC.ACTodoEntry"],
 ["docBlame", "Mathlib.Tactic.CC.CCPropagationHandler"],
 ["docBlame", "Mathlib.Tactic.CC.CongruencesKey"],
 ["docBlame", "Mathlib.Tactic.CC.SymmCongruencesKey"],
 ["docBlame", "Mathlib.Tactic.CC.TodoEntry"],
 ["docBlame", "Mathlib.Tactic.Conv.convLHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRun_conv_"],
 ["docBlame", "Mathlib.Tactic.ElimApp.evalNames"],
 ["docBlame", "Mathlib.Tactic.Find.«command#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.findDeclsPerHead"],
 ["docBlame", "Mathlib.Tactic.Find.findType"],
 ["docBlame", "Mathlib.Tactic.Find.«tactic#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.tacticFind"],
 ["docBlame", "Mathlib.Tactic.GCongr.exact"],
 ["docBlame", "Mathlib.Tactic.GCongr.tacticGcongr_discharger"],
 ["docBlame", "Mathlib.Tactic.Propose.proposeLemmas"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeSquarePresenter"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeTrianglePresenter"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.intro1PStep"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.introsDep"],
 ["docBlame", "MeasureTheory.Measure.FiniteSpanningSetsIn.set"],
 ["docBlame", "Module.End.Eigenvalues.val"],
 ["docBlame", "Order.Ideal.PrimePair.F"],
 ["docBlame", "Order.Ideal.PrimePair.I"],
 ["docBlame", "SetTheory.PGame.State.l"],
 ["docBlame", "SetTheory.PGame.State.r"],
 ["docBlame", "SetTheory.PGame.State.turnBound"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s'"],
 ["docBlame", "Tactic.Elementwise.elementwiseExpr.mkHomElementwise"],
 ["docBlame", "TopCat.GlueData.MkCore.J"],
 ["docBlame", "TopCat.GlueData.MkCore.U"],
 ["docBlame", "TopCat.GlueData.MkCore.V"],
 ["docBlame", "TopCat.GlueData.MkCore.t"],
 ["docBlame", "TopCat.Presheaf.SubmonoidPresheaf.obj"],
 ["docBlame", "FirstOrder.Language.Theory.CompleteType.toTheory"],
 ["docBlame", "FirstOrder.Language.Theory.ModelType.Carrier"],
 ["docBlame", "Lean.Meta.mkRichHCongr.doubleTelescope.loop"],
 ["docBlame", "Lean.Meta.mkRichHCongr.withNewEqs.loop"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders'.isVariableAlias"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.extendScope"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.process"],
 ["docBlame", "Mathlib.Command.Variable.variable?.checkRedundant"],
 ["docBlame", "Mathlib.Command.Variable.variable?.maxSteps"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.aux"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.core"],
 ["docBlame", "Mathlib.Meta.NormNum.evalNatPrime.core"],
 ["docBlame", "Mathlib.Tactic.CC.CCPropagationHandler.propagated"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.getNumROccs"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.getVarWithLeastLHSOccs"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.getVarWithLeastRHSOccs"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppAC"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppACApps"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppACDecl"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppACDecls"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppACExpr"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppACR"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppParentOccs"],
 ["docBlame", "Mathlib.Tactic.CC.CCState.ppParentOccsAux"],
 ["docBlame", "Mathlib.Tactic.CC.CCStructure.cache"],
 ["docBlame", "Mathlib.Tactic.CC.CCStructure.normalizer"],
 ["docBlame", "Mathlib.Tactic.CC.CCStructure.phandler"],
 ["docBlame", "Mathlib.Tactic.CC.ParentOcc.expr"],
 ["docBlame", "Mathlib.Tactic.CC.SymmCongruencesKey.h₁"],
 ["docBlame", "Mathlib.Tactic.CC.SymmCongruencesKey.h₂"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftHom.lift"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftObj.lift"],
 ["docBlame", "Mathlib.Tactic.GCongr.ForwardExt.eval"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.declName"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.mainSubgoals"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.varyingArgs"],
 ["docBlame", "Mathlib.Tactic.Monotonicity.mono.side"],
 ["docBlame", "Mathlib.Tactic.Sat.buildReify.mkPS"],
 ["docBlame", "Mathlib.Tactic.Says.says.no_verify_in_CI"],
 ["docBlame", "Mathlib.Tactic.Says.says.verify"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.ratArm"],
  ["unusedArguments", "Combinator.K"]]

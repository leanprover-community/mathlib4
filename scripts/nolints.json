[["docBlame", "AndThen'"],
 ["docBlame", "AsFalse"],
 ["docBlame", "AsTrue"],
 ["docBlame", "Associative"],
 ["docBlame", "BinTree"],
 ["docBlame", "CommRing"],
 ["docBlame", "CommSemiring"],
 ["docBlame", "Commutative"],
 ["docBlame", "Computable"],
 ["docBlame", "Computable₂"],
 ["docBlame", "CongrMetaM"],
 ["docBlame", "CongrState"],
 ["docBlame", "Cont"],
 ["docBlame", "ContT"],
 ["docBlame", "ExistsUnique"],
 ["docBlame", "Implies"],
 ["docBlame", "IsDecEq"],
 ["docBlame", "IsDecRefl"],
 ["docBlame", "IsIdempotent"],
 ["docBlame", "IsLeftCancel"],
 ["docBlame", "IsRightCancel"],
 ["docBlame", "IsSymmOp"],
 ["docBlame", "LawfulMonadCont"],
 ["docBlame", "LeftCancelative"],
 ["docBlame", "LeftCommutative"],
 ["docBlame", "LeftDistributive"],
 ["docBlame", "LeftIdentity"],
 ["docBlame", "MonadCont"],
 ["docBlame", "MonadWriter"],
 ["docBlame", "NonContradictory"],
 ["docBlame", "One"],
 ["docBlame", "Partrec"],
 ["docBlame", "Partrec₂"],
 ["docBlame", "RightCancelative"],
 ["docBlame", "RightCommutative"],
 ["docBlame", "RightDistributive"],
 ["docBlame", "RightIdentity"],
 ["docBlame", "RightInverse"],
 ["docBlame", "UFModel"],
 ["docBlame", "UFNode"],
 ["docBlame", "UnionFind"],
 ["docBlame", "Writer"],
 ["docBlame", "WriterT"],
 ["docBlame", "Xor'"],
 ["docBlame", "Zero"],
 ["docBlame", "bit0"],
 ["docBlame", "bit1"],
 ["docBlame", "cancelDenominators"],
 ["docBlame", "cancelDenominatorsAt"],
 ["docBlame", "cancelDenominatorsTarget"],
 ["docBlame", "condM"],
 ["docBlame", "decidableEq_of_bool_pred"],
 ["docBlame", "eqns"],
 ["docBlame", "eqnsAttribute"],
 ["docBlame", "joinM"],
 ["docBlame", "measurability!"],
 ["docBlame", "measurability!?"],
 ["docBlame", "tacticCancel_denoms_"],
 ["docBlame", "tacticUse_finite_instance"],
 ["docBlame", "«term_+ᵥ_»"],
 ["docBlame", "«term_-ᵥ_»"],
 ["docBlame", "«term_[Λ^_]→L[_]_»"],
 ["docBlame", "«term_ˢʸᵐ»"],
 ["docBlame", "«term_•_»"],
 ["docBlame", "«term_→A[_]_»"],
 ["docBlame", "«term_→CO_»"],
 ["docBlame", "«term_→Co_»"],
 ["docBlame", "«term_→ᵈ_»"],
 ["docBlame", "«term_≃ᵃⁱ[_]_»"],
 ["docBlame", "«term_≃ᵈ_»"],
 ["docBlame", "«term_≡_[SMOD_]»"],
 ["docBlame", "«term_⊻_»"],
 ["docBlame", "«term_⊼_»"],
 ["docBlame", "termℤ"],
 ["docBlame", "«termℤ√_»"],
 ["docBlame", "«term∃!_,_»"],
 ["docBlame", "«term∫_In_.._,_»"],
 ["docBlame", "«term∫_In_.._,_∂_»"],
 ["docBlame", "«term∮_InC(_,_),_»"],
 ["docBlame", "«term⨍_In_.._,_»"],
 ["docBlame", "timeCmd"],
 ["docBlame", "when"],
 ["docBlame", "whenM"],
 ["docBlame", "Action.V"],
 ["docBlame", "Action.ρ"],
 ["docBlame", "AddGroupWithOne.zsmul"],
 ["docBlame", "AddMagmaCat.forget_obj_eq_coe"],
 ["docBlame", "AddMonoidAlgebra.mapDomain"],
 ["docBlame", "AddMonoidAlgebra.single"],
 ["docBlame", "AddSemigroupCat.forget_obj_eq_coe"],
 ["docBlame", "AffineBasis.toFun"],
 ["docBlame", "AffineEquiv.linear"],
 ["docBlame", "AffineMap.linear"],
 ["docBlame", "AffineMap.toFun"],
 ["docBlame", "AlgHom.toAddMonoidHom'"],
 ["docBlame", "AlgHom.toMonoidHom'"],
 ["docBlame", "AlgebraCat.carrier"],
 ["docBlame", "AlgebraicGeometry.«termProj|_»"],
 ["docBlame", "AndThen'.andthen"],
 ["docBlame", "Bifunctor.bimap"],
 ["docBlame", "BilinForm.bilin"],
 ["docBlame", "Bimod.X"],
 ["docBlame", "Bimod.actLeft"],
 ["docBlame", "Bimod.actRight"],
 ["docBlame", "BinaryHeap.arr"],
 ["docBlame", "Bitraversable.bitraverse"],
 ["docBlame", "BoundedContinuousFunction.«term_→ᵇ_»"],
 ["docBlame", "BoundedRandom.randomR"],
 ["docBlame", "BumpCovering.toFun"],
 ["docBlame", "ByteSlice.arr"],
 ["docBlame", "ByteSlice.len"],
 ["docBlame", "ByteSlice.off"],
 ["docBlame", "ByteSliceT.arr"],
 ["docBlame", "ByteSliceT.off"],
 ["docBlame", "CFilter.f"],
 ["docBlame", "CFilter.inf"],
 ["docBlame", "CFilter.pt"],
 ["docBlame", "CancelDenoms.synthesizeUsingNormNum"],
 ["docBlame", "Cardinal.term𝔠"],
 ["docBlame", "CategoryTheory.«term_⟶[_]_»"],
 ["docBlame", "ChangeOfRings.«term_⊗ₜ[_,_]_»"],
 ["docBlame", "ChartedSpaceCore.atlas"],
 ["docBlame", "ChartedSpaceCore.chartAt"],
 ["docBlame", "Combinator.I"],
 ["docBlame", "Combinator.K"],
 ["docBlame", "Combinator.S"],
 ["docBlame", "CommRingCat.forget_obj_eq_coe"],
 ["docBlame", "CommSemiRingCat.forget_obj_eq_coe"],
 ["docBlame", "CompleteBooleanAlgebra.toCompleteAtomicBooleanAlgebra"],
 ["docBlame", "Complex.«term_×ℂ_»"],
 ["docBlame", "CompositionSeries.length"],
 ["docBlame", "CompositionSeries.series"],
 ["docBlame", "Computability.«term_∗»"],
 ["docBlame", "Computation.parallelRec"],
 ["docBlame", "Congr!.elabConfig"],
 ["docBlame", "ContDiffBump.rIn"],
 ["docBlame", "ContDiffBump.rOut"],
 ["docBlame", "ContDiffBumpBase.toFun"],
 ["docBlame", "ContMDiffSection.toFun"],
 ["docBlame", "ContT.map"],
 ["docBlame", "ContT.monadLift"],
 ["docBlame", "ContT.run"],
 ["docBlame", "ContT.withContT"],
 ["docBlame", "ContinuousMap.«term_≃ₕ_»"],
 ["docBlame", "Convex.«term[_-[_]_]»"],
 ["docBlame", "ConvexBody.carrier"],
 ["docBlame", "ConvexCone.carrier"],
 ["docBlame", "Ctop.f"],
 ["docBlame", "Ctop.inter"],
 ["docBlame", "Ctop.top"],
 ["docBlame", "Cubic.a"],
 ["docBlame", "Cubic.b"],
 ["docBlame", "Cubic.c"],
 ["docBlame", "Cubic.d"],
 ["docBlame", "Decidable.recOn_false"],
 ["docBlame", "Decidable.recOn_true"],
 ["docBlame", "Dilation.toFun"],
 ["docBlame", "DilationEquiv.toDilation"],
 ["docBlame", "Dioph.«term&_»"],
 ["docBlame", "Dioph.«termD&_»"],
 ["docBlame", "Dioph.«termD._»"],
 ["docBlame", "Dioph.«termD∃»"],
 ["docBlame", "Dioph.«termD≡»"],
 ["docBlame", "Dioph.«term_D%_»"],
 ["docBlame", "Dioph.«term_D*_»"],
 ["docBlame", "Dioph.«term_D+_»"],
 ["docBlame", "Dioph.«term_D-_»"],
 ["docBlame", "Dioph.«term_D/_»"],
 ["docBlame", "Dioph.«term_D<_»"],
 ["docBlame", "Dioph.«term_D=_»"],
 ["docBlame", "Dioph.«term_D∣_»"],
 ["docBlame", "Dioph.«term_D∧_»"],
 ["docBlame", "Dioph.«term_D∨_»"],
 ["docBlame", "Dioph.«term_D≠_»"],
 ["docBlame", "Dioph.«term_D≤_»"],
 ["docBlame", "Dist.dist"],
 ["docBlame", "DivisibleBy.div"],
 ["docBlame", "EDist.edist"],
 ["docBlame", "ENorm.toFun"],
 ["docBlame", "EqualCharZero.pnatCast"],
 ["docBlame", "Equiv.invFun"],
 ["docBlame", "Equiv.toFun"],
 ["docBlame", "EsakiaHom.toPseudoEpimorphism"],
 ["docBlame", "EuclideanDomain.wellFoundedRelation"],
 ["docBlame", "EuclideanGeometry.o"],
 ["docBlame", "ExceptT.callCC"],
 ["docBlame", "ExceptT.mkLabel"],
 ["docBlame", "FBinopElab.elabBinOp"],
 ["docBlame", "FiberBundle.trivializationAt'"],
 ["docBlame", "FiberBundle.trivializationAtlas'"],
 ["docBlame", "FiberBundleCore.baseSet"],
 ["docBlame", "FiberBundleCore.coordChange"],
 ["docBlame", "FiberBundleCore.indexAt"],
 ["docBlame", "FiberPrebundle.pretrivializationAt"],
 ["docBlame", "FiberPrebundle.pretrivializationAtlas"],
 ["docBlame", "FinBddDistLat.toBddDistLat"],
 ["docBlame", "FinBoolAlg.toBoolAlg"],
 ["docBlame", "FinPartOrd.toPartOrd"],
 ["docBlame", "FirstOrder.«term&_»"],
 ["docBlame", "FirstOrder.«term_='_»"],
 ["docBlame", "FirstOrder.«term_⇔_»"],
 ["docBlame", "FirstOrder.«term_⟹_»"],
 ["docBlame", "FirstOrder.«term∀'_»"],
 ["docBlame", "FirstOrder.«term∃'_»"],
 ["docBlame", "FirstOrder.«term∼_»"],
 ["docBlame", "Flow.toFun"],
 ["docBlame", "FourierTransform.«term_[_]»"],
 ["docBlame", "FourierTransform.term𝓕"],
 ["docBlame", "Function.app"],
 ["docBlame", "Function.compLeft"],
 ["docBlame", "Function.compRight"],
 ["docBlame", "Function.swap"],
 ["docBlame", "Function.«term_∘'_»"],
 ["docBlame", "Function.«term↿_»"],
 ["docBlame", "HSpace.e"],
 ["docBlame", "HSpace.eHmul"],
 ["docBlame", "HSpace.hmul"],
 ["docBlame", "HSpace.hmulE"],
 ["docBlame", "HSpaces.«term_⋀_»"],
 ["docBlame", "HahnSeries.coeff"],
 ["docBlame", "HasInfs.infs"],
 ["docBlame", "HasSups.sups"],
 ["docBlame", "Holor.assocLeft"],
 ["docBlame", "Holor.assocRight"],
 ["docBlame", "HolorIndex.assocLeft"],
 ["docBlame", "HolorIndex.assocRight"],
 ["docBlame", "HolorIndex.drop"],
 ["docBlame", "HolorIndex.take"],
 ["docBlame", "HomologicalComplex.X"],
 ["docBlame", "HomologicalComplex.d"],
 ["docBlame", "Homotopy.hom"],
 ["docBlame", "HomotopyEquiv.hom"],
 ["docBlame", "HomotopyEquiv.homotopyHomInvId"],
 ["docBlame", "HomotopyEquiv.homotopyInvHomId"],
 ["docBlame", "HomotopyEquiv.inv"],
 ["docBlame", "IO.runRandWith"],
 ["docBlame", "IdemCommSemiring.bot"],
 ["docBlame", "IdemSemiring.bot"],
 ["docBlame", "ImplicitFunctionData.leftDeriv"],
 ["docBlame", "ImplicitFunctionData.leftFun"],
 ["docBlame", "ImplicitFunctionData.pt"],
 ["docBlame", "ImplicitFunctionData.rightDeriv"],
 ["docBlame", "ImplicitFunctionData.rightFun"],
 ["docBlame", "InnerProduct.«term_†»"],
 ["docBlame", "Int.decNonneg"],
 ["docBlame", "IntermediateField.delabAdjoinNotation"],
 ["docBlame", "IsAdjoinRoot.map"],
 ["docBlame", "IsROrC.im"],
 ["docBlame", "IsROrC.re"],
 ["docBlame", "Isocrystal.«termK(_,_)»"],
 ["docBlame", "Isocrystal.«term_→ᶠˡ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_→ᶠⁱ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_≃ᶠˡ[_,_]_»"],
 ["docBlame", "Isocrystal.«term_≃ᶠⁱ[_,_]_»"],
 ["docBlame", "Isocrystal.«termΦ(_,_)»"],
 ["docBlame", "Isocrystal.«termφ(_,_)»"],
 ["docBlame", "JordanHolderLattice.IsMaximal"],
 ["docBlame", "JordanHolderLattice.Iso"],
 ["docBlame", "KStar.kstar"],
 ["docBlame", "Kronecker.«term_⊗ₖ_»"],
 ["docBlame", "Kronecker.«term_⊗ₖₜ[_]_»"],
 ["docBlame", "Kronecker.«term_⊗ₖₜ_»"],
 ["docBlame",
  "LaurentSeries.instMonoidWithZeroHahnSeriesIntToPartialOrderToStrictOrderedRingToLinearOrderedRingLinearOrderedCommRingToZeroToCommMonoidWithZeroToCommGroupWithZeroToSemifield"],
 ["docBlame", "Lean.ExportM"],
 ["docBlame", "LieGroup.«term𝑳»"],
 ["docBlame", "LieGroup.«term𝑹»"],
 ["docBlame", "LinearOrderedAddCommGroupWithTop.zsmul"],
 ["docBlame", "LinearPMap.domain"],
 ["docBlame", "LinearPMap.sSup"],
 ["docBlame", "LinearPMap.«term_†»"],
 ["docBlame", "LinearPMap.toFun"],
 ["docBlame", "LinearPMap.toFun'"],
 ["docBlame", "LinearRecurrence.coeffs"],
 ["docBlame", "LinearRecurrence.order"],
 ["docBlame", "List.card"],
 ["docBlame", "List.equiv"],
 ["docBlame", "List.inj_on"],
 ["docBlame", "List.remove"],
 ["docBlame", "MagmaCat.forget_obj_eq_coe"],
 ["docBlame", "Manifold.«term_≫_»"],
 ["docBlame", "Manifold.«term_≫ₕ_»"],
 ["docBlame", "Manifold.«term∞»"],
 ["docBlame", "Manifold.«term𝒅»"],
 ["docBlame", "Manifold.«term𝒅ₕ»"],
 ["docBlame", "Manifold.term𝓡_"],
 ["docBlame", "Manifold.«term𝓡∂_»"],
 ["docBlame", "Mathlib.evalExtractLet"],
 ["docBlame", "Matrix.termGL"],
 ["docBlame", "Matrix.«term_×₃_»"],
 ["docBlame", "Matrix.«term_⊕ᵥ_»"],
 ["docBlame", "Matrix.«term_⊙_»"],
 ["docBlame", "MaximalSpectrum.asIdeal"],
 ["docBlame", "MeasureTheory.«term_=ᵐ[_]_»"],
 ["docBlame", "MeasureTheory.«term_[_|_]»"],
 ["docBlame", "MeasureTheory.«term_→₁[_]_»"],
 ["docBlame", "MeasureTheory.«term_→₂[_]_»"],
 ["docBlame", "MeasureTheory.«term_≤[_]_»"],
 ["docBlame", "MeasureTheory.«term_≤ᵐ[_]_»"],
 ["docBlame", "MeasureTheory.«termμH[_]»"],
 ["docBlame", "MeasureTheory.«term∀ᵐ_,_»"],
 ["docBlame", "MeasureTheory.«term∀ᵐ_∂_,_»"],
 ["docBlame", "MeasureTheory.«term∃ᵐ_,_»"],
 ["docBlame", "MeasureTheory.«term∃ᵐ_∂_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_,_∂_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_In_,_»"],
 ["docBlame", "MeasureTheory.«term⨍⁻_In_,_∂_»"],
 ["docBlame", "Mod_.X"],
 ["docBlame", "Mod_.act"],
 ["docBlame", "ModularForm.«term_∣[_;_]_»"],
 ["docBlame", "ModularForm.«term_∣[_]_»"],
 ["docBlame", "Mon_.X"],
 ["docBlame", "Mon_.mul"],
 ["docBlame", "Mon_.one"],
 ["docBlame", "Monad.cond"],
 ["docBlame", "Monad.filter"],
 ["docBlame", "Monad.foldl"],
 ["docBlame", "Monad.join"],
 ["docBlame", "Monad.mapM"],
 ["docBlame", "Monad.mapM'"],
 ["docBlame", "Monad.sequence"],
 ["docBlame", "Monad.sequence'"],
 ["docBlame", "Monad.unlessb"],
 ["docBlame", "Monad.whenb"],
 ["docBlame", "MonadCont.Label"],
 ["docBlame", "MonadCont.callCC"],
 ["docBlame", "MonadCont.goto"],
 ["docBlame", "MonadWriter.listen"],
 ["docBlame", "MonadWriter.pass"],
 ["docBlame", "MonadWriter.tell"],
 ["docBlame", "MonadWriterAdapter.adaptWriter"],
 ["docBlame", "Monoid.Foldr"],
 ["docBlame", "Monoid.foldlM"],
 ["docBlame", "Monoid.foldrM"],
 ["docBlame", "MonoidAlgebra.mapDomain"],
 ["docBlame", "MonoidAlgebra.single"],
 ["docBlame", "MvPFunctor.wpRec"],
 ["docBlame", "MvQPF.P"],
 ["docBlame", "MvQPF.abs"],
 ["docBlame", "MvQPF.repr"],
 ["docBlame", "NFA.accept"],
 ["docBlame", "NFA.start"],
 ["docBlame", "NFA.step"],
 ["docBlame", "NNDist.nndist"],
 ["docBlame", "NNRat.«termℚ≥0»"],
 ["docBlame", "NNReal.«termℝ≥0»"],
 ["docBlame", "Nat.Partrec"],
 ["docBlame", "Nat.discriminate"],
 ["docBlame", "Nat.findX"],
 ["docBlame", "Nat.ltByCases"],
 ["docBlame", "Nat.ltGeByCases"],
 ["docBlame", "Nat.prio"],
 ["docBlame", "Nat.rfind"],
 ["docBlame", "Nat.rfindOpt"],
 ["docBlame", "Nat.rfindX"],
 ["docBlame", "Nat.subInduction"],
 ["docBlame", "Nat.«termOrd_compl[_]_»"],
 ["docBlame", "Nat.«termOrd_proj[_]_»"],
 ["docBlame", "Nat.twoStepInduction"],
 ["docBlame", "NumberTheorySymbols.«termJ(_|_)»"],
 ["docBlame", "One.one"],
 ["docBlame", "Option.getDM'"],
 ["docBlame", "OptionT.callCC"],
 ["docBlame", "OptionT.mkLabel"],
 ["docBlame", "OrthonormalBasis.repr"],
 ["docBlame", "PartitionOfUnity.toFun"],
 ["docBlame", "PicardLindelof.C"],
 ["docBlame", "PicardLindelof.L"],
 ["docBlame", "PicardLindelof.R"],
 ["docBlame", "PicardLindelof.tMax"],
 ["docBlame", "PicardLindelof.tMin"],
 ["docBlame", "PicardLindelof.toFun"],
 ["docBlame", "PicardLindelof.t₀"],
 ["docBlame", "PicardLindelof.x₀"],
 ["docBlame", "Polynomial.quotientSpanXSubCAlgEquivAux1"],
 ["docBlame", "Polynomial.quotientSpanXSubCAlgEquivAux2"],
 ["docBlame", "Polynomial.toFinsupp"],
 ["docBlame", "PowerBasis.basis"],
 ["docBlame", "PowerBasis.dim"],
 ["docBlame", "PowerBasis.gen"],
 ["docBlame", "Pregroupoid.property"],
 ["docBlame", "PresheafOfModules.presheaf"],
 ["docBlame", "Pretrivialization.baseSet"],
 ["docBlame", "PrimeSpectrum.asIdeal"],
 ["docBlame", "ProbabilityTheory.«termEVar[_]»"],
 ["docBlame", "ProbabilityTheory.«termVar[_]»"],
 ["docBlame", "ProbabilityTheory.«term_=ₐₛ_»"],
 ["docBlame", "ProbabilityTheory.«term_[_]»"],
 ["docBlame", "ProbabilityTheory.«term_×ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_∘ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_≤ₐₛ_»"],
 ["docBlame", "ProbabilityTheory.«term_⊗ₖ_»"],
 ["docBlame", "ProbabilityTheory.«term_⟦_|_⟧»"],
 ["docBlame", "ProbabilityTheory.termℙ"],
 ["docBlame", "ProbabilityTheory.«term∂_/∂_»"],
 ["docBlame", "ProbabilityTheory.«term𝔼[_]»"],
 ["docBlame", "ProbabilityTheory.«term𝔼[_|_]»"],
 ["docBlame", "ProjectiveSpectrum.asHomogeneousIdeal"],
 ["docBlame", "PseudoMetricSpace.edist"],
 ["docBlame", "QPF.P"],
 ["docBlame", "QPF.abs"],
 ["docBlame", "QPF.repr"],
 ["docBlame", "QuadraticForm.toFun"],
 ["docBlame", "Quaternion.«termℍ[_]»"],
 ["docBlame", "QuaternionAlgebra.imI"],
 ["docBlame", "QuaternionAlgebra.imJ"],
 ["docBlame", "QuaternionAlgebra.imK"],
 ["docBlame", "Random.randBool"],
 ["docBlame", "Random.randFin"],
 ["docBlame", "Random.random"],
 ["docBlame", "RatFunc.toFractionRing"],
 ["docBlame", "ReaderT.callCC"],
 ["docBlame", "ReaderT.mk"],
 ["docBlame", "ReaderT.mkLabel"],
 ["docBlame", "Ring.zsmul"],
 ["docBlame", "RingCat.forget_obj_eq_coe"],
 ["docBlame", "RingQuot.preLift"],
 ["docBlame", "RingQuot.preLiftAlgHom"],
 ["docBlame", "RingQuot.toQuot"],
 ["docBlame", "RootableBy.root"],
 ["docBlame", "SchwartzMap.toFun"],
 ["docBlame", "SchwartzSpace.«term𝓢(_,_)»"],
 ["docBlame", "SemiRingCat.forget_obj_eq_coe"],
 ["docBlame", "SemigroupCat.forget_obj_eq_coe"],
 ["docBlame", "Set.«term{_|_}»"],
 ["docBlame", "Shrink.rec"],
 ["docBlame", "Simplicial.«termΛ[_,_]»"],
 ["docBlame", "Simplicial.«term∂Δ[_]»"],
 ["docBlame", "SlashAction.map"],
 ["docBlame", "SlashInvariantForm.toFun"],
 ["docBlame", "SlimCheck.NamedBinder"],
 ["docBlame", "SlimCheck.«command#test_»"],
 ["docBlame", "StarAlgEquiv.restrictScalars"],
 ["docBlame", "StarAlgHom.restrictScalars"],
 ["docBlame", "StateT.callCC"],
 ["docBlame", "StateT.mk"],
 ["docBlame", "StateT.mkLabel"],
 ["docBlame", "StieltjesFunction.toFun"],
 ["docBlame", "Stream'.corec"],
 ["docBlame", "Stream'.corec'"],
 ["docBlame", "Stream'.corecOn"],
 ["docBlame", "Stream'.«term_++ₛ_»"],
 ["docBlame", "Stream'.«term_::_»"],
 ["docBlame", "Stream'.«term_⊛_»"],
 ["docBlame", "Stream'.«term_⋈_»"],
 ["docBlame", "Stream'.unfolds"],
 ["docBlame", "StrictWeakOrder.Equiv"],
 ["docBlame", "StrictWeakOrder.«term_≈[_]_»"],
 ["docBlame", "StructureGroupoid.members"],
 ["docBlame", "SubNegMonoid.zsmul"],
 ["docBlame", "Submodule.«term_∙_»"],
 ["docBlame", "Topology.«termI^_»"],
 ["docBlame", "Topology.termπ_"],
 ["docBlame", "Traversable.foldMap"],
 ["docBlame", "Traversable.foldl"],
 ["docBlame", "Traversable.foldlm"],
 ["docBlame", "Traversable.foldr"],
 ["docBlame", "Traversable.foldrm"],
 ["docBlame", "Traversable.length"],
 ["docBlame", "Traversable.mapFold"],
 ["docBlame", "Tree.«term_△_»"],
 ["docBlame", "Tree.unitRecOn"],
 ["docBlame", "Trivialization.baseSet"],
 ["docBlame", "UFModel.Agrees"],
 ["docBlame", "UFModel.Models"],
 ["docBlame", "UFModel.empty"],
 ["docBlame", "UFModel.parent"],
 ["docBlame", "UFModel.push"],
 ["docBlame", "UFModel.rank"],
 ["docBlame", "UFModel.setParent"],
 ["docBlame", "UFModel.setParentBump"],
 ["docBlame", "UFNode.parent"],
 ["docBlame", "UFNode.rank"],
 ["docBlame", "UFNode.value"],
 ["docBlame", "ULiftable.congr"],
 ["docBlame", "UniformFun.phi"],
 ["docBlame", "UnionFind.arr"],
 ["docBlame", "UnionFind.empty"],
 ["docBlame", "UnionFind.find"],
 ["docBlame", "UnionFind.findAux"],
 ["docBlame", "UnionFind.link"],
 ["docBlame", "UnionFind.mkEmpty"],
 ["docBlame", "UnionFind.push"],
 ["docBlame", "UnionFind.rank"],
 ["docBlame", "UnionFind.rankMax"],
 ["docBlame", "UnionFind.rankMaxAux"],
 ["docBlame", "UnionFind.size"],
 ["docBlame", "UnionFind.union"],
 ["docBlame", "UnivLE.witness"],
 ["docBlame", "UpperHalfPlane.coe'"],
 ["docBlame", "UpperHalfPlane.termℍ"],
 ["docBlame", "Valued.v"],
 ["docBlame", "Vector3.unexpandCons"],
 ["docBlame", "Vector3.unexpandNil"],
 ["docBlame", "VectorBundleCore.baseSet"],
 ["docBlame", "VectorBundleCore.coordChange"],
 ["docBlame", "VectorBundleCore.indexAt"],
 ["docBlame", "VectorPrebundle.pretrivializationAt"],
 ["docBlame", "VectorPrebundle.pretrivializationAtlas"],
 ["docBlame", "WithIdeal.i"],
 ["docBlame",
  "WithZeroTopology.instHasContinuousInv₀ToZeroToLinearOrderedCommMonoidWithZeroToInvTopologicalSpace"],
 ["docBlame", "WriterT.adapt"],
 ["docBlame", "WriterT.callCC"],
 ["docBlame", "WriterT.callCC'"],
 ["docBlame", "WriterT.mk"],
 ["docBlame", "WriterT.mkLabel"],
 ["docBlame", "WriterT.mkLabel'"],
 ["docBlame", "WriterT.run"],
 ["docBlame", "WriterT.runThe"],
 ["docBlame", "Zero.zero"],
 ["docBlame", "Zsqrtd.im"],
 ["docBlame", "Zsqrtd.re"],
 ["docBlame", "algebraMap.coeHTCT"],
 ["docBlame", "omegaLimit.«termω⁺»"],
 ["docBlame", "omegaLimit.«termω⁻»"],
 ["docBlame", "Action.Hom.hom"],
 ["docBlame", "Affine.Simplex.points"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.carrier"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.presheaf"],
 ["docBlame", "Array.cyclicPermute!.cyclicPermuteAux"],
 ["docBlame", "Array.heapSort.loop"],
 ["docBlame", "Besicovitch.BallPackage.c"],
 ["docBlame", "Besicovitch.BallPackage.r"],
 ["docBlame", "Besicovitch.BallPackage.r_bound"],
 ["docBlame", "Besicovitch.SatelliteConfig.c"],
 ["docBlame", "Besicovitch.SatelliteConfig.r"],
 ["docBlame", "Besicovitch.TauPackage.τ"],
 ["docBlame", "Bimod.Hom.hom"],
 ["docBlame", "BinaryHeap.mkHeap.loop"],
 ["docBlame", "BoxIntegral.Box.lower"],
 ["docBlame", "BoxIntegral.Box.toSet"],
 ["docBlame", "BoxIntegral.Box.upper"],
 ["docBlame", "BoxIntegral.Box.withBotToSet"],
 ["docBlame", "BoxIntegral.BoxAdditiveMap.toFun"],
 ["docBlame", "BoxIntegral.IntegrationParams.bDistortion"],
 ["docBlame", "BoxIntegral.IntegrationParams.bHenstock"],
 ["docBlame", "BoxIntegral.IntegrationParams.bRiemann"],
 ["docBlame", "BoxIntegral.Prepartition.boxes"],
 ["docBlame", "BoxIntegral.TaggedPrepartition.tag"],
 ["docBlame", "Bundle.TotalSpace.mk'"],
 ["docBlame", "Bundle.TotalSpace.snd"],
 ["docBlame", "CategoryTheory.Bicategory.associator"],
 ["docBlame", "CategoryTheory.Bicategory.leftUnitor"],
 ["docBlame", "CategoryTheory.Bicategory.rightUnitor"],
 ["docBlame", "CategoryTheory.Bicategory.«term_▷_»"],
 ["docBlame", "CategoryTheory.Bicategory.«term_◁_»"],
 ["docBlame", "CategoryTheory.Bicategory.termα_"],
 ["docBlame", "CategoryTheory.Bicategory.«termλ_»"],
 ["docBlame", "CategoryTheory.Bicategory.termρ_"],
 ["docBlame", "CategoryTheory.Bicategory.whiskerLeft"],
 ["docBlame", "CategoryTheory.Bicategory.whiskerRight"],
 ["docBlame", "CategoryTheory.Comma.hom"],
 ["docBlame", "CategoryTheory.Comma.left"],
 ["docBlame", "CategoryTheory.Comma.right"],
 ["docBlame", "CategoryTheory.CommaMorphism.left"],
 ["docBlame", "CategoryTheory.CommaMorphism.right"],
 ["docBlame", "CategoryTheory.Comonad.δ'"],
 ["docBlame", "CategoryTheory.Comonad.ε'"],
 ["docBlame", "CategoryTheory.EnrichedCategory.Hom"],
 ["docBlame", "CategoryTheory.EnrichedCategory.comp"],
 ["docBlame", "CategoryTheory.EnrichedCategory.id"],
 ["docBlame", "CategoryTheory.EnrichedFunctor.map"],
 ["docBlame", "CategoryTheory.EnrichedFunctor.obj"],
 ["docBlame", "CategoryTheory.GlueData.J"],
 ["docBlame", "CategoryTheory.GlueData.U"],
 ["docBlame", "CategoryTheory.GlueData.V"],
 ["docBlame", "CategoryTheory.GlueData.f"],
 ["docBlame", "CategoryTheory.GlueData.t"],
 ["docBlame", "CategoryTheory.GlueData.t'"],
 ["docBlame", "CategoryTheory.GradedNatTrans.app"],
 ["docBlame",
  "CategoryTheory.GrothendieckTopology.sheafificationIsoPresheafToSheafCompSheafToPreasheaf"],
 ["docBlame", "CategoryTheory.HalfBraiding.β"],
 ["docBlame", "CategoryTheory.Mat_.X"],
 ["docBlame", "CategoryTheory.Mat_.ι"],
 ["docBlame", "CategoryTheory.Monad.CreatesColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.HasCoequalizerOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsReflexivePair"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.ReflectsColimitOfIsSplitPair"],
 ["docBlame", "CategoryTheory.Monad.η'"],
 ["docBlame", "CategoryTheory.Monad.μ'"],
 ["docBlame", "CategoryTheory.Presieve.yonedaFamilyOfElements_fromCocone"],
 ["docBlame", "CategoryTheory.Pretopology.coverings"],
 ["docBlame", "CategoryTheory.ProjectivePresentation.f"],
 ["docBlame", "CategoryTheory.ProjectivePresentation.p"],
 ["docBlame", "CategoryTheory.Subgroupoid.arrows"],
 ["docBlame", "CliffordAlgebra.EvenHom.bilin"],
 ["docBlame", "CochainComplex.MkStruct.X₀"],
 ["docBlame", "CochainComplex.MkStruct.X₁"],
 ["docBlame", "CochainComplex.MkStruct.X₂"],
 ["docBlame", "CochainComplex.MkStruct.d₀"],
 ["docBlame", "CochainComplex.MkStruct.d₁"],
 ["docBlame", "Computability.Encoding.decode"],
 ["docBlame", "Computability.Encoding.encode"],
 ["docBlame", "Computability.Encoding.Γ"],
 ["docBlame", "Computability.FinEncoding.ΓFin"],
 ["docBlame", "Computation.parallel.aux1"],
 ["docBlame", "Computation.parallel.aux2"],
 ["docBlame", "Configuration.HasLines.mkLine"],
 ["docBlame", "Configuration.HasPoints.mkPoint"],
 ["docBlame", "Configuration.ProjectivePlane.mkLine"],
 ["docBlame", "ContinuousLinearMap.NonlinearRightInverse.nnnorm"],
 ["docBlame", "ContinuousLinearMap.NonlinearRightInverse.toFun"],
 ["docBlame", "ContinuousMap.HomotopyEquiv.invFun"],
 ["docBlame", "ContinuousMap.HomotopyEquiv.toFun"],
 ["docBlame", "Ctop.Realizer.F"],
 ["docBlame", "Ctop.Realizer.σ"],
 ["docBlame", "DirectSum.Decomposition.decompose'"],
 ["docBlame", "DirectSum.GAlgebra.toFun"],
 ["docBlame", "Equiv.Perm.«termC[_,]»"],
 ["docBlame", "EuclideanGeometry.Sphere.center"],
 ["docBlame", "EuclideanGeometry.Sphere.radius"],
 ["docBlame", "FBinopElab.SRec.args"],
 ["docBlame", "FBinopElab.SRec.name"],
 ["docBlame", "Filter.Germ.const"],
 ["docBlame", "Filter.Germ.ofFun"],
 ["docBlame", "Filter.Realizer.F"],
 ["docBlame", "Filter.Realizer.σ"],
 ["docBlame", "FirstOrder.Language.«term_≃ᴸ_»"],
 ["docBlame", "GeneralizedContinuedFraction.IntFractPair.b"],
 ["docBlame", "GeneralizedContinuedFraction.IntFractPair.fr"],
 ["docBlame", "Geometry.SimplicialComplex.faces"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.Space"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.embed"],
 ["docBlame", "GromovHausdorff.AuxGluingStruct.metric"],
 ["docBlame", "HahnSeries.SummableFamily.toFun"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.deg"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.den"],
 ["docBlame", "HomogeneousLocalization.NumDenSameDeg.num"],
 ["docBlame", "HomologicalComplex.Hom.f"],
 ["docBlame", "Ideal.Filtration.N"],
 ["docBlame", "IntermediateField.delabAdjoinNotation.delabInsertArray"],
 ["docBlame", "IsDedekindDomain.HeightOneSpectrum.asIdeal"],
 ["docBlame", "Lean.Attr.substAttr"],
 ["docBlame", "Lean.Export.Alloc"],
 ["docBlame", "Lean.Export.Entry"],
 ["docBlame", "Lean.Export.OfState"],
 ["docBlame", "Lean.Export.State"],
 ["docBlame", "Lean.Export.alloc"],
 ["docBlame", "Lean.Export.biStr"],
 ["docBlame", "Lean.Export.exportDef"],
 ["docBlame", "Lean.Export.exportExpr"],
 ["docBlame", "Lean.Export.exportLevel"],
 ["docBlame", "Lean.Export.exportName"],
 ["docBlame", "Lean.Export.runExportM"],
 ["docBlame", "Lean.Expr.bvarIdx?"],
 ["docBlame", "Lean.Expr.getRevArg?"],
 ["docBlame", "Lean.Expr.modifyAppArg"],
 ["docBlame", "Lean.Expr.modifyAppArgM"],
 ["docBlame", "Lean.Expr.modifyRevArg"],
 ["docBlame", "Lean.MVarId.casesType"],
 ["docBlame", "Lean.MVarId.congrCore!"],
 ["docBlame", "Lean.Meta.checkTypeIsProp"],
 ["docBlame", "Lean.Meta.mkSimpTheoremCore"],
 ["docBlame", "Lean.Meta.preprocess"],
 ["docBlame", "Lean.Meta.shouldPreprocess"],
 ["docBlame", "Lean.Name.isBlackListed"],
 ["docBlame", "Lean.PHashSet.toList"],
 ["docBlame", "LocallyFinite.Realizer.bas"],
 ["docBlame", "LocallyFinite.Realizer.sets"],
 ["docBlame", "MLList.runCmd.put"],
 ["docBlame", "MLList.splitAtBecomesTrueM.aux"],
 ["docBlame", "Mathlib.Notation3.expandFoldl"],
 ["docBlame", "Mathlib.Notation3.expandFoldr"],
 ["docBlame", "Mathlib.Notation3.mkScopedMatcher"],
 ["docBlame", "Mathlib.Notation3.prettyPrintOpt"],
 ["docBlame", "Mathlib.ProjectionNotation.getPPCollapseStructureProjections"],
 ["docBlame", "Mathlib.Tactic.abstract"],
 ["docBlame", "Mathlib.Tactic.acMono"],
 ["docBlame", "Mathlib.Tactic.addHintTactic"],
 ["docBlame", "Mathlib.Tactic.addTacticDoc"],
 ["docBlame", "Mathlib.Tactic.applyField"],
 ["docBlame", "Mathlib.Tactic.applyNormed"],
 ["docBlame", "Mathlib.Tactic.assertInstance"],
 ["docBlame", "Mathlib.Tactic.assertNoInstance"],
 ["docBlame", "Mathlib.Tactic.assocRw"],
 ["docBlame", "Mathlib.Tactic.async"],
 ["docBlame", "Mathlib.Tactic.cases'"],
 ["docBlame", "Mathlib.Tactic.cases''"],
 ["docBlame", "Mathlib.Tactic.cc"],
 ["docBlame", "Mathlib.Tactic.clarify"],
 ["docBlame", "Mathlib.Tactic.compVal"],
 ["docBlame", "Mathlib.Tactic.computeDegreeLE"],
 ["docBlame", "Mathlib.Tactic.continue"],
 ["docBlame", "Mathlib.Tactic.decide!"],
 ["docBlame", "Mathlib.Tactic.defReplacer"],
 ["docBlame", "Mathlib.Tactic.deltaInstance"],
 ["docBlame", "Mathlib.Tactic.deriveElementwiseProof"],
 ["docBlame", "Mathlib.Tactic.deriveReassocProof"],
 ["docBlame", "Mathlib.Tactic.dsimpResult"],
 ["docBlame", "Mathlib.Tactic.elabConfig"],
 ["docBlame", "Mathlib.Tactic.elabVariables"],
 ["docBlame", "Mathlib.Tactic.elide"],
 ["docBlame", "Mathlib.Tactic.equivRw"],
 ["docBlame", "Mathlib.Tactic.equivRwType"],
 ["docBlame", "Mathlib.Tactic.evalIntrov"],
 ["docBlame", "Mathlib.Tactic.expandExists"],
 ["docBlame", "Mathlib.Tactic.extractGoal!"],
 ["docBlame", "Mathlib.Tactic.failIfSuccess?"],
 ["docBlame", "Mathlib.Tactic.field"],
 ["docBlame", "Mathlib.Tactic.finish"],
 ["docBlame", "Mathlib.Tactic.fixingClause"],
 ["docBlame", "Mathlib.Tactic.generalizes"],
 ["docBlame", "Mathlib.Tactic.generalizesArg"],
 ["docBlame", "Mathlib.Tactic.generalizingClause"],
 ["docBlame", "Mathlib.Tactic.guardProofTerm"],
 ["docBlame", "Mathlib.Tactic.guardTags"],
 ["docBlame", "Mathlib.Tactic.hGeneralize"],
 ["docBlame", "Mathlib.Tactic.hGeneralize!"],
 ["docBlame", "Mathlib.Tactic.haveField"],
 ["docBlame", "Mathlib.Tactic.include"],
 ["docBlame", "Mathlib.Tactic.induction'"],
 ["docBlame", "Mathlib.Tactic.induction''"],
 ["docBlame", "Mathlib.Tactic.injectionsAndClear"],
 ["docBlame", "Mathlib.Tactic.interactive"],
 ["docBlame", "Mathlib.Tactic.intro"],
 ["docBlame", "Mathlib.Tactic.intro!"],
 ["docBlame", "Mathlib.Tactic.isBounded_default"],
 ["docBlame", "Mathlib.Tactic.itauto"],
 ["docBlame", "Mathlib.Tactic.itauto!"],
 ["docBlame", "Mathlib.Tactic.listUnusedDecls"],
 ["docBlame", "Mathlib.Tactic.mapply"],
 ["docBlame", "Mathlib.Tactic.matchHyp"],
 ["docBlame", "Mathlib.Tactic.mkDecorations"],
 ["docBlame", "Mathlib.Tactic.moveAdd"],
 ["docBlame", "Mathlib.Tactic.moveMul"],
 ["docBlame", "Mathlib.Tactic.moveOp"],
 ["docBlame", "Mathlib.Tactic.mvBisim"],
 ["docBlame", "Mathlib.Tactic.notationClass"],
 ["docBlame", "Mathlib.Tactic.nthRwLHS"],
 ["docBlame", "Mathlib.Tactic.nthRwRHS"],
 ["docBlame", "Mathlib.Tactic.obviously"],
 ["docBlame", "Mathlib.Tactic.omit"],
 ["docBlame", "Mathlib.Tactic.padicIndexSimp"],
 ["docBlame", "Mathlib.Tactic.parameter"],
 ["docBlame", "Mathlib.Tactic.piInstance"],
 ["docBlame", "Mathlib.Tactic.piInstanceDeriveField"],
 ["docBlame", "Mathlib.Tactic.pp_nodot"],
 ["docBlame", "Mathlib.Tactic.prettyCases"],
 ["docBlame", "Mathlib.Tactic.printSorryIn"],
 ["docBlame", "Mathlib.Tactic.propagateTags"],
 ["docBlame", "Mathlib.Tactic.protectProj"],
 ["docBlame", "Mathlib.Tactic.rcases?"],
 ["docBlame", "Mathlib.Tactic.reassoc"],
 ["docBlame", "Mathlib.Tactic.reassoc!"],
 ["docBlame", "Mathlib.Tactic.reassocAxiom"],
 ["docBlame", "Mathlib.Tactic.refineStruct"],
 ["docBlame", "Mathlib.Tactic.renameArg"],
 ["docBlame", "Mathlib.Tactic.revertAfter"],
 ["docBlame", "Mathlib.Tactic.revertDeps"],
 ["docBlame", "Mathlib.Tactic.revertTargetDeps"],
 ["docBlame", "Mathlib.Tactic.rintro?"],
 ["docBlame", "Mathlib.Tactic.rsimp"],
 ["docBlame", "Mathlib.Tactic.rwSearch"],
 ["docBlame", "Mathlib.Tactic.rwSearch?"],
 ["docBlame", "Mathlib.Tactic.safe"],
 ["docBlame", "Mathlib.Tactic.sample"],
 ["docBlame", "Mathlib.Tactic.setArgsRest"],
 ["docBlame", "Mathlib.Tactic.setTactic"],
 ["docBlame", "Mathlib.Tactic.simpResult"],
 ["docBlame", "Mathlib.Tactic.subtypeInstance"],
 ["docBlame", "Mathlib.Tactic.suggest"],
 ["docBlame", "Mathlib.Tactic.tacticDestruct_"],
 ["docBlame", "Mathlib.Tactic.tacticHave_"],
 ["docBlame", "Mathlib.Tactic.tacticLet_"],
 ["docBlame", "Mathlib.Tactic.tacticMatch_target_"],
 ["docBlame", "Mathlib.Tactic.tacticSet!_"],
 ["docBlame", "Mathlib.Tactic.tacticSuffices_"],
 ["docBlame", "Mathlib.Tactic.tacticTransitivity___"],
 ["docBlame", "Mathlib.Tactic.termList"],
 ["docBlame", "Mathlib.Tactic.tidy"],
 ["docBlame", "Mathlib.Tactic.tidy?"],
 ["docBlame", "Mathlib.Tactic.transport"],
 ["docBlame", "Mathlib.Tactic.truncCases"],
 ["docBlame", "Mathlib.Tactic.tryFor"],
 ["docBlame", "Mathlib.Tactic.unelide"],
 ["docBlame", "Mathlib.Tactic.unfoldAux"],
 ["docBlame", "Mathlib.Tactic.unfoldCases"],
 ["docBlame", "Mathlib.Tactic.unfoldCoes"],
 ["docBlame", "Mathlib.Tactic.unfoldWf"],
 ["docBlame", "Mathlib.Tactic.uniqueDiffWithinAt_Ici_Iic_univ"],
 ["docBlame", "Mathlib.Tactic.unitInterval"],
 ["docBlame", "Mathlib.Tactic.usingArg"],
 ["docBlame", "Mathlib.Tactic.variables"],
 ["docBlame", "Mathlib.Tactic.withArgs"],
 ["docBlame", "Mathlib.Tactic.withPattern"],
 ["docBlame", "Mathlib.Tactic.wittTruncateFunTac"],
 ["docBlame", "Mathlib.WhatsNew.diffExtension"],
 ["docBlame", "Mathlib.WhatsNew.whatsNew"],
 ["docBlame", "Mathlib.evalExtractLet.doExtract"],
 ["docBlame", "Mathlib.evalExtractLet.setupNames"],
 ["docBlame", "Matrix.TransvectionStruct.c"],
 ["docBlame", "Matrix.TransvectionStruct.i"],
 ["docBlame", "Matrix.TransvectionStruct.j"],
 ["docBlame", "MeasureTheory.Content.toFun"],
 ["docBlame", "MeasureTheory.Filtration.seq"],
 ["docBlame", "MeasureTheory.JordanDecomposition.negPart"],
 ["docBlame", "MeasureTheory.JordanDecomposition.posPart"],
 ["docBlame", "MeasureTheory.Lp.constL"],
 ["docBlame", "MeasureTheory.OuterMeasure.measureOf"],
 ["docBlame", "MeasureTheory.SimpleFunc.toFun"],
 ["docBlame", "MeasureTheory.VectorMeasure.measureOf'"],
 ["docBlame", "Mod_.Hom.hom"],
 ["docBlame", "Module.Baer.supExtensionOfMaxSingleton"],
 ["docBlame", "Mon_.Hom.hom"],
 ["docBlame", "MonadCont.Label.apply"],
 ["docBlame", "Monoid.Foldl.get"],
 ["docBlame", "Monoid.Foldl.mk"],
 ["docBlame", "Monoid.Foldl.ofFreeMonoid"],
 ["docBlame", "Monoid.Foldr.get"],
 ["docBlame", "Monoid.Foldr.mk"],
 ["docBlame", "Monoid.Foldr.ofFreeMonoid"],
 ["docBlame", "Monoid.foldlM.get"],
 ["docBlame", "Monoid.foldlM.mk"],
 ["docBlame", "Monoid.foldlM.ofFreeMonoid"],
 ["docBlame", "Monoid.foldrM.get"],
 ["docBlame", "Monoid.foldrM.mk"],
 ["docBlame", "Monoid.foldrM.ofFreeMonoid"],
 ["docBlame", "Order.PFilter.dual"],
 ["docBlame", "PProd.mk.injArrow"],
 ["docBlame", "PicardLindelof.FunSpace.toFun"],
 ["docBlame", "PresheafOfModules.Hom.hom"],
 ["docBlame", "Prod.mk.injArrow"],
 ["docBlame", "QuaternionAlgebra.Basis.i"],
 ["docBlame", "QuaternionAlgebra.Basis.j"],
 ["docBlame", "QuaternionAlgebra.Basis.k"],
 ["docBlame", "Sat.Clause.cons"],
 ["docBlame", "Sat.Clause.nil"],
 ["docBlame", "Set.setOf.unexpander"],
 ["docBlame", "SimpleGraph.Subgraph.Adj"],
 ["docBlame", "SimpleGraph.Subgraph.verts"],
 ["docBlame", "SimpleGraph.Walk.notNilRec"],
 ["docBlame", "SlimCheck.Configuration.maxSize"],
 ["docBlame", "SlimCheck.Configuration.numInst"],
 ["docBlame", "SlimCheck.Configuration.numRetries"],
 ["docBlame", "SlimCheck.Configuration.quiet"],
 ["docBlame", "SlimCheck.Configuration.randomSeed"],
 ["docBlame", "SlimCheck.Configuration.traceDiscarded"],
 ["docBlame", "SlimCheck.Configuration.traceShrink"],
 ["docBlame", "SlimCheck.Configuration.traceShrinkCandidates"],
 ["docBlame", "SlimCheck.Configuration.traceSuccesses"],
 ["docBlame", "SlimCheck.NoShrink.get"],
 ["docBlame", "SlimCheck.NoShrink.mk"],
 ["docBlame", "SlimCheck.PrintableProp.printProp"],
 ["docBlame", "SlimCheck.SampleableExt.interp"],
 ["docBlame", "SlimCheck.SampleableExt.proxy"],
 ["docBlame", "SlimCheck.SampleableExt.sample"],
 ["docBlame", "SlimCheck.Shrinkable.shrink"],
 ["docBlame", "SlimCheck.TestResult.isFailure"],
 ["docBlame", "SlimCheck.TestResult.toString"],
 ["docBlame", "SlimCheck.Testable.run"],
 ["docBlame", "SlimCheck.Testable.runProp"],
 ["docBlame", "Std.Prec.arrow"],
 ["docBlame", "Std.Prec.max"],
 ["docBlame", "Std.Prec.maxPlus"],
 ["docBlame", "Std.Priority.default"],
 ["docBlame", "Std.Priority.max"],
 ["docBlame", "Stream'.WSeq.«term_~ʷ_»"],
 ["docBlame", "String.toAsciiByteArray.loop"],
 ["docBlame", "Submodule.quotientPi_aux.invFun"],
 ["docBlame", "Submodule.quotientPi_aux.toFun"],
 ["docBlame", "Tactic.Elementwise.tacticElementwise!___"],
 ["docBlame", "Tactic.Elementwise.tacticElementwise___"],
 ["docBlame", "Tactic.NormNum.evalNatGCD"],
 ["docBlame", "ToAdditive.additiveTestUnsafe.visit"],
 ["docBlame", "TopologicalSpace.Clopens.carrier"],
 ["docBlame", "TopologicalSpace.Closeds.carrier"],
 ["docBlame", "TopologicalSpace.Compacts.carrier"],
 ["docBlame", "Topology.Homotopy.termΩ"],
 ["docBlame", "Topology.Homotopy.«termΩ^»"],
 ["docBlame", "Turing.EvalsTo.steps"],
 ["docBlame", "Turing.FinTM2.K"],
 ["docBlame", "Turing.FinTM2.initialState"],
 ["docBlame", "Turing.FinTM2.kDecidableEq"],
 ["docBlame", "Turing.FinTM2.kFin"],
 ["docBlame", "Turing.FinTM2.k₀"],
 ["docBlame", "Turing.FinTM2.k₁"],
 ["docBlame", "Turing.FinTM2.m"],
 ["docBlame", "Turing.FinTM2.main"],
 ["docBlame", "Turing.FinTM2.Γ"],
 ["docBlame", "Turing.FinTM2.Γk₀Fin"],
 ["docBlame", "Turing.FinTM2.Λ"],
 ["docBlame", "Turing.FinTM2.ΛFin"],
 ["docBlame", "Turing.FinTM2.σ"],
 ["docBlame", "Turing.FinTM2.σFin"],
 ["docBlame", "Turing.PointedMap.f"],
 ["docBlame", "Turing.TM2Computable.outputsFun"],
 ["docBlame", "Turing.TM2ComputableAux.inputAlphabet"],
 ["docBlame", "Turing.TM2ComputableAux.outputAlphabet"],
 ["docBlame", "Turing.TM2ComputableAux.tm"],
 ["docBlame", "Turing.TM2ComputableInPolyTime.outputsFun"],
 ["docBlame", "Turing.TM2ComputableInPolyTime.time"],
 ["docBlame", "Turing.TM2ComputableInTime.outputsFun"],
 ["docBlame", "Turing.TM2ComputableInTime.time"],
 ["docBlame", "Turing.Tape.head"],
 ["docBlame", "Turing.Tape.left"],
 ["docBlame", "Turing.Tape.right"],
 ["docBlame", "WittVector.Isocrystal.frob"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.Hom.base"],
 ["docBlame", "AlgebraicGeometry.PresheafedSpace.Hom.c"],
 ["docBlame",
  "AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac"],
 ["docBlame",
  "AlgebraicGeometry.ProjIsoSpecTopComponent.FromSpec.tacticMem_tac_aux"],
 ["docBlame", "AlgebraicTopology.DoldKan.MorphComponents.a"],
 ["docBlame", "AlgebraicTopology.DoldKan.MorphComponents.b"],
 ["docBlame", "CategoryTheory.Center.Hom.f"],
 ["docBlame", "CategoryTheory.FreeBicategory.Hom₂.mk"],
 ["docBlame", "CategoryTheory.Functor.CommShift.iso"],
 ["docBlame",
  "CategoryTheory.Limits.CoproductDisjoint.isInitialOfIsPullbackOfIsCoproduct"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.L"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.R"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.fst"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.fstTo"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.left"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.right"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.snd"],
 ["docBlame", "CategoryTheory.Limits.MulticospanIndex.sndTo"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.L"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.R"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.fst"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.fstFrom"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.left"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.right"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.snd"],
 ["docBlame", "CategoryTheory.Limits.MultispanIndex.sndFrom"],
 ["docBlame", "CategoryTheory.Limits.PreservesColimit.preserves"],
 ["docBlame", "CategoryTheory.Limits.PreservesLimit.preserves"],
 ["docBlame", "CategoryTheory.Limits.ReflectsColimit.reflects"],
 ["docBlame", "CategoryTheory.Limits.ReflectsColimitsOfShape.reflectsColimit"],
 ["docBlame",
  "CategoryTheory.Limits.ReflectsColimitsOfSize.reflectsColimitsOfShape"],
 ["docBlame", "CategoryTheory.Limits.ReflectsLimit.reflects"],
 ["docBlame", "CategoryTheory.Limits.ReflectsLimitsOfShape.reflectsLimit"],
 ["docBlame",
  "CategoryTheory.Limits.ReflectsLimitsOfSize.reflectsLimitsOfShape"],
 ["docBlame", "CategoryTheory.Monad.CreatesColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.out"],
 ["docBlame", "CategoryTheory.Monad.PreservesColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.out"],
 ["docBlame", "CategoryTheory.Pretriangulated.Triangle.homMk"],
 ["docBlame", "CategoryTheory.Pretriangulated.Triangle.isoMk"],
 ["docBlame", "CategoryTheory.Triangulated.Octahedron.m₁"],
 ["docBlame", "CategoryTheory.Triangulated.Octahedron.m₃"],
 ["docBlame", "FirstOrder.Language.ElementaryEmbedding.toFun"],
 ["docBlame", "FirstOrder.Language.ElementarySubstructure.toSubstructure"],
 ["docBlame", "FirstOrder.Language.IsOrdered.leSymb"],
 ["docBlame", "FirstOrder.Language.LEquiv.invLHom"],
 ["docBlame", "FirstOrder.Language.LEquiv.toLHom"],
 ["docBlame", "FirstOrder.Language.LHom.onFunction"],
 ["docBlame", "FirstOrder.Language.LHom.onRelation"],
 ["docBlame", "FirstOrder.Language.Prestructure.toStructure"],
 ["docBlame", "FirstOrder.Language.Substructure.carrier"],
 ["docBlame", "FirstOrder.Language.Term.relabel"],
 ["docBlame", "Lean.Elab.Command.irredDefLemma"],
 ["docBlame", "Lean.Export.Alloc.map"],
 ["docBlame", "Lean.Export.Alloc.next"],
 ["docBlame", "Lean.Export.OfState.get"],
 ["docBlame", "Lean.Export.OfState.modify"],
 ["docBlame", "Lean.Export.State.defs"],
 ["docBlame", "Lean.Export.State.exprs"],
 ["docBlame", "Lean.Export.State.levels"],
 ["docBlame", "Lean.Export.State.names"],
 ["docBlame", "Lean.Export.State.stk"],
 ["docBlame", "Lean.Export.exportDef.axdef"],
 ["docBlame", "Lean.Export.exportDef.defn"],
 ["docBlame", "Lean.Export.exportDef.ind"],
 ["docBlame", "Lean.Export.exportDef.indbody"],
 ["docBlame", "Lean.Export.exportDef.insert"],
 ["docBlame", "Lean.MVarId.congrN!.go"],
 ["docBlame", "Lean.MVarId.congrN!.post"],
 ["docBlame", "Lean.MVarId.congrSimp?.forSide"],
 ["docBlame", "Lean.MVarId.introsClean.eqImpOfIffImp"],
 ["docBlame", "Lean.MVarId.introsClean.heqImpOfEqImp"],
 ["docBlame", "Lean.MVarId.introsClean.isTrivialType"],
 ["docBlame", "Lean.MVarId.introsClean.loop"],
 ["docBlame", "Lean.MVarId.smartHCongr?.forSide"],
 ["docBlame", "Lean.MVarId.smartHCongr?.loop"],
 ["docBlame", "Lean.MVarId.userCongr?.forSide"],
 ["docBlame", "Lean.Parser.Attr.higherOrder"],
 ["docBlame", "Lean.Parser.Tactic.applyCongr"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintype"],
 ["docBlame", "Mathlib.Deriving.Fintype.mkFintypeInstanceHandler"],
 ["docBlame", "Mathlib.Meta.NormNum.proveNatFibAux"],
 ["docBlame", "Mathlib.Meta.Positivity.evalBernstein"],
 ["docBlame", "Mathlib.Meta.Positivity.evalIntCast"],
 ["docBlame", "Mathlib.Meta.Positivity.evalNatCast"],
 ["docBlame", "Mathlib.ProjectionNotation.delabProjectionApp'.walkUp"],
 ["docBlame", "Mathlib.ProjectionNotation.pp.collapseStructureProjections"],
 ["docBlame", "Mathlib.Tactic.Conv.convLHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRHS"],
 ["docBlame", "Mathlib.Tactic.Conv.convRun_conv_"],
 ["docBlame", "Mathlib.Tactic.ElimApp.evalNames"],
 ["docBlame", "Mathlib.Tactic.Find.«command#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.findDeclsPerHead"],
 ["docBlame", "Mathlib.Tactic.Find.findType"],
 ["docBlame", "Mathlib.Tactic.Find.«tactic#find_»"],
 ["docBlame", "Mathlib.Tactic.Find.tacticFind"],
 ["docBlame", "Mathlib.Tactic.GCongr.exact"],
 ["docBlame", "Mathlib.Tactic.GCongr.tacticGcongr_discharger"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.apply?'"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.cachePath"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact!?"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?!"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.exact?'"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.tacticLibrary_search"],
 ["docBlame", "Mathlib.Tactic.LibrarySearch.«termExact?%»"],
 ["docBlame", "Mathlib.Tactic.Propose.proposeLemmas"],
 ["docBlame", "Mathlib.Tactic.Rewrites.cachePath"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeSquarePresenter"],
 ["docBlame", "Mathlib.Tactic.Widget.commutativeTrianglePresenter"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.intro1PStep"],
 ["docBlame", "Mathlib.Tactic.evalIntrov.introsDep"],
 ["docBlame", "MeasureTheory.Measure.FiniteSpanningSetsIn.set"],
 ["docBlame", "Module.End.Eigenvalues.val"],
 ["docBlame", "Order.Ideal.PrimePair.F"],
 ["docBlame", "Order.Ideal.PrimePair.I"],
 ["docBlame", "SetTheory.PGame.State.l"],
 ["docBlame", "SetTheory.PGame.State.r"],
 ["docBlame", "SetTheory.PGame.State.turnBound"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s"],
 ["docBlame", "SimplicialObject.Augmented.ExtraDegeneracy.s'"],
 ["docBlame", "Tactic.Elementwise.elementwiseExpr.mkHomElementwise"],
 ["docBlame", "TopCat.GlueData.MkCore.J"],
 ["docBlame", "TopCat.GlueData.MkCore.U"],
 ["docBlame", "TopCat.GlueData.MkCore.V"],
 ["docBlame", "TopCat.GlueData.MkCore.t"],
 ["docBlame", "TopCat.Presheaf.SubmonoidPresheaf.obj"],
 ["docBlame", "Turing.TM0.Cfg.Tape"],
 ["docBlame", "Turing.TM0.Cfg.q"],
 ["docBlame", "Turing.TM1.Cfg.Tape"],
 ["docBlame", "Turing.TM1.Cfg.l"],
 ["docBlame", "Turing.TM1.Cfg.var"],
 ["docBlame", "Turing.TM2.Cfg.l"],
 ["docBlame", "Turing.TM2.Cfg.stk"],
 ["docBlame", "Turing.TM2.Cfg.var"],
 ["docBlame", "FirstOrder.Language.Theory.CompleteType.toTheory"],
 ["docBlame", "FirstOrder.Language.Theory.ModelType.Carrier"],
 ["docBlame", "Lean.Meta.mkRichHCongr.doubleTelescope.loop"],
 ["docBlame", "Lean.Meta.mkRichHCongr.withNewEqs.loop"],
 ["docBlame", "Mathlib.Command.Variable.completeBinders'.isVariableAlias"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.extendScope"],
 ["docBlame", "Mathlib.Command.Variable.elabVariables.process"],
 ["docBlame", "Mathlib.Command.Variable.variable?.checkRedundant"],
 ["docBlame", "Mathlib.Command.Variable.variable?.maxSteps"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalEq.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLE.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalLT.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.aux"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMinFac.core"],
 ["docBlame", "Mathlib.Meta.NormNum.evalNatPrime.core"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftHom.lift"],
 ["docBlame", "Mathlib.Tactic.Coherence.LiftObj.lift"],
 ["docBlame", "Mathlib.Tactic.Coherence.MonoidalCoherence.hom"],
 ["docBlame", "Mathlib.Tactic.GCongr.ForwardExt.eval"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.declName"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.mainSubgoals"],
 ["docBlame", "Mathlib.Tactic.GCongr.GCongrLemma.varyingArgs"],
 ["docBlame", "Mathlib.Tactic.Monotonicity.mono.side"],
 ["docBlame", "Mathlib.Tactic.Sat.buildReify.mkPS"],
 ["docBlame", "Mathlib.Tactic.Says.says.no_verify_in_CI"],
 ["docBlame", "Mathlib.Tactic.Says.says.verify"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalAdd.core.ratArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.intArm"],
 ["docBlame", "Mathlib.Meta.NormNum.evalMul.core.ratArm"],
 ["unusedArguments", "Combinator.K"],
 ["unusedArguments", "Decidable.not_or_iff_and_not"]]

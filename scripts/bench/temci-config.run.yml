- attributes:
    description: build
  run_config:
    runner: perf_stat
    perf_stat:
      properties: ['wall-clock', 'task-clock', 'instructions:u', 'branches', 'branch-misses']
    rusage_properties: ['maxrss']
    cmd: |
      # use build cache for proofwidgets, but not for anything else
      bash -c 'set -eo pipefail; lake clean 1>&2 && LEAN_PATH=$(lean --print-libdir) lake build proofwidgets 1>&2 && rm -f .lake/packages/batteries/.lake/build/bin/runLinter 1>&2 && LAKE_OVERRIDE_LEAN=true LEAN=$(readlink -m ./scripts/bench/fake-root/bin/lean) lake build --no-cache -v | ./scripts/bench/accumulate_profile.py | grep -v took'
    parse_output: true
    runs: 1
- attributes:
    description: lint
  run_config:
    runner: perf_stat
    perf_stat:
      properties: ['wall-clock', 'instructions:u']
    cmd: |
      make lint
    runs: 1
- attributes:
    description: open Mathlib
  run_config:
    runner: perf_stat
    perf_stat:
      properties: ['wall-clock', 'task-clock', 'instructions:u']
    rusage_properties: ['maxrss']
    cmd: |
      # run lake+lean like the file worker would
      LEAN_PATH=$(lake setup-file --no-build Mathlib Mathlib | jq -r '.paths.oleanPath | join(":")') lean Mathlib.lean
    runs: 5
- attributes:
    description: size
  run_config:
    cmd: |
      bash -c "
      set -euxo pipefail &&
      echo -n '.lean|lines: ' &&
      find Mathlib -name '*.lean' -print0 | wc -l --files0-from=- | tail -1 | cut -d' ' -f 1
      echo -n '.olean|bytes: ' &&
      find .lake/build -name '*.olean' -print0 | wc -c --files0-from=- | tail -1 | cut -d' ' -f 1 &&
      echo -n 'porting notes|lines: ' &&
      grep --ignore-case 'porting note' -r Mathlib | wc -l
      "
    runs: 1
    runner: output

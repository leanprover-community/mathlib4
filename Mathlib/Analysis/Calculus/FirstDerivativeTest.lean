/-
Copyright (c) 2024 Bj√∏rn Kjos-Hanssen. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Bj√∏rn Kjos-Hanssen, Patrick Massot
-/
import Mathlib.Analysis.Calculus.MeanValue
import Mathlib.Topology.Order.OrderClosedExtr
/-!
# The First-Derivative Test

We prove the first-derivative test in the strong form given on [Wikipedia](https://en.wikipedia.org/wiki/Derivative_test#First-derivative_test).

The test is proved over the real numbers ‚Ñù
using `monotoneOn_of_deriv_nonneg` from [Mathlib.Analysis.Calculus.MeanValue].

## Main results

* `localMax_of_deriv_Ioo`: Suppose `f` is a real-valued function of a real variable
  defined on some interval containing the point `a`.
  Further suppose that `f` is continuous at `a` and differentiable on some open interval
  containing `a`, except possibly at `a` itself.

  If there exists a positive number `r > 0` such that for every `x` in `(a ‚àí r, a)`
  we have `f‚Ä≤(x) ‚â• 0`, and for every `x` in `(a, a + r)` we have `f‚Ä≤(x) ‚â§ 0`,
  then `f` has a local maximum at `a`.

* `localMin_of_deriv_Ioo`: The dual of `first_derivative_max`, for minima.

* `localMax_of_deriv`: 1st derivative test for maxima using filters.

## Tags

derivative test, calculus
-/

open Set Topology


 /-- The First-Derivative Test from calculus, maxima version.
  Suppose `a < b < c`, `f : ‚Ñù ‚Üí ‚Ñù` is continuous at `b`,
  the derivative `f'` is nonnegative on `(a,b)`, and
  the derivative `f'` is nonpositive on `(b,c)`. Then `f` has a local maximum at `a`. -/
lemma localMax_of_deriv_Ioo {f : ‚Ñù ‚Üí ‚Ñù} {a b c : ‚Ñù} (g‚ÇÄ : a < b) (g‚ÇÅ : b < c)
    (h : ContinuousAt f b)
    (hd‚ÇÄ : DifferentiableOn ‚Ñù f (Set.Ioo a b))
    (hd‚ÇÅ : DifferentiableOn ‚Ñù f (Set.Ioo b c))
    (h‚ÇÄ :  ‚àÄ x ‚àà Set.Ioo a b, 0 ‚â§ deriv f x)
    (h‚ÇÅ :  ‚àÄ x ‚àà Set.Ioo b c, deriv f x ‚â§ 0) : IsLocalMax f b :=
  have hIoc : ContinuousOn f (Ioc a b) :=
    Ioo_union_right g‚ÇÄ ‚ñ∏ ContinuousOn.union_continuousAt (isOpen_Ioo (a := a) (b := b))
        (DifferentiableOn.continuousOn hd‚ÇÄ) (by simp_all)
  have hIco : ContinuousOn f (Ico b c) :=
    Ioo_union_left g‚ÇÅ ‚ñ∏ ContinuousOn.union_continuousAt (isOpen_Ioo (a := b) (b := c))
        (DifferentiableOn.continuousOn hd‚ÇÅ) (by simp_all)
  isLocalMax_of_mono_anti g‚ÇÄ g‚ÇÅ
    (monotoneOn_of_deriv_nonneg (convex_Ioc a b) hIoc (by simp_all) (by simp_all))
    (antitoneOn_of_deriv_nonpos (convex_Ico b c) hIco (by simp_all) (by simp_all))


/-- The First-Derivative Test from calculus, minima version. -/
lemma localMin_of_deriv_Ioo {f : ‚Ñù ‚Üí ‚Ñù} {a b c : ‚Ñù} (h : ContinuousAt f b)
    (g‚ÇÄ : a < b) (g‚ÇÅ : b < c)
    (hd‚ÇÄ : DifferentiableOn ‚Ñù f (Set.Ioo a b)) (hd‚ÇÅ : DifferentiableOn ‚Ñù f (Set.Ioo b c))
    (h‚ÇÄ : ‚àÄ x ‚àà Set.Ioo a b, deriv f x ‚â§ 0)
    (h‚ÇÅ : ‚àÄ x ‚àà Set.Ioo b c, 0 ‚â§ deriv f x) : IsLocalMin f b := by
    have := localMax_of_deriv_Ioo (f := -f) g‚ÇÄ g‚ÇÅ
      (by simp_all) (DifferentiableOn.neg hd‚ÇÄ) (DifferentiableOn.neg hd‚ÇÅ)
      (fun x hx => deriv.neg (f := f) ‚ñ∏ Left.nonneg_neg_iff.mpr <|h‚ÇÄ x hx)
      (fun x hx => deriv.neg (f := f) ‚ñ∏ Left.neg_nonpos_iff.mpr <|h‚ÇÅ x hx)
    exact (neg_neg f) ‚ñ∏ IsLocalMax.neg this

/-- If `p` holds to the left of `a` then it holds in an open interval `(l, a)`. -/
lemma Filter.Eventually.exists_lt_forall_Ioo {Œ± : Type*} [TopologicalSpace Œ±] [LinearOrder Œ±]
    [OrderTopology Œ±] [NoMinOrder Œ±] {a : Œ±} {p : Œ± ‚Üí Prop} (h : ‚àÄ·∂† x in ùìù[<] a, p x) :
    ‚àÉ l < a, ‚àÄ x ‚àà Ioo l a, p x :=
  mem_nhdsWithin_Iio_iff_exists_Ioo_subset.1 h

/-- If `p` holds to the right of `a` then it holds in an open interval `(a, l)`. -/
lemma Filter.Eventually.exists_gt_forall_Ioo {Œ± : Type*} [TopologicalSpace Œ±] [LinearOrder Œ±]
    [OrderTopology Œ±] [NoMaxOrder Œ±] {a : Œ±} {p : Œ± ‚Üí Prop} (h : ‚àÄ·∂† x in ùìù[>] a, p x) :
    ‚àÉ l > a, ‚àÄ x ‚àà Ioo a l, p x :=
  mem_nhdsWithin_Ioi_iff_exists_Ioo_subset.1 h


/-- Monotonicity of open intervals under removal of `max` at a left endpoint. -/
theorem mem_Ioo_of_mem_Ioo_max_left {R : Type*} [LinearOrder R]
    {b u‚ÇÄ v‚ÇÄ x : R} (hx : x ‚àà Ioo (max u‚ÇÄ v‚ÇÄ) b) :
    x ‚àà Ioo u‚ÇÄ b := by simp_all

/-- Monotonicity of open intervals under removal of `min` at a right endpoint. -/
theorem mem_Ioo_of_mem_Ioo_min_right {R : Type*} [LinearOrder R]
    {b u‚ÇÅ v‚ÇÅ x : R} (hx : x ‚àà Ioo b (min u‚ÇÅ v‚ÇÅ)) :
    x ‚àà Ioo b u‚ÇÅ := by simp_all

/-- The interval inclusion `(a,b] \ {b} ‚äÜ (a,b)`. -/
theorem mem_Ioo_of_mem_Ioc_of_ne {R : Type*} [LinearOrder R]
    {b u‚ÇÄ x : R} (hx : x ‚àà Ioc u‚ÇÄ b) (H : ¬¨x = b) :
    x ‚àà Ioo u‚ÇÄ b := by
    have := hx.2
    simp_all only [mem_Ioc, and_true, mem_Ioo, true_and, gt_iff_lt]
    exact lt_of_le_of_ne this H

/-- The interval inclusion `[a,b) \ {a} ‚äÜ (a,b)`. -/
theorem mem_Ioo_of_mem_Ico_of_ne {R : Type*} [LinearOrder R]
    {b u‚ÇÄ x : R} (hx : x ‚àà Ico u‚ÇÄ b) (H : ¬¨x = u‚ÇÄ) :
    x ‚àà Ioo u‚ÇÄ b := by
    have := hx.2
    simp_all only [mem_Ico, and_true, mem_Ioo, gt_iff_lt]
    exact lt_of_le_of_ne hx fun a ‚Ü¶ H (id (Eq.symm a))


 /-- The First-Derivative Test from calculus, maxima version,
 expressed in terms of left and right filters. -/
lemma localMax_of_deriv' {f : ‚Ñù ‚Üí ‚Ñù} {b : ‚Ñù} (h : ContinuousAt f b)
    (hd‚ÇÄ : ‚àÄ·∂† x in ùìù[<] b, DifferentiableAt ‚Ñù f x) (hd‚ÇÅ : ‚àÄ·∂† x in ùìù[>] b, DifferentiableAt ‚Ñù f x)
    (h‚ÇÄ  : ‚àÄ·∂† x in ùìù[<] b, 0 ‚â§ deriv f x) (h‚ÇÅ  : ‚àÄ·∂† x in ùìù[>] b, deriv f x ‚â§ 0) :
    IsLocalMax f b := by
  obtain ‚ü®u‚ÇÄ, hu‚ÇÄ, diff_u‚ÇÄ : Ioo u‚ÇÄ b ‚äÜ {x | DifferentiableAt ‚Ñù f x}‚ü© := hd‚ÇÄ.exists_lt_forall_Ioo
  obtain ‚ü®u‚ÇÅ, hu‚ÇÅ, diff_u‚ÇÅ : Ioo b u‚ÇÅ ‚äÜ {x | DifferentiableAt ‚Ñù f x}‚ü© := hd‚ÇÅ.exists_gt_forall_Ioo
  obtain ‚ü®v‚ÇÄ, hv‚ÇÄ, diff_v‚ÇÄ‚ü© := h‚ÇÄ.exists_lt_forall_Ioo
  obtain ‚ü®v‚ÇÅ, hv‚ÇÅ, diff_v‚ÇÅ‚ü© := h‚ÇÅ.exists_gt_forall_Ioo
  apply isLocalMax_of_mono_anti
  ¬∑ show max u‚ÇÄ v‚ÇÄ < b; exact max_lt (by simp_all) (by simp_all)
  ¬∑ show b < min u‚ÇÅ v‚ÇÅ; exact lt_min (by simp_all) (by simp_all)
  ¬∑ exact monotoneOn_of_deriv_nonneg (convex_Ioc _ _)
      (fun x hx => ContinuousAt.continuousWithinAt
        <|(em (x = b)).elim (fun H => H ‚ñ∏ h)
          fun H => DifferentiableAt.continuousAt <|diff_u‚ÇÄ
            <|mem_Ioo_of_mem_Ioo_max_left <|mem_Ioo_of_mem_Ioc_of_ne hx H)
      (fun _ _ => DifferentiableAt.differentiableWithinAt (by aesop)) (by aesop)
  ¬∑ exact antitoneOn_of_deriv_nonpos (convex_Ico _ _)
      (fun x hx => ContinuousAt.continuousWithinAt
        <|(em (x = b)).elim (fun H => H ‚ñ∏ h)
          fun H => DifferentiableAt.continuousAt <|diff_u‚ÇÅ
            <|mem_Ioo_of_mem_Ioo_min_right <|mem_Ioo_of_mem_Ico_of_ne hx H
        )
      (fun _ _ => DifferentiableAt.differentiableWithinAt (by aesop)) (by aesop)

/-- The First Derivative test, maximum version. -/
theorem localMax_of_deriv {f : ‚Ñù ‚Üí ‚Ñù} {b : ‚Ñù} (h : ContinuousAt f b)
    (hd : ‚àÄ·∂† x in ùìù[‚â†] b, DifferentiableAt ‚Ñù f x)
    (h‚ÇÄ  : ‚àÄ·∂† x in ùìù[<] b, 0 ‚â§ deriv f x) (h‚ÇÅ  : ‚àÄ·∂† x in ùìù[>] b, deriv f x ‚â§ 0) :
    IsLocalMax f b :=
  localMax_of_deriv' h
    (nhds_left'_le_nhds_ne _ (by tauto)) (nhds_right'_le_nhds_ne _ (by tauto)) h‚ÇÄ h‚ÇÅ

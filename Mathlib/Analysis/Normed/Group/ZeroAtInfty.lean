/-
Copyright (c) 2024 Moritz Doll. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Moritz Doll
-/

import Mathlib.Topology.ContinuousFunction.ZeroAtInfty

/-!
# ZeroAtInftyContinuousMapClass in normed additive groups

In this file we give a characterization of the predicate `zero_at_infty` from
`ZeroAtInftyContinuousMapClass`. A continuous map `f` is zero at infinity if and only if
for every `Œµ > 0` there exists a `r : ‚Ñù` such that for all `x : E` with `r < ‚Äñx‚Äñ` it holds that
`‚Äñf x‚Äñ < Œµ`.
-/

open Topology Filter

variable {E F ùìï : Type*}
variable [SeminormedAddGroup E] [SeminormedAddCommGroup F]
variable [FunLike ùìï E F] [ZeroAtInftyContinuousMapClass ùìï E F]

theorem ZeroAtInftyContinuousMapClass.norm_le (f : ùìï) (Œµ : ‚Ñù) (hŒµ : 0 < Œµ) :
    ‚àÉ (r : ‚Ñù), ‚àÄ (x : E) (_hx : r < ‚Äñx‚Äñ), ‚Äñf x‚Äñ < Œµ := by
  have h := zero_at_infty f
  rw [tendsto_zero_iff_norm_tendsto_zero, tendsto_def] at h
  specialize h (Metric.ball 0 Œµ) (Metric.ball_mem_nhds 0 hŒµ)
  rcases Metric.closedBall_compl_subset_of_mem_cocompact h 0 with ‚ü®r, hr‚ü©
  use r
  intro x hr'
  suffices x ‚àà (fun x ‚Ü¶ ‚Äñf x‚Äñ) ‚Åª¬π' Metric.ball 0 Œµ by aesop
  apply hr
  aesop

variable [ProperSpace E]

theorem zero_at_infty_of_norm_le (f : E ‚Üí F)
    (h : ‚àÄ (Œµ : ‚Ñù) (_hŒµ : 0 < Œµ), ‚àÉ (r : ‚Ñù), ‚àÄ (x : E) (_hx : r < ‚Äñx‚Äñ), ‚Äñf x‚Äñ < Œµ) :
    Tendsto f (cocompact E) (ùìù 0) := by
  rw [tendsto_zero_iff_norm_tendsto_zero]
  intro s hs
  rw [mem_map, Metric.mem_cocompact_iff_closedBall_compl_subset 0]
  rw [Metric.mem_nhds_iff] at hs
  rcases hs with ‚ü®Œµ, hŒµ, hs‚ü©
  rcases h Œµ hŒµ with ‚ü®r, hr‚ü©
  use r
  intro
  aesop

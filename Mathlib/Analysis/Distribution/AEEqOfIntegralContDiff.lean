/-
Copyright (c) 2023 S√©bastien Gou√´zel. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: S√©bastien Gou√´zel
-/
import Mathlib.Geometry.Manifold.PartitionOfUnity
import Mathlib.Geometry.Manifold.Metrizable
import Mathlib.MeasureTheory.Function.AEEqOfIntegral

/-!
# Functions which vanish as distributions vanish as functions

In a finite dimensional normed real vector space endowed with a Borel measure, consider a locally
integrable function whose integral against all compactly supported smooth functions vanishes. Then
the function is almost everywhere zero.
This is proved in `ae_eq_zero_of_integral_contDiff_smul_eq_zero`.

A version for two functions having the same integral when multiplied by smooth compactly supported
functions is also given in `ae_eq_of_integral_contDiff_smul_eq`.

These are deduced from the same results on finite-dimensional real manifolds, given respectively
as `ae_eq_zero_of_integral_smooth_smul_eq_zero` and `ae_eq_of_integral_smooth_smul_eq`.
-/

open MeasureTheory Filter Metric Function Set TopologicalSpace

open scoped Topology Manifold

variable {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚Ñù E] [FiniteDimensional ‚Ñù E]
  {F : Type*} [NormedAddCommGroup F] [NormedSpace ‚Ñù F] [CompleteSpace F]

section Manifold

variable {H : Type*} [TopologicalSpace H] (I : ModelWithCorners ‚Ñù E H)
  {M : Type*} [TopologicalSpace M] [ChartedSpace H M] [SmoothManifoldWithCorners I M]
  [MeasurableSpace M] [BorelSpace M] [SigmaCompactSpace M] [T2Space M]
  {f f' : M ‚Üí F} {Œº : Measure M}

/-- If a locally integrable function `f` on a finite-dimensional real manifold has zero integral
when multiplied by any smooth compactly supported function, then `f` vanishes almost everywhere. -/
theorem ae_eq_zero_of_integral_smooth_smul_eq_zero (hf : LocallyIntegrable f Œº)
    (h : ‚àÄ g : M ‚Üí ‚Ñù, Smooth I ùìò(‚Ñù) g ‚Üí HasCompactSupport g ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = 0) :
    ‚àÄ·µê x ‚àÇŒº, f x = 0 := by
  -- record topological properties of `M`
  have := I.locallyCompactSpace
  have := ChartedSpace.locallyCompactSpace H M
  have := I.secondCountableTopology
  have := ChartedSpace.secondCountable_of_sigma_compact H M
  have := ManifoldWithCorners.metrizableSpace I M
  let _ : MetricSpace M := TopologicalSpace.metrizableSpaceMetric M
  -- it suffices to show that the integral of the function vanishes on any compact set `s`
  apply ae_eq_zero_of_forall_set_integral_isCompact_eq_zero' hf (fun s hs ‚Ü¶ Eq.symm ?_)
  obtain ‚ü®Œ¥, Œ¥pos, hŒ¥‚ü© : ‚àÉ Œ¥, 0 < Œ¥ ‚àß IsCompact (cthickening Œ¥ s) := hs.exists_isCompact_cthickening
  -- choose a sequence of smooth functions `g‚Çô` equal to `1` on `s` and vanishing outside of the
  -- `u‚Çô`-neighborhood of `s`, where `u‚Çô` tends to zero. Then each integral `‚à´ g‚Çô f` vanishes,
  -- and by dominated convergence these integrals converge to `‚à´ x in s, f`.
  obtain ‚ü®u, -, u_pos, u_lim‚ü© : ‚àÉ u, StrictAnti u ‚àß (‚àÄ (n : ‚Ñï), u n ‚àà Ioo 0 Œ¥)
    ‚àß Tendsto u atTop (ùìù 0) := exists_seq_strictAnti_tendsto' Œ¥pos
  let v : ‚Ñï ‚Üí Set M := fun n ‚Ü¶ thickening (u n) s
  obtain ‚ü®K, K_compact, vK‚ü© : ‚àÉ K, IsCompact K ‚àß ‚àÄ n, v n ‚äÜ K :=
    ‚ü®_, hŒ¥, fun n ‚Ü¶ thickening_subset_cthickening_of_le (u_pos n).2.le _‚ü©
  have : ‚àÄ n, ‚àÉ (g : M ‚Üí ‚Ñù), support g = v n ‚àß Smooth I ùìò(‚Ñù) g ‚àß Set.range g ‚äÜ Set.Icc 0 1
          ‚àß ‚àÄ x ‚àà s, g x = 1 := by
    intro n
    rcases exists_msmooth_support_eq_eq_one_iff I isOpen_thickening hs.isClosed
      (self_subset_thickening (u_pos n).1 s) with ‚ü®g, g_smooth, g_range, g_supp, hg‚ü©
    exact ‚ü®g, g_supp, g_smooth, g_range, fun x hx ‚Ü¶ (hg x).1 hx‚ü©
  choose g g_supp g_diff g_range hg using this
  -- main fact: the integral of `‚à´ g‚Çô f` tends to `‚à´ x in s, f`.
  have L : Tendsto (fun n ‚Ü¶ ‚à´ x, g n x ‚Ä¢ f x ‚àÇŒº) atTop (ùìù (‚à´ x in s, f x ‚àÇŒº)) := by
    rw [‚Üê integral_indicator hs.measurableSet]
    let bound : M ‚Üí ‚Ñù := K.indicator (fun x ‚Ü¶ ‚Äñf x‚Äñ)
    have A : ‚àÄ n, AEStronglyMeasurable (fun x ‚Ü¶ g n x ‚Ä¢ f x) Œº :=
      fun n ‚Ü¶ (g_diff n).continuous.aestronglyMeasurable.smul hf.aestronglyMeasurable
    have B : Integrable bound Œº := by
      rw [integrable_indicator_iff K_compact.measurableSet]
      exact (hf.integrableOn_isCompact K_compact).norm
    have C : ‚àÄ n, ‚àÄ·µê x ‚àÇŒº, ‚Äñg n x ‚Ä¢ f x‚Äñ ‚â§ bound x := by
      intro n
      filter_upwards with x
      rw [norm_smul]
      refine le_indicator_apply (fun _ ‚Ü¶ ?_) (fun hxK ‚Ü¶ ?_)
      ¬∑ have : ‚Äñg n x‚Äñ ‚â§ 1 := by
          have := g_range n (mem_range_self (f := g n) x)
          rw [Real.norm_of_nonneg this.1]
          exact this.2
        exact mul_le_of_le_one_left (norm_nonneg _) this
      ¬∑ have : g n x = 0 := by rw [‚Üê nmem_support, g_supp]; contrapose! hxK; exact vK n hxK
        simp [this]
    have D : ‚àÄ·µê x ‚àÇŒº, Tendsto (fun n => g n x ‚Ä¢ f x) atTop (ùìù (s.indicator f x)) := by
      filter_upwards with x
      by_cases hxs : x ‚àà s
      ¬∑ have : ‚àÄ n, g n x = 1 := fun n ‚Ü¶ hg n x hxs
        simp [this, indicator_of_mem hxs f]
      ¬∑ simp_rw [indicator_of_not_mem hxs f]
        apply tendsto_const_nhds.congr'
        suffices H : ‚àÄ·∂† n in atTop, g n x = 0 by
          filter_upwards [H] with n hn using by simp [hn]
        obtain ‚ü®Œµ, Œµpos, hŒµ‚ü© : ‚àÉ Œµ, 0 < Œµ ‚àß x ‚àâ thickening Œµ s := by
          rw [‚Üê hs.isClosed.closure_eq, closure_eq_iInter_thickening s] at hxs
          simpa using hxs
        filter_upwards [(tendsto_order.1 u_lim).2 _ Œµpos] with n hn
        rw [‚Üê nmem_support, g_supp]
        contrapose! hŒµ
        exact thickening_mono hn.le s hŒµ
    exact tendsto_integral_of_dominated_convergence bound A B C D
  -- deduce that `‚à´ x in s, f = 0` as each integral `‚à´ g‚Çô f` vanishes by assumption
  have : ‚àÄ n, ‚à´ x, g n x ‚Ä¢ f x ‚àÇŒº = 0 := by
    refine' fun n ‚Ü¶ h _ (g_diff n) _
    apply HasCompactSupport.of_support_subset_isCompact K_compact
    simpa [g_supp] using vK n
  simpa [this] using L


/-- If a function `f` locally integrable on an open subset `U` of a finite-dimensional real
  manifold has zero integral when multiplied by any smooth function compactly supported
  in `U`, then `f` vanishes almost everywhere in `U`. -/
nonrec theorem IsOpen.ae_eq_zero_of_integral_smooth_smul_eq_zero' {U : Set M} (hU : IsOpen U)
    (hSig : IsSigmaCompact U) (hf : LocallyIntegrableOn f U Œº)
    (h : ‚àÄ g : M ‚Üí ‚Ñù,
      Smooth I ùìò(‚Ñù) g ‚Üí HasCompactSupport g ‚Üí tsupport g ‚äÜ U ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = 0) :
    ‚àÄ·µê x ‚àÇŒº, x ‚àà U ‚Üí f x = 0 := by
  have meas_U := hU.measurableSet
  rw [‚Üê ae_restrict_iff' meas_U, ae_restrict_iff_subtype meas_U]
  let U : Opens M := ‚ü®U, hU‚ü©
  change ‚àÄ·µê (x : U) ‚àÇ_, _
  haveI : SigmaCompactSpace U := isSigmaCompact_iff_sigmaCompactSpace.mp hSig
  refine ae_eq_zero_of_integral_smooth_smul_eq_zero I ?_ fun g g_smth g_supp ‚Ü¶ ?_
  ¬∑ exact (locallyIntegrable_comap meas_U).mpr hf
  specialize h (Subtype.val.extend g 0) (g_smth.extend_zero g_supp)
    (g_supp.extend_zero continuous_subtype_val) ((g_supp.tsupport_extend_zero_subset
      continuous_subtype_val).trans <| Subtype.coe_image_subset _ _)
  rw [‚Üê set_integral_eq_integral_of_forall_compl_eq_zero (s := U) fun x hx ‚Ü¶ ?_] at h
  ¬∑ rw [‚Üê integral_subtype_comap] at h
    ¬∑ simp_rw [Subtype.val_injective.extend_apply] at h; exact h
    ¬∑ exact meas_U
  rw [Function.extend_apply' _ _ _ (mt _ hx)]
  ¬∑ apply zero_smul
  ¬∑ rintro ‚ü®x, rfl‚ü©; exact x.2

theorem IsOpen.ae_eq_zero_of_integral_smooth_smul_eq_zero {U : Set M} (hU : IsOpen U)
    (hf : LocallyIntegrableOn f U Œº)
    (h : ‚àÄ g : M ‚Üí ‚Ñù,
      Smooth I ùìò(‚Ñù) g ‚Üí HasCompactSupport g ‚Üí tsupport g ‚äÜ U ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = 0) :
    ‚àÄ·µê x ‚àÇŒº, x ‚àà U ‚Üí f x = 0 :=
  haveI := I.locallyCompactSpace
  haveI := ChartedSpace.locallyCompactSpace H M
  haveI := hU.locallyCompactSpace
  haveI := I.secondCountableTopology
  haveI := ChartedSpace.secondCountable_of_sigma_compact H M
  hU.ae_eq_zero_of_integral_smooth_smul_eq_zero' _
    (isSigmaCompact_iff_sigmaCompactSpace.mpr inferInstance) hf h

/-- If two locally integrable functions on a finite-dimensional real manifold have the same integral
when multiplied by any smooth compactly supported function, then they coincide almost everywhere. -/
theorem ae_eq_of_integral_smooth_smul_eq
    (hf : LocallyIntegrable f Œº) (hf' : LocallyIntegrable f' Œº) (h : ‚àÄ (g : M ‚Üí ‚Ñù),
      Smooth I ùìò(‚Ñù) g ‚Üí HasCompactSupport g ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = ‚à´ x, g x ‚Ä¢ f' x ‚àÇŒº) :
    ‚àÄ·µê x ‚àÇŒº, f x = f' x := by
  have : ‚àÄ·µê x ‚àÇŒº, (f - f') x = 0 := by
    apply ae_eq_zero_of_integral_smooth_smul_eq_zero I (hf.sub hf')
    intro g g_diff g_supp
    simp only [Pi.sub_apply, smul_sub]
    rw [integral_sub, sub_eq_zero]
    ¬∑ exact h g g_diff g_supp
    ¬∑ exact hf.integrable_smul_left_of_hasCompactSupport g_diff.continuous g_supp
    ¬∑ exact hf'.integrable_smul_left_of_hasCompactSupport g_diff.continuous g_supp
  filter_upwards [this] with x hx
  simpa [sub_eq_zero] using hx

end Manifold

section VectorSpace

variable [MeasurableSpace E] [BorelSpace E] {f f' : E ‚Üí F} {Œº : Measure E}

/-- If a locally integrable function `f` on a finite-dimensional real vector space has zero integral
when multiplied by any smooth compactly supported function, then `f` vanishes almost everywhere. -/
theorem ae_eq_zero_of_integral_contDiff_smul_eq_zero (hf : LocallyIntegrable f Œº)
    (h : ‚àÄ (g : E ‚Üí ‚Ñù), ContDiff ‚Ñù ‚ä§ g ‚Üí HasCompactSupport g ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = 0) :
    ‚àÄ·µê x ‚àÇŒº, f x = 0 :=
  ae_eq_zero_of_integral_smooth_smul_eq_zero ùìò(‚Ñù, E) hf
    (fun g g_diff g_supp ‚Ü¶ h g g_diff.contDiff g_supp)

/-- If two locally integrable functions on a finite-dimensional real vector space have the same
integral when multiplied by any smooth compactly supported function, then they coincide almost
everywhere. -/
theorem ae_eq_of_integral_contDiff_smul_eq
    (hf : LocallyIntegrable f Œº) (hf' : LocallyIntegrable f' Œº) (h : ‚àÄ (g : E ‚Üí ‚Ñù),
      ContDiff ‚Ñù ‚ä§ g ‚Üí HasCompactSupport g ‚Üí ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = ‚à´ x, g x ‚Ä¢ f' x ‚àÇŒº) :
    ‚àÄ·µê x ‚àÇŒº, f x = f' x :=
  ae_eq_of_integral_smooth_smul_eq ùìò(‚Ñù, E) hf hf'
    (fun g g_diff g_supp ‚Ü¶ h g g_diff.contDiff g_supp)

/-- If a function `f` locally integrable on an open subset `U` of a finite-dimensional real
  manifold has zero integral when multiplied by any smooth function compactly supported
  in an open set `U`, then `f` vanishes almost everywhere in `U`. -/
theorem IsOpen.ae_eq_zero_of_integral_contDiff_smul_eq_zero {U : Set E} (hU : IsOpen U)
    (hf : LocallyIntegrableOn f U Œº)
    (h : ‚àÄ (g : E ‚Üí ‚Ñù), ContDiff ‚Ñù ‚ä§ g ‚Üí HasCompactSupport g ‚Üí tsupport g ‚äÜ U ‚Üí
        ‚à´ x, g x ‚Ä¢ f x ‚àÇŒº = 0) :
    ‚àÄ·µê x ‚àÇŒº, x ‚àà U ‚Üí f x = 0 :=
  hU.ae_eq_zero_of_integral_smooth_smul_eq_zero ùìò(‚Ñù, E) hf
    (fun g g_diff g_supp ‚Ü¶ h g g_diff.contDiff g_supp)

end VectorSpace

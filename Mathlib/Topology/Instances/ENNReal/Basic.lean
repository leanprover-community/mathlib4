/-
Copyright (c) 2017 Johannes H√∂lzl. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Johannes H√∂lzl
-/
import Mathlib.Topology.Order.MonotoneContinuity
import Mathlib.Topology.Instances.ENNReal.Defs
import Mathlib.Topology.Metrizable.Basic
import Mathlib.Topology.Order.T5

/-!
# Topology on extended non-negative reals
-/

noncomputable section

open Filter Topology
open scoped NNReal

variable {Œ± : Type*} {Œ≤ : Type*} {Œ≥ : Type*}

namespace ENNReal

variable {a b : ‚Ñù‚â•0‚àû} {r : ‚Ñù‚â•0} {x : ‚Ñù‚â•0‚àû} {Œµ : ‚Ñù‚â•0‚àû}

open TopologicalSpace

/-- Properties of the topology on `‚Ñù‚â•0‚àû`. -/


-- short-circuit type class inference
instance : T2Space ‚Ñù‚â•0‚àû := inferInstance
instance : T5Space ‚Ñù‚â•0‚àû := inferInstance
instance : T4Space ‚Ñù‚â•0‚àû := inferInstance

instance : SecondCountableTopology ‚Ñù‚â•0‚àû :=
  orderIsoUnitIntervalBirational.toHomeomorph.isEmbedding.secondCountableTopology

instance : MetrizableSpace ENNReal :=
  orderIsoUnitIntervalBirational.toHomeomorph.isEmbedding.metrizableSpace

@[norm_cast]
theorem tendsto_coe {f : Filter Œ±} {m : Œ± ‚Üí ‚Ñù‚â•0} {a : ‚Ñù‚â•0} :
    Tendsto (fun a => (m a : ‚Ñù‚â•0‚àû)) f (ùìù ‚Üëa) ‚Üî Tendsto m f (ùìù a) :=
  isEmbedding_coe.tendsto_nhds_iff.symm

theorem nhds_coe_coe {r p : ‚Ñù‚â•0} :
    ùìù ((r : ‚Ñù‚â•0‚àû), (p : ‚Ñù‚â•0‚àû)) = (ùìù (r, p)).map fun p : ‚Ñù‚â•0 √ó ‚Ñù‚â•0 => (‚Üëp.1, ‚Üëp.2) :=
  ((isOpenEmbedding_coe.prodMap isOpenEmbedding_coe).map_nhds_eq (r, p)).symm

instance : ContinuousAdd ‚Ñù‚â•0‚àû := by
  refine ‚ü®continuous_iff_continuousAt.2 ?_‚ü©
  rintro ‚ü®_ | a, b‚ü©
  ¬∑ exact tendsto_nhds_top_mono' continuousAt_fst fun p => le_add_right le_rfl
  rcases b with (_ | b)
  ¬∑ exact tendsto_nhds_top_mono' continuousAt_snd fun p => le_add_left le_rfl
  simp only [ContinuousAt, some_eq_coe, nhds_coe_coe, ‚Üê coe_add, tendsto_map'_iff,
    Function.comp_def, tendsto_coe, tendsto_add]

instance : ContinuousInv ‚Ñù‚â•0‚àû := ‚ü®OrderIso.invENNReal.continuous‚ü©

end ENNReal

/-
Copyright (c) 2022 Kim Morrison. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Kim Morrison
-/
import Mathlib.CategoryTheory.Bicategory.Basic
import Mathlib.CategoryTheory.Monoidal.Category

/-!
# Endomorphisms of an object in a bicategory, as a monoidal category.
-/


namespace CategoryTheory

variable {C : Type*} [Bicategory C]

/-- The endomorphisms of an object in a bicategory can be considered as a monoidal category. -/
def EndMonoidal (X : C) :=
  X ‚ü∂ X -- deriving Category

-- Porting note: Deriving this fails in the definition above.
-- Adding category instance manually.
instance (X : C) : Category (EndMonoidal X) :=
  show Category (X ‚ü∂ X) from inferInstance

instance (X : C) : Inhabited (EndMonoidal X) :=
  ‚ü®ùüô X‚ü©

open Bicategory

open MonoidalCategory

open Bicategory

attribute [local simp] EndMonoidal in
instance (X : C) : MonoidalCategory (EndMonoidal X) where
  tensorObj f g := f ‚â´ g
  whiskerLeft {f _ _} Œ∑ := f ‚óÅ Œ∑
  whiskerRight {_ _} Œ∑ h := Œ∑ ‚ñ∑ h
  tensorUnit := ùüô _
  associator f g h := Œ±_ f g h
  leftUnitor f := Œª_ f
  rightUnitor f := œÅ_ f
  tensor_comp := by
    intros
    dsimp
    rw [Bicategory.whiskerLeft_comp, Bicategory.comp_whiskerRight, Category.assoc, Category.assoc,
      Bicategory.whisker_exchange_assoc]

end CategoryTheory

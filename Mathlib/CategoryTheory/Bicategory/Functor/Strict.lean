/-
Copyright (c) 2025 Calle S√∂nne. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Calle S√∂nne
-/

import Mathlib.CategoryTheory.Bicategory.Functor.Pseudofunctor

/-!
# Strict functors

In this file we define strict functors between bicategories, which are pseudofunctors such
that `mapId` and `mapComp` are given by `eqToIso _`.

Strict

-/

namespace CategoryTheory

open Category Bicategory

universe w‚ÇÅ w‚ÇÇ w‚ÇÉ v‚ÇÅ v‚ÇÇ v‚ÇÉ u‚ÇÅ u‚ÇÇ u‚ÇÉ

variable {B : Type* } [Bicategory B] {C : Type*} [Bicategory C]
--variable {D : Type u‚ÇÉ} [Bicategory.{w‚ÇÉ, v‚ÇÉ} D]

namespace Pseudofunctor

/-- A strict pseudofunctor between bicategories is one such that `mapId` and `mapComp` are
given by `eqToIso _`. -/
class IsStrict (F : Pseudofunctor B C) : Prop where
  map_id : ‚àÄ (b : B), F.map (ùüô b) = ùüô (F.obj b) := by aesop_cat
  map_comp : ‚àÄ {a b c : B} (f : a ‚ü∂ b) (g : b ‚ü∂ c), F.map (f ‚â´ g) = F.map f ‚â´ F.map g := by
    aesop_cat
  mapId : ‚àÄ (b : B), F.mapId b = eqToIso (map_id b) := by aesop_cat
  mapComp : ‚àÄ {a b c : B} (f : a ‚ü∂ b) (g : b ‚ü∂ c), F.mapComp f g = eqToIso (map_comp f g) := by
    aesop_cat

section

variable [Strict B] [Strict C]

/-- A strict pseudofunctor between strict bicategories induces a functor on the underlying
categories. -/
def toFunctor (F : Pseudofunctor B C) [Pseudofunctor.IsStrict F] : Functor B C where
  obj := F.obj
  map := F.map
  map_id := IsStrict.map_id
  map_comp := IsStrict.map_comp

end

end Pseudofunctor

end CategoryTheory

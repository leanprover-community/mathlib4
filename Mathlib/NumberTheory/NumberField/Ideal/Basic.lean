/-
Copyright (c) 2025 Xavier Roblot. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Xavier Roblot
-/
import Mathlib.NumberTheory.Cyclotomic.Rat
import Mathlib.NumberTheory.NumberField.Units.Basic

/-!
# Basic results on integral ideals of a number field

We study results about integral ideals of a number field `K`.

## Main definitions and results

* `Ideal.torsionMapQuot`: For `I` an integral ideal, the group morphism from
  the torsion of `K` to `(ùìû K ‚ß∏ I)À£`.

* `Ideal.torsionMapQuot_injective`: If the ideal `I` is nontrivial and its norm is coprime with the
  order of the torsion of `K`, then the map `Ideal.torsionMapQuot` is injective.

* `NumberField.torsionOrder_dvd_absNorm_sub_one`: If the norm of the (nonzero) prime ideal `P` is
  coprime with the order of the torsion of `K`, then the norm of `P` is congruent to `1` modulo
  `torsionOrder K`.

-/

section torsionMapQuot

open Ideal NumberField Units

variable {K : Type*} [Field K] {I : Ideal (ùìû K)}

theorem IsPrimitiveRoot.not_coprime_norm_of_mk_eq_one [NumberField K] (hI : absNorm I ‚â† 1) {n : ‚Ñï}
    {Œ∂ : K} (hn : 2 ‚â§ n) (hŒ∂ : IsPrimitiveRoot Œ∂ n)
    (h : let _ : NeZero n := NeZero.of_gt hn; Ideal.Quotient.mk I hŒ∂.toInteger = 1) :
    ¬¨ (absNorm I).Coprime n := by
  intro h‚ÇÅ
  rw [show 1 = Ideal.Quotient.mk I 1 by rfl, Ideal.Quotient.eq] at h
  obtain ‚ü®p, hp, h‚ÇÇ‚ü© := Nat.exists_prime_and_dvd hI
  have : Fact (p.Prime) := ‚ü®hp‚ü©
  refine hp.not_dvd_one <| h‚ÇÅ ‚ñ∏ Nat.dvd_gcd h‚ÇÇ ?_
  exact hŒ∂.prime_dvd_of_dvd_norm_sub_one hn <|
    Int.dvd_trans (Int.natCast_dvd_natCast.mpr h‚ÇÇ) (absNorm_dvd_norm_of_mem h)

variable (I)

/--
For `I` an integral ideal of `K`, the group morphism from the torsion of `K` to `(ùìû K ‚ß∏ I)À£`.
-/
def Ideal.torsionMapQuot : (Units.torsion K) ‚Üí* ((ùìû K) ‚ß∏ I)À£ :=
  (Units.map (Ideal.Quotient.mk I).toMonoidHom).restrict (torsion K)

@[simp]
theorem Ideal.torsionMapQuot_apply {x : (ùìû K)À£} (hx : x ‚àà torsion K) :
    torsionMapQuot I ‚ü®x, hx‚ü© = Ideal.Quotient.mk I x := rfl

variable {I} [NumberField K]

theorem Ideal.torsionMapQuot_injective (hI‚ÇÅ : absNorm I ‚â† 1)
    (hI‚ÇÇ : (absNorm I).Coprime (torsionOrder K)) :
    Function.Injective (torsionMapQuot I) := by
  refine (injective_iff_map_eq_one _).mpr fun ‚ü®Œ∂, hŒ∂‚ü© h ‚Ü¶ ?_
  rw [‚Üê rootsOfUnity_eq_torsion] at hŒ∂
  obtain ‚ü®t, ht‚ÇÄ, ht, hŒ∂‚ü© := isPrimitiveRoot_of_mem_rootsOfUnity hŒ∂
  by_cases ht' : 2 ‚â§ t
  ¬∑ exfalso
    let Œº : K := Œ∂.val
    have hŒº : IsPrimitiveRoot Œº t :=
      (IsPrimitiveRoot.coe_units_iff.mpr hŒ∂).map_of_injective RingOfIntegers.coe_injective
    rw [Units.ext_iff, torsionMapQuot_apply, Units.val_one] at h
    refine hŒº.not_coprime_norm_of_mk_eq_one hI‚ÇÅ ht' h ?_
    exact Nat.dvd_one.mp (hI‚ÇÇ ‚ñ∏ Nat.gcd_dvd_gcd_of_dvd_right (absNorm I) ht)
  ¬∑ simpa [show t = 1 by grind] using hŒ∂

/--
If the norm of the (nonzero) prime ideal `P` is coprime with the order of the torsion of `K`, then
the norm of `P` is congruent to `1` modulo `torsionOrder K`.
-/
theorem NumberField.torsionOrder_dvd_absNorm_sub_one {P : Ideal (ùìû K)} (hP‚ÇÄ : P ‚â† ‚ä•)
    (hP‚ÇÅ : P.IsPrime) (hP‚ÇÇ : (absNorm P).Coprime (torsionOrder K)) :
    torsionOrder K ‚à£ absNorm P - 1 := by
  have : P.IsMaximal := Ring.DimensionLEOne.maximalOfPrime hP‚ÇÄ hP‚ÇÅ
  let _ := Ideal.Quotient.field P
  have hP‚ÇÉ : absNorm P ‚â† 1 := absNorm_eq_one_iff.not.mpr <| IsPrime.ne_top hP‚ÇÅ
  have h := Subgroup.card_dvd_of_injective _ (torsionMapQuot_injective hP‚ÇÉ hP‚ÇÇ)
  rwa [Nat.card_eq_fintype_card, Nat.card_units] at h

end torsionMapQuot

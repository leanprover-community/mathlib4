/-
Copyright (c) 2024 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.Algebra.Category.ModuleCat.Presheaf
import Mathlib.RingTheory.Kaehler.Basic

/-!
# The presheaf of differentials of a presheaf of modules

-/


universe v v‚ÇÅ v‚ÇÇ u‚ÇÅ u‚ÇÇ u

open CategoryTheory

variable {C : Type u‚ÇÅ} [Category.{v‚ÇÅ} C] {D : Type u‚ÇÇ} [Category.{v‚ÇÇ} D]

namespace PresheafOfModules

variable {S : C·µí·µñ ‚•§ CommRingCat.{u}} {F : C ‚•§ D} {S' R : D·µí·µñ ‚•§ CommRingCat.{u}}
   (M : PresheafOfModules.{v} (R ‚ãô forget‚ÇÇ _ _))
   (œÜ : S ‚ü∂ F.op ‚ãô R) (œÜ' : S' ‚ü∂ R)

/-- Given a morphism of presheaves of commutative rings `œÜ : S ‚ü∂ F.op ‚ãô R`,
this is the type of relative `œÜ`-derivation of a presheaf of `R`-modules `M`. -/
structure Derivation where
  /-- the underlying additive map `R.obj X ‚Üí+ M.obj X` of a derivation -/
  d {X : D·µí·µñ} : R.obj X ‚Üí+ M.obj X
  d_mul {X : D·µí·µñ} (a b : R.obj X) : d (a * b) = a ‚Ä¢ d b + b ‚Ä¢ d a := by aesop_cat
  d_map {X Y : D·µí·µñ} (f : X ‚ü∂ Y) (x : R.obj X) :
    d (R.map f x) = M.map f (d x) := by aesop_cat
  d_app {X : C·µí·µñ} (a : S.obj X) : d (œÜ.app X a) = 0

namespace Derivation

attribute [simp] d_mul d_map

@[simp]
lemma d_one (d : M.Derivation œÜ) (X : D·µí·µñ) :
    d.d (X := X) 1 = 0 := by
  simpa using d.d_mul (X := X) 1 1

end Derivation

/-- Given a morphism of presheaves of commutative rings `œÜ : S ‚ü∂ R`,
this is the type of relative `œÜ`-derivation of a presheaf of `R`-modules `M`. -/
abbrev Derivation' : Type _ := M.Derivation (F := ùü≠ D) œÜ'

namespace Derivation'

@[simp]
nonrec lemma d_app (d : M.Derivation' œÜ') {X : D·µí·µñ} (a : S'.obj X) :
    d.d (œÜ'.app X a) = 0 :=
  d.d_app _

end Derivation'

end PresheafOfModules

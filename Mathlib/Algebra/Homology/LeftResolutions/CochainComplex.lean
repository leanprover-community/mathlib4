/-
Copyright (c) 2025 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.Algebra.Homology.LeftResolutions.CochainComplexMinus
import Mathlib.Algebra.Homology.Embedding.CochainComplexTrunc
import Mathlib.Algebra.Homology.PreservesQuasiIso
import Mathlib.Algebra.Homology.ObjectProperty
import Mathlib.CategoryTheory.MorphismProperty.Limits
import Mathlib.CategoryTheory.ObjectProperty.ColimitOfShape
import Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Colim

/-!
# Resolutions of unbounded complexes

-/

open CategoryTheory Limits

namespace CochainComplex

variable {A : Type*} [Category A] [Abelian A]
  [HasColimitsOfShape ‚Ñ§ A]
  (L : Minus A ‚•§ CochainComplex A ‚Ñ§)

noncomputable def leftResolution : CochainComplex A ‚Ñ§ ‚•§ CochainComplex A ‚Ñ§ :=
  filtrationLEMinusFunctor A ‚ãô (whiskeringRight _ _ _).obj L ‚ãô colim

@[simps!]
noncomputable def colimitOfShapeLeftResolutionObj (K : CochainComplex A ‚Ñ§) :
    ColimitOfShape ‚Ñ§ ((leftResolution L).obj K) :=
  ColimitOfShape.colimit _

noncomputable def objectPropertyColimitOfShapeLeftResolutionObj
    (P : ObjectProperty (CochainComplex A ‚Ñ§)) (hP : L.essImage ‚â§ P)
    (K : CochainComplex A ‚Ñ§) :
    P.ColimitOfShape ‚Ñ§ ((leftResolution L).obj K) where
  toColimitOfShape := colimitOfShapeLeftResolutionObj L K
  hF _ := hP _ (L.obj_mem_essImage _)

lemma objectPropertyColimitOfShape_leftResolution_obj
    (P : ObjectProperty (CochainComplex A ‚Ñ§)) (hP : L.essImage ‚â§ P)
    (K : CochainComplex A ‚Ñ§) :
    P.colimitOfShape ‚Ñ§ ((leftResolution L).obj K) :=
  ‚ü®objectPropertyColimitOfShapeLeftResolutionObj L P hP K‚ü©

variable {L} (Œ± : L ‚ü∂ Minus.Œπ _)

noncomputable def leftResolutionœÄ :
    leftResolution L ‚ü∂ ùü≠ _ :=
  whiskerLeft _ (whiskerRight ((whiskeringRight _ _ _).map Œ±) _) ‚â´
    (Functor.associator _ _ _).inv ‚â´
    whiskerRight (filtrationLEMinusFunctorCompWhiskeringRightObjŒπIso A).hom _ ‚â´
    (filtrationLEFunctorCompColimIso A).hom

instance quasiIso_leftResolutionœÄ_app [HasExactColimitsOfShape ‚Ñ§ A]
    [‚àÄ K, QuasiIso (Œ±.app K)] (K : CochainComplex A ‚Ñ§) :
    QuasiIso ((leftResolutionœÄ Œ±).app K) := by
  let œÜ := colimMap (((whiskeringRight _ _ _).map Œ±).app K.filtrationLEMinus)
  have : QuasiIso œÜ := (HomologicalComplex.quasiIso A (.up ‚Ñ§)).colimMap _ (fun n ‚Ü¶ by
    dsimp
    simp only [HomologicalComplex.mem_quasiIso_iff]
    infer_instance)
  dsimp only [leftResolutionœÄ]
  change QuasiIso (œÜ ‚â´ _)
  infer_instance

end CochainComplex

namespace CategoryTheory

open CochainComplex

namespace Abelian

namespace LeftResolutions

variable {A C : Type*} [Category C] [Category A]
  [Preadditive C] [HasZeroObject C] [Abelian A] {Œπ : C ‚•§ A}
  [Œπ.Full] [Œπ.Faithful] [Œπ.Additive]
  (Œõ : LeftResolutions Œπ) [Œõ.F.PreservesZeroMorphisms]
  [HasFiniteCoproducts C] [HasColimitsOfShape ‚Ñ§ A]

noncomputable def resolutionFunctor : CochainComplex A ‚Ñ§ ‚•§ CochainComplex A ‚Ñ§ :=
  CochainComplex.leftResolution (Œõ.minusResolutionFunctor ‚ãô
    Œπ.mapCochainComplexMinus ‚ãô Minus.Œπ A)

noncomputable def resolutionNatTrans : Œõ.resolutionFunctor ‚ü∂ ùü≠ _ :=
  CochainComplex.leftResolutionœÄ
    (whiskerRight Œõ.minusResolutionNatTrans (Minus.Œπ A))

instance quasiIso_resolutionNatTrans_app
    [HasExactColimitsOfShape ‚Ñ§ A] (K : CochainComplex A ‚Ñ§) :
    QuasiIso (Œõ.resolutionNatTrans.app K) := by
  dsimp [resolutionNatTrans]
  infer_instance

noncomputable def colimitOfShapeResolutionFunctorObj (K : CochainComplex A ‚Ñ§) :
    Œπ.essImage.cochainComplexMinus.ColimitOfShape ‚Ñ§ (Œõ.resolutionFunctor.obj K) :=
  objectPropertyColimitOfShapeLeftResolutionObj _ _ (by
    rintro M ‚ü®X, ‚ü®e‚ü©‚ü©
    rw [‚Üê Œπ.essImage.cochainComplexMinus.prop_iff_of_iso e]
    exact ‚ü®fun _ ‚Ü¶ Functor.obj_mem_essImage _ _, ObjectProperty.prop_Œπ_obj _ _‚ü©) K

end LeftResolutions

end Abelian

end CategoryTheory

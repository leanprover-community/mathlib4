/-
Copyright (c) 2025 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.Algebra.Homology.BifunctorCommShift
import Mathlib.Algebra.Homology.BifunctorMappingCone
import Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated

/-!
# Bifunctors acting of the homotopy category are triangulated in each variable

-/

open CategoryTheory Category Limits Pretriangulated

variable {C‚ÇÅ C‚ÇÇ D : Type*} [Category C‚ÇÅ] [Category C‚ÇÇ] [Category D]

namespace CochainComplex

open HomComplex

section

variable [Preadditive C‚ÇÅ] [HasBinaryBiproducts C‚ÇÅ]
  [HasZeroMorphisms C‚ÇÇ] [Preadditive D] [HasBinaryBiproducts D]
  (F : C‚ÇÅ ‚•§ C‚ÇÇ ‚•§ D) [F.Additive]
  [‚àÄ (X‚ÇÅ : C‚ÇÅ), (F.obj X‚ÇÅ).PreservesZeroMorphisms]
  [‚àÄ (K‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§) (K‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§), HasMapBifunctor K‚ÇÅ K‚ÇÇ F]

noncomputable def bifunctorMapCochainComplexFlipObjMapMappingConeTriangleIso
    {K‚ÇÅ L‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§} (f : K‚ÇÅ ‚ü∂ L‚ÇÅ) (K‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§) :
    (F.bifunctorMapCochainComplex.flip.obj K‚ÇÇ).mapTriangle.obj (mappingCone.triangle f) ‚âÖ
      mappingCone.triangle (HomologicalComplex.mapBifunctorMap f (ùüô K‚ÇÇ) F (.up ‚Ñ§)) :=
  Triangle.isoMk _ _ (Iso.refl _) (Iso.refl _) (mapBifunctorMappingCone‚ÇÅIso f K‚ÇÇ F)
    (by simp) (by simp) (by
      dsimp
      ext n p q hpq
      dsimp at hpq
      simp [mappingCone.triangle, Cochain.rightShift_v _ _ _ (zero_add 1) p p (add_zero p) _ rfl,
        Cochain.rightShift_v _ _ _ (zero_add 1) n n (add_zero n) _ rfl,
        mapBifunctorMappingCone‚ÇÅIso.hom,
        mapBifunctorMappingCone‚ÇÅIso.Œπ_p‚ÇÅ‚ÇÄ_v _ _ _ p q n hpq _ rfl _ rfl,
        bifunctorMapCochainComplex_flip_obj_commShiftIso_hom_app,
        mapBifunctorShift‚ÇÅIso, HomologicalComplex‚ÇÇ.totalShift‚ÇÅIso,
        HomologicalComplex‚ÇÇ.totalShift‚ÇÅXIso])

end

section

variable [HasZeroMorphisms C‚ÇÅ]
  [Preadditive C‚ÇÇ] [HasBinaryBiproducts C‚ÇÇ] [Preadditive D] [HasBinaryBiproducts D]
  (F : C‚ÇÅ ‚•§ C‚ÇÇ ‚•§ D) [F.PreservesZeroMorphisms]
  [‚àÄ (X‚ÇÅ : C‚ÇÅ), (F.obj X‚ÇÅ).Additive]
  [‚àÄ (K‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§) (K‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§), HasMapBifunctor K‚ÇÅ K‚ÇÇ F]

noncomputable def bifunctorMapCochainComplexObjMapMappingConeTriangleIso
    (K‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§) {K‚ÇÇ L‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§} (f : K‚ÇÇ ‚ü∂ L‚ÇÇ) :
    (F.bifunctorMapCochainComplex.obj K‚ÇÅ).mapTriangle.obj (mappingCone.triangle f) ‚âÖ
      mappingCone.triangle (HomologicalComplex.mapBifunctorMap (ùüô K‚ÇÅ) f F (.up ‚Ñ§)) :=
  Triangle.isoMk _ _ (Iso.refl _) (Iso.refl _) (mapBifunctorMappingCone‚ÇÇIso K‚ÇÅ f F)
    (by simp) (by simp) (by
      dsimp
      ext n p q hpq
      dsimp at hpq
      simp [mappingCone.triangle, Cochain.rightShift_v _ _ _ (zero_add 1) q q (add_zero q) _ rfl,
        Cochain.rightShift_v _ _ _ (zero_add 1) n n (add_zero n) _ rfl,
        mapBifunctorMappingCone‚ÇÇIso.hom,
        mapBifunctorMappingCone‚ÇÇIso.Œπ_p‚ÇÅ‚ÇÄ_v _ _ _ p q n hpq _ rfl _ rfl,
        bifunctorMapCochainComplex_obj_commShiftIso_hom_app,
        mapBifunctorShift‚ÇÇIso, HomologicalComplex‚ÇÇ.totalShift‚ÇÇIso,
        HomologicalComplex‚ÇÇ.totalShift‚ÇÇXIso])

end

end CochainComplex

namespace HomotopyCategory

section

variable [Preadditive C‚ÇÅ] [Preadditive C‚ÇÇ] [Preadditive D] [HasBinaryBiproducts D]
  [HasZeroObject D]
   (F : C‚ÇÅ ‚•§ C‚ÇÇ ‚•§ D) [F.Additive]
  [‚àÄ (X‚ÇÅ : C‚ÇÅ), (F.obj X‚ÇÅ).Additive]
  [‚àÄ (K‚ÇÅ : CochainComplex C‚ÇÅ ‚Ñ§) (K‚ÇÇ : CochainComplex C‚ÇÇ ‚Ñ§), CochainComplex.HasMapBifunctor K‚ÇÅ K‚ÇÇ F]

instance (K‚ÇÅ : HomotopyCategory C‚ÇÅ (.up ‚Ñ§)) [HasZeroObject C‚ÇÇ] [HasBinaryBiproducts C‚ÇÇ] :
    ((F.bifunctorMapHomotopyCategory (.up ‚Ñ§) (.up ‚Ñ§) (.up ‚Ñ§)).obj K‚ÇÅ).IsTriangulated := by
  obtain ‚ü®K‚ÇÅ, rfl‚ü© := K‚ÇÅ.quotient_obj_surjective
  rw [functor_from_isTriangulated_iff]
  intro K‚ÇÇ L‚ÇÇ f
  exact isomorphic_distinguished _ (mappingCone_triangleh_distinguished
    (HomologicalComplex.mapBifunctorMap (ùüô K‚ÇÅ) f F (ComplexShape.up ‚Ñ§))) _
      ((Functor.mapTriangleCompIso _ _).symm.app _ ‚â™‚â´
        (Functor.mapTriangleIso
          (F.quotientCompBifunctorMapHomotopyObjIso (.up ‚Ñ§) (.up ‚Ñ§) (.up ‚Ñ§) K‚ÇÅ)).app _ ‚â™‚â´
        (Functor.mapTriangleCompIso _ _).app _ ‚â™‚â´ (quotient D (.up ‚Ñ§)).mapTriangle.mapIso
        (CochainComplex.bifunctorMapCochainComplexObjMapMappingConeTriangleIso F K‚ÇÅ f))

instance (K‚ÇÇ : HomotopyCategory C‚ÇÇ (.up ‚Ñ§)) [HasZeroObject C‚ÇÅ] [HasBinaryBiproducts C‚ÇÅ] :
    ((F.bifunctorMapHomotopyCategory (.up ‚Ñ§) (.up ‚Ñ§) (.up ‚Ñ§)).flip.obj K‚ÇÇ).IsTriangulated := by
  obtain ‚ü®K‚ÇÇ, rfl‚ü© := K‚ÇÇ.quotient_obj_surjective
  rw [functor_from_isTriangulated_iff]
  intro K‚ÇÅ L‚ÇÅ f
  exact isomorphic_distinguished _ (mappingCone_triangleh_distinguished
    (HomologicalComplex.mapBifunctorMap f (ùüô K‚ÇÇ) F (ComplexShape.up ‚Ñ§))) _
      ((Functor.mapTriangleCompIso _ _).symm.app _ ‚â™‚â´
        (Functor.mapTriangleIso
          (F.quotientCompBifunctorMapHomotopyFlipObjIso (.up ‚Ñ§) (.up ‚Ñ§) (.up ‚Ñ§) K‚ÇÇ)).app _ ‚â™‚â´
        (Functor.mapTriangleCompIso _ _).app _  ‚â™‚â´ (quotient D (.up ‚Ñ§)).mapTriangle.mapIso
        (CochainComplex.bifunctorMapCochainComplexFlipObjMapMappingConeTriangleIso F f K‚ÇÇ))

end

end HomotopyCategory

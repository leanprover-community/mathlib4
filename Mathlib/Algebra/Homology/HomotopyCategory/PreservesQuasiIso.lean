/-
Copyright (c) 2025 Jo√´l Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/
import Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated
import Mathlib.Algebra.Homology.DerivedCategory.Basic

/-!
# Functors between homotopy categories which preserves quasi-isomorphisms

-/

open CategoryTheory Limits ZeroObject Pretriangulated

namespace HomotopyCategory

variable {C‚ÇÅ C‚ÇÇ : Type*} [Category C‚ÇÅ] [Category C‚ÇÇ] [Abelian C‚ÇÅ] [Abelian C‚ÇÇ]
  (F : HomotopyCategory C‚ÇÅ (.up ‚Ñ§) ‚•§ HomotopyCategory C‚ÇÇ (.up ‚Ñ§))
  [F.CommShift ‚Ñ§] [F.IsTriangulated]

lemma preservesQuasiIso_iff_preserves_acyclic :
    preservesQuasiIso F ‚Üî
      subcategoryAcyclic C‚ÇÅ ‚â§ (subcategoryAcyclic C‚ÇÇ).inverseImage F := by
  constructor
  ¬∑ intro hF K hK
    have hf : quasiIso _ _ (0 : 0 ‚ü∂ K) := by
      rw [quasiIso_eq_subcategoryAcyclic_trW, ObjectProperty.trW_iff]
      refine ‚ü®K, ùüô K, 0, isomorphic_distinguished _
        (inv_rot_of_distTriang _ (contractible_distinguished K)) _ ?_, hK‚ü©
      exact Triangle.isoMk _ _ ((Functor.mapZeroObject _).symm)
        (Iso.refl _) (Iso.refl _) (by simp) (by simp) (by simp)
    replace hf := hF _ hf
    simp only [MorphismProperty.inverseImage_iff,
      quasiIso_eq_subcategoryAcyclic_trW] at hf
    rw [ObjectProperty.trW_iff] at hf
    obtain ‚ü®Z, g, h, hT, hZ‚ü© := hf
    simp only [ObjectProperty.prop_inverseImage_iff]
    have := (subcategoryAcyclic C‚ÇÇ).ext_of_isTriangulatedClosed‚ÇÇ _ hT
    exact (subcategoryAcyclic C‚ÇÇ).ext_of_isTriangulatedClosed‚ÇÇ _ hT
      (ObjectProperty.prop_of_isZero _ (F.map_isZero (isZero_zero _))) hZ
  ¬∑ intro hF K L f hf
    simp only [MorphismProperty.inverseImage_iff,
      quasiIso_eq_subcategoryAcyclic_trW] at hf ‚ä¢
    rw [ObjectProperty.trW_iff] at hf
    obtain ‚ü®Z, g, h, hT, hZ‚ü© := hf
    exact ObjectProperty.trW.mk _ (F.map_distinguished _ hT) (hF _ hZ)

end HomotopyCategory

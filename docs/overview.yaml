General algebra:
  Category theory:
    category: 'CategoryTheory.Category'
    small category: 'CategoryTheory.SmallCategory'
    functor: 'CategoryTheory.Functor'
    natural transformation: 'CategoryTheory.NatTrans'
    Yoneda embedding: 'CategoryTheory.yoneda'
    adjunction: 'CategoryTheory.Adjunction'
    monad: 'CategoryTheory.Monad'
    comma category: 'CategoryTheory.Comma'
    limits: 'CategoryTheory.Limits.IsLimit'
    presheafed space: 'AlgebraicGeometry.PresheafedSpace'
    sheafed space: 'AlgebraicGeometry.SheafedSpace'
    monoidal category: 'CategoryTheory.MonoidalCategory'
    cartesian closed: 'CategoryTheory.CartesianClosed'
    abelian category: 'CategoryTheory.Abelian'

  Numbers:
    natural number: 'Nat'
    integer: 'Int'
    rational number: 'Rat'
    continued fraction: 'ContinuedFraction'
    real number: 'Real'
    extended real number: 'EReal'
    complex number: 'Complex'
    "$p$-adic number": 'Padic'
    "$p$-adic integer": 'PadicInt'
    hyper-real number: 'Hyperreal'

  Group theory:
    group: 'Group'
    group morphism: 'MonoidHom'
    group action: 'MulAction'
    class formula: 'MulAction.selfEquivSigmaOrbitsQuotientStabilizer'
    Burnside lemma: 'MulAction.sum_card_fixedBy_eq_card_orbits_mul_card_group'
    subgroup: 'Subgroup'
    subgroup generated by a subset: 'Subgroup.closure'
    quotient group: 'QuotientGroup.Quotient.group'
    first isomorphism theorem: 'QuotientGroup.quotientKerEquivRange'
    second isomorphism theorem: 'QuotientGroup.quotientInfEquivProdNormalQuotient'
    third isomorphism theorem: 'QuotientGroup.quotientQuotientEquivQuotient'
    abelianization: 'Abelianization'
    free group: 'FreeGroup'
    presented group: 'PresentedGroup'
    Schreier's lemma: 'Subgroup.closure_mul_image_eq'
    cyclic group: 'IsCyclic'
    nilpotent group: 'Group.IsNilpotent'
    permutation group of a type: 'Equiv.Perm'
    structure of fintely generated abelian groups: 'AddCommGroup.equiv_free_prod_directSum_zmod'

  Rings:
    ring: 'Ring'
    ring morphism: 'RingHom'
    the category of rings: 'RingCat'
    subring: 'Subring'
    localization: 'Localization'
    local ring: 'LocalRing'
    noetherian ring: 'IsNoetherianRing'
    ordered ring: 'OrderedRing'

  Ideals and quotients:
    ideal of a commutative ring: 'Ideal'
    quotient ring: 'Ideal.instHasQuotientIdealToSemiringToCommSemiring'
    prime ideal: 'Ideal.IsPrime'
    maximal ideal: 'Ideal.IsMaximal'
    Chinese remainder theorem: 'Ideal.quotientInfRingEquivPiQuotient'
    fractional ideal: 'FractionalIdeal'
    first isomorphism theorem for commutative rings: 'RingHom.quotientKerEquivOfSurjective'

  Divisibility in integral domains:
    irreducible element: 'Irreducible'
    coprime element: 'IsCoprime'
    unique factorisation domain: 'UniqueFactorizationMonoid'
    greatest common divisor: 'GCDMonoid.gcd'
    least common multiple: 'GCDMonoid.lcm'
    principal ideal domain: 'Submodule.IsPrincipal'
    Euclidean domain: 'EuclideanDomain'
    Euclid's' algorithm: 'Nat.xgcd'
    Euler's totient function ($\varphi$): 'Nat.totient'
    Lucas-Lehmer primality test: 'lucas_lehmer_sufficiency'

  Polynomials and power series:
    polynomial in one indeterminate: 'Polynomial'
    roots of a polynomial: 'Polynomial.roots'
    multiplicity: 'Polynomial.rootMultiplicity'
    separable polynomial: 'Polynomial.Separable'
    $K[X]$ is Euclidean: 'Polynomial.instEuclideanDomainPolynomialToSemiringToDivisionSemiringToSemifield'
    Hilbert basis theorem: 'Polynomial.isNoetherianRing'
    $A[X]$ has gcd and lcm if $A$ does: 'Polynomial.normalizedGcdMonoid'
    $A[{X_i}]$ is a UFD when $A$ is a UFD: 'MvPolynomial.instUniqueFactorizationMonoidMvPolynomialToCommSemiringToCancelCommMonoidWithZeroCommSemiringInstIsDomainMvPolynomialToCommSemiringToSemiringCommSemiring'
    irreducible polynomial: 'Irreducible'
    Eisenstein's criterion: 'Polynomial.irreducible_of_eisenstein_criterion'
    polynomial in several indeterminates: 'MvPolynomial'
    power series: 'PowerSeries'

  Algebras over a ring:
    associative algebra over a commutative ring: 'Algebra'
    the category of algebras over a ring: 'AlgebraCat'
    free algebra of a commutative ring: 'FreeAlgebra'
    tensor product of algebras: 'Algebra.TensorProduct.instAlgebra'
    tensor algebra of a commutative ring: 'TensorAlgebra'
    Lie algebra: 'LieAlgebra'
    exterior algebra: 'ExteriorAlgebra'
    Clifford algebra: 'CliffordAlgebra'

  Field theory:
    field: 'Field'
    characteristic of a ring: 'ringChar'
    characteristic zero: 'CharZero'
    characteristic p: 'CharP'
    Frobenius morphism: 'frobenius'
    algebraically closed field: 'IsAlgClosed'
    existence of algebraic closure of a field: 'AlgebraicClosure'
    $\C$ is algebraically closed: 'Complex.exists_root'
    field of fractions of an integral domain: 'IsFractionRing'
    algebraic extension: 'Algebra.IsAlgebraic'
    rupture field: 'AdjoinRoot'
    splitting field: 'Polynomial.SplittingField'
    perfect closure: 'PerfectClosure'
    Galois correspondence: 'IsGalois.intermediateFieldEquivSubgroup'
    Abel-Ruffini theorem (one direction): 'solvableByRad.isSolvable'

  Homological algebra:
    chain complex: 'ChainComplex'
    functorial homology: 'HomologicalComplex.homology'

  Number theory:
    sum of two squares: 'Nat.Prime.sq_add_sq'
    sum of four squares: 'Nat.sum_four_squares'
    quadratic reciprocity: 'legendreSym.quadratic_reciprocity'
    "solutions to Pell's equation": 'Pell.pell'
    "Matiyaseviƒç's theorem": 'Pell.matiyasevic'
    arithmetic functions: 'Nat.ArithmeticFunction'
    Bernoulli numbers: 'bernoulli'
    Chevalley-Warning theorem: 'char_dvd_card_solutions'
    "Hensel's lemma (for $\\mathbb{Z}_p$)": 'hensels_lemma'
    ring of Witt vectors: 'WittVector'
    perfection of a ring: 'Ring.Perfection'
  Transcendental numbers:
    Liouville's theorem on existence of transcendental numbers: 'transcendental_liouvilleNumber'

  Algebraic Number Theory:
    Finiteness of the class number: 'NumberField.RingOfIntegers.instFintypeClassGroup'
    Dirichlet unit theorem: 'NumberField.Units.exist_unique_eq_mul_prod'

  Representation theory:
    representation : 'Representation'
    category of finite dimensional representations : 'FdRep'
    character : 'FdRep.character'
    orthogonality of characters : 'FdRep.char_orthonormal'

Linear algebra:
  Fundamentals:
    module: 'Module'
    linear map: 'LinearMap'
    the category of modules over a ring: 'ModuleCat'
    vector space: 'Module'
    quotient space: 'Submodule.hasQuotient'
    tensor product: 'TensorProduct'
    noetherian module: 'IsNoetherian'
    basis: 'Basis'
    multilinear map: 'MultilinearMap'
    alternating map: 'AlternatingMap'
    general linear group: 'LinearMap.GeneralLinearGroup'
  Duality:
    dual vector space: 'Module.Dual'
    dual basis: 'Basis.dualBasis'
  Finite-dimensional vector spaces:
    finite-dimensionality : 'FiniteDimensional'
    isomorphism with $K^n$: 'Basis.equivFun'
    isomorphism with bidual: 'Module.evalEquiv'
  Finitely generated modules over a PID:
    structure theorem: 'Module.equiv_free_prod_directSum'
  Matrices:
    ring-valued matrix: 'Matrix'
    matrix representation of a linear map: 'LinearMap.toMatrix'
    determinant: 'Matrix.det'
    invertibility: 'Matrix.inv'
  Endomorphism polynomials:
    minimal polynomial: 'minpoly'
    characteristic polynomial: 'Matrix.charpoly'
    Cayley-Hamilton theorem: 'Matrix.aeval_self_charpoly'
  Structure theory of endomorphisms:
    eigenvalue: 'Module.End.HasEigenvalue'
    eigenvector: 'Module.End.HasEigenvector'
    existence of an eigenvalue: 'Module.End.exists_eigenvalue'
  Bilinear and quadratic forms:
    bilinear form: 'BilinForm'
    alternating bilinear form: 'BilinForm.IsAlt'
    symmetric bilinear form: 'BilinForm.IsSymm'
    matrix representation: 'BilinForm.toMatrix'
    quadratic form: 'QuadraticForm'
    polar form of a quadratic: 'QuadraticForm.polar'
  Finite-dimensional inner product spaces (see also Hilbert spaces, below):
    existence of orthonormal basis: 'OrthonormalBasis'
    diagonalization of self-adjoint endomorphisms: 'LinearMap.IsSymmetric.eigenvectorBasis_apply_self_apply'

Topology:
  General topology:
    filter: 'Filter'
    limit of a map with respect to filters: 'Filter.Tendsto'
    topological space: 'TopologicalSpace'
    continuous function: 'Continuous'
    the category of topological spaces: 'TopCat'
    induced topology: 'TopologicalSpace.induced'
    open map: 'IsOpenMap'
    closed map: 'IsClosedMap'
    closure: 'closure'
    cluster point: 'ClusterPt'
    Hausdorff space: 'T2Space'
    sequential space: 'SequentialSpace'
    extension by continuity: 'DenseInducing.extend'
    compactness in terms of filters: 'IsCompact'
    compactness in terms of open covers (Borel-Lebesgue): 'isCompact_iff_finite_subcover'
    connectedness: 'ConnectedSpace'
    compact open topology: 'ContinuousMap.compactOpen'
    Stone-Cech compactification: 'StoneCech'
    topological fiber bundle: 'FiberBundle'
    topological vector bundle: 'VectorBundle'
    Urysohn's lemma: 'exists_continuous_zero_one_of_closed'
    Stone-Weierstrass theorem: 'ContinuousMap.subalgebra_topologicalClosure_eq_top_of_separatesPoints'
  Uniform notions:
    uniform space: 'UniformSpace'
    uniformly continuous function: 'Metric.uniformContinuous_iff'
    uniform convergence: 'TendstoUniformly'
    Cauchy filter: 'Cauchy'
    Cauchy sequence: 'CauchySeq'
    completeness: 'CompleteSpace'
    completion: 'UniformSpace.Completion'
    Heine-Cantor theorem: 'CompactSpace.uniformContinuous_of_continuous'
  Topological algebra:
    order topology: 'OrderTopology'
    intermediate value theorem: 'intermediate_value_Icc'
    extreme value theorem: 'IsCompact.exists_forall_le'
    limit infimum and supremum: 'order/liminf_limsup.html'
    topological group: 'TopologicalGroup'
    completion of an abelian topological group: 'UniformSpace.Completion.instAddCommGroupCompletion'
    infinite sum: 'HasSum'
    topological ring: 'TopologicalRing'
    completion of a topological ring: 'UniformSpace.Completion.ring'
    topological module: 'ContinuousSMul'
    continuous linear map: 'ContinuousLinearMap'
    Haar measure on a locally compact Hausdorff group: 'MeasureTheory.Measure.haarMeasure'
  Metric spaces:
    metric space: 'MetricSpace'
    ball: 'Metric.ball'
    sequential compactness is equivalent to compactness (Bolzano-Weierstrass): 'UniformSpace.isCompact_iff_isSeqCompact'
    Heine-Borel theorem (proper metric space version): 'Metric.isCompact_iff_isClosed_bounded'
    Lipschitz continuity: 'LipschitzWith'
    H√∂lder continuity: 'HolderWith'
    contraction mapping theorem: 'ContractingWith.exists_fixedPoint'
    Baire theorem: 'dense_iInter_of_open'
    Arzela-Ascoli theorem: 'BoundedContinuousFunction.arzela_ascoli'
    Hausdorff distance: 'EMetric.hausdorffEdist'
    Gromov-Hausdorff space: 'GromovHausdorff.GHSpace'

Analysis:
  Topological vector spaces:
    local convexity: 'LocallyConvexSpace'
    Bornology: 'Bornology'
    weak-* topology for dualities: 'WeakBilin.instTopologicalSpace'

  Normed vector spaces/Banach spaces:
    normed vector space over a normed field: 'NormedSpace'
    topology on a normed vector space: 'NormedSpace.boundedSMul'
    equivalence of norms in finite dimension: 'LinearEquiv.toContinuousLinearEquiv'
    finite dimensional normed spaces over complete normed fields are complete: 'Submodule.complete_of_finiteDimensional'
    Heine-Borel theorem (finite dimensional normed spaces are proper): 'FiniteDimensional.proper'
    norm of a continuous linear map: 'LinearMap.mkContinuous'
    Banach-Steinhaus theorem: 'banach_steinhaus'
    Banach open mapping theorem: 'ContinuousLinearMap.isOpenMap'
    absolutely convergent series in Banach spaces: 'summable_of_summable_norm'
    Hahn-Banach theorem: 'exists_extension_norm_eq'
    dual of a normed space: 'NormedSpace.Dual'
    isometric inclusion in double dual: 'NormedSpace.inclusionInDoubleDualLi'
    completeness of spaces of bounded continuous functions: 'BoundedContinuousFunction.instCompleteSpaceBoundedContinuousFunctionToUniformSpaceInstPseudoMetricSpaceBoundedContinuousFunction'

  Hilbert spaces:
    Inner product space, over $R$ or $C$: 'InnerProductSpace'
    Cauchy-Schwarz inequality: 'inner_mul_inner_self_le'
    adjoint operator: 'LinearPMap.adjoint'
    self-adjoint operator: 'IsSelfAdjoint'
    orthogonal projection: 'orthogonalProjection'
    reflection: 'reflection'
    orthogonal complement: 'Submodule.orthogonal'
    existence of Hilbert basis: 'exists_hilbertBasis'
    eigenvalues from Rayleigh quotient: 'IsSelfAdjoint.hasEigenvector_of_isLocalExtrOn'
    Fr√©chet-Riesz representation of the dual of a Hilbert space: 'InnerProductSpace.toDual'
    Lax-Milgram theorem: 'IsCoercive.continuousLinearEquivOfBilin'

  Differentiability:
    differentiable function between normed vector spaces: 'HasFDerivAt'
    derivative of a composition of functions: 'HasFDerivAt.comp'
    derivative of the inverse of a function: 'HasFDerivAt.of_local_left_inverse'
    Rolle's theorem: 'exists_deriv_eq_zero'
    mean value theorem: 'exists_ratio_deriv_eq_ratio_slope'
    Taylor's theorem: 'analysis/calculus/taylor.html'
    $C^k$ function: 'ContDiff'
    Leibniz formula: 'fderiv_mul'
    local extrema: 'IsLocalMin.fderiv_eq_zero'
    inverse function theorem: 'HasStrictFDerivAt.to_localInverse'
    implicit function theorem: 'ImplicitFunctionData.implicitFunction'
    analytic function: 'AnalyticAt'

  Convexity:
    convex function: 'ConvexOn'
    characterization of convexity: 'convexOn_of_deriv2_nonneg'
    Jensen's inequality (finite sum version): 'ConvexOn.map_sum_le'
    Jensen's inequality (integral version): 'ConvexOn.map_integral_le'
    convexity inequalities: 'analysis/mean_inequalities.html'
    Carath√©odory's theorem: 'convexHull_eq_union'

  Special functions:
    logarithm: 'Real.log'
    exponential: 'Real.exp'
    trigonometric functions: 'Real.sin'
    inverse trigonometric functions: 'Real.arcsin'
    hyperbolic trigonometric functions: 'Real.sinh'
    inverse hyperbolic trigonometric functions: 'Real.arsinh'

  Measures and integral calculus:
    sigma-algebra: 'MeasurableSpace'
    measurable function: 'Measurable'
    the category of measurable spaces: 'MeasCat'
    Borel sigma-algebra: 'BorelSpace'
    positive measure: 'MeasureTheory.Measure'
    Stieltjes measure: 'StieltjesFunction.measure'
    Lebesgue measure: 'Real.measureSpace'
    Hausdorff measure: 'MeasureTheory.Measure.hausdorffMeasure'
    Hausdorff dimension: 'dimH'
    Giry monad: 'MeasureTheory.Measure.instMeasurableSpace'
    integral of positive measurable functions: 'MeasureTheory.lintegral'
    monotone convergence theorem: 'MeasureTheory.lintegral_iInf_ae'
    Fatou's lemma: 'MeasureTheory.lintegral_liminf_le'
    vector-valued integrable function (Bochner integral): 'MeasureTheory.Integrable'
    uniform integrability: 'MeasureTheory.UniformIntegrable'
    $L^p$ space: 'MeasureTheory.Lp'
    Bochner integral: 'MeasureTheory.integral'
    dominated convergence theorem: 'MeasureTheory.tendsto_integral_of_dominated_convergence'
    fundamental theorem of calculus, part 1: 'intervalIntegral.integral_hasFDerivAt_of_tendsto_ae'
    fundamental theorem of calculus, part 2: 'intervalIntegral.integral_eq_sub_of_hasDeriv_right_of_le'
    Fubini's theorem: 'MeasureTheory.integral_prod'
    product of finitely many measures: 'MeasureTheory.Measure.pi'
    convolution: 'convolution'
    approximation by convolution: 'ContDiffBump.convolution_tendsto_right'
    regularization by convolution: 'HasCompactSupport.contDiff_convolution_left'
    change of variables formula: 'MeasureTheory.integral_image_eq_integral_abs_det_fderiv_smul'
    divergence theorem: 'MeasureTheory.integral_divergence_of_hasFDerivWithinAt_off_countable'

  Complex analysis:
    Cauchy integral formula: 'DiffContOnCl.circleIntegral_sub_inv_smul'
    Liouville theorem: 'Differentiable.apply_eq_apply_of_bounded'
    maximum modulus principle: 'Complex.eventually_eq_of_isLocalMax_norm'
    principle of isolated zeros: 'AnalyticAt.eventually_eq_zero_or_eventually_ne_zero'
    principle of analytic continuation: 'AnalyticOn.eqOn_of_preconnected_of_frequently_eq'
    analyticity of holomorphic functions: 'DifferentiableOn.analyticAt'
    Schwarz lemma: 'Complex.abs_le_abs_of_mapsTo_ball_self'
    removable singularity: 'Complex.differentiableOn_update_limUnder_insert_of_isLittleO'
    Phragmen-Lindel√∂f principle: 'PhragmenLindelof.horizontal_strip'
    fundamental theorem of algebra: 'Complex.isAlgClosed'

  Distribution theory:
    Schwartz space: 'SchwartzMap'

Probability Theory:
  Definitions in probability theory:
    probability measure: 'MeasureTheory.IsProbabilityMeasure'
    independent events: 'ProbabilityTheory.iIndepSet'
    independent sigma-algebras: 'ProbabilityTheory.iIndep'
    conditional probability: 'ProbabilityTheory.cond'
    conditional expectation: 'MeasureTheory.condexp'
  Random variables and their laws:
    discrete law: 'PMF'
    probability density function: 'MeasureTheory.HasPDF'
    variance of a real-valued random variable: 'ProbabilityTheory.variance'
    independence of random variables: 'ProbabilityTheory.iIndepFun'
    Kolmogorov's $0$-$1$ law: 'ProbabilityTheory.measure_zero_or_one_of_measurableSet_limsup_atTop'
    mean of product of independent random variables: 'ProbabilityTheory.IndepFun.integral_mul_of_integrable'
    moment of a random variable: 'ProbabilityTheory.moment'
    Bernoulli law: 'PMF.bernoulli'
  Convergence of a sequence of random variables:
    convergence in probability: 'MeasureTheory.TendstoInMeasure'
    $\mathrm{L}^p$ convergence: 'MeasureTheory.Lp'
    almost sure convergence: 'MeasureTheory.Measure.ae'
    convergence in distribution: 'MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_integral_tendsto'
    Markov inequality: 'MeasureTheory.mul_meas_ge_le_lintegral'
    Chebychev inequality: 'ProbabilityTheory.meas_ge_le_variance_div_sq'
    strong law of large numbers: 'ProbabilityTheory.strong_law_ae'
  Stochastic Processes:
    martingale: 'MeasureTheory.Martingale'
    optional stopping theorem: 'MeasureTheory.submartingale_iff_expected_stoppedValue_mono'
    stopping time: 'MeasureTheory.IsStoppingTime'
    hitting time: 'MeasureTheory.hitting'

Geometry:
  Affine and Euclidean geometry:
    affine space: 'AddTorsor'
    affine function: 'AffineMap'
    affine subspace: 'AffineSubspace'
    barycenter: 'Finset.affineCombination'
    affine span: 'affineSpan'
    Euclidean affine space: 'NormedAddTorsor'
    angle: 'InnerProductGeometry.angle'

  Differentiable manifolds:
    smooth manifold (with boundary and corners): 'SmoothManifoldWithCorners'
    smooth map between manifolds: 'MDifferentiableAt'
    tangent bundle: 'TangentBundle'
    tangent map: 'tangentMap'
    Lie group: 'LieGroup'
    sphere: 'smoothMfldWithCorners'

  Algebraic geometry:
    prime spectrum: 'PrimeSpectrum'
    Zariski topology: 'PrimeSpectrum.zariskiTopology'
    locally ringed space: 'AlgebraicGeometry.LocallyRingedSpace'
    scheme: 'AlgebraicGeometry.Scheme'
    Nullstellensatz : 'MvPolynomial.vanishingIdeal_zeroLocus_eq_radical'

Combinatorics:
  Graph theory:
    simple graph: 'SimpleGraph'
    degree-sum formula: 'SimpleGraph.sum_degrees_eq_twice_card_edges'
    matching: 'SimpleGraph.Subgraph.IsMatching'
    adjacency matrix: 'SimpleGraph.adjMatrix'
  Pigeonhole principles:
    finite: 'Fintype.exists_ne_map_eq_of_card_lt'
    infinite: 'Finite.exists_infinite_fiber'
    strong pigeonhole principle: 'Fintype.exists_lt_card_fiber_of_mul_lt_card'
  Transversals:
    Hall's marriage theorem: 'Finset.all_card_le_biUnion_card_iff_exists_injective'

Dynamics:
  Circle dynamics:
    translation number: 'CircleDeg1Lift.translationNumber'
    translation numbers define a group action up to semiconjugacy:
      'CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq'
    translation number defines a homeomorphism up to semiconjugacy:
      'CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq'
  General theory:
    omega-limit sets: 'omegaLimit'
    fixed points: 'Function.fixedPoints'
    periodic points: 'Function.periodicPts'

Data structures:
  List-like structures:
    list: 'List'
    array: 'Array'
    # buffer: 'buffer'
    difference list: 'Std.DList'
    lazy list: 'LazyList'
    stream: 'Stream'''
    sequence: 'Stream''.Seq'
    weak sequence: 'Stream''.WSeq'

  Sets:
    set: 'Set'
    finite set: 'Finset'
    multiset: 'Multiset'
    ordered set: 'Ordset'

  Maps:
    key-value map: 'AList'
    red-black map: 'Std.RBMap'
    hash map: 'Std.HashMap'
    finitely supported function: 'Finsupp'
    finite map: 'Finmap'

  Trees:
    tree: 'Tree'
    red-black tree: 'Std.RBSet'
    size-balanced binary search tree: 'Ordnode'
    W type: 'WType'

Logic and computation:
  Computability:
    computable function: 'Computable'
    Turing machine: 'Turing.TM0.Machine'
    halting problem: 'ComputablePred.halting_problem'
    Rice theorem: 'ComputablePred.rice'
    combinatorial game: 'SetTheory.Game'
  Set theory:
    ordinal: 'Ordinal'
    cardinal: 'Cardinal'
    model of ZFC: 'ZFSet'
  Model theory:
    first-order structure: 'FirstOrder.Language.Structure'
    first-order formula: 'FirstOrder.Language.Formula'
    satisfiability: 'FirstOrder.Language.Theory.IsSatisfiable'
    substructure: 'FirstOrder.Language.Substructure'
    definable set: 'Set.Definable'
    elementary embedding: 'FirstOrder.Language.ElementaryEmbedding'
    Compactness theorem: 'FirstOrder.Language.Theory.isSatisfiable_iff_isFinitelySatisfiable'
    L√∂wenheim-Skolem: 'FirstOrder.Language.exists_elementaryEmbedding_card_eq'
